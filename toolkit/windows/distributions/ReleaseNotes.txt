*******************************************************************************

Preliminary Release Notes for WinGlobus 2.4

Version 1.1

Monday, December 1, 2003

Bob Gaffaney

gaffaney@mcs.anl.gov

*******************************************************************************

---------
New Notes

11/21/03 Distribution

The lack of non-threaded versions of the Callout and GSI libraries has been
rectified. Note that these libraries follow the same naming convention as 
other libraries: xxx_win32dbg.lib and xxx_win32dbgthr.lib for non-threaded
and threaded versions respectively.

Some new blocks of code in gsi\sysconfig had not been ported in the previous
release. This has been rectified in this release

A new note has been added below for the SSL Libraries.


------------
Introduction

Globus 2.x comprises a huge body of code. Not all of it has been ported to 
Windows, but a good deal of the client side modules have.

Some of these modules are fairly mature, while others, notably GSI and CALLOUT
are brand new. Thi source code in this distribution can be found in the Globus 
CVS Repository under the tag win32_merge_tag. At this point in time this tag
is very nearly "the trunk" but we tagged the archive to make this distribution
reproducible.

This is both a 'Source' and a 'Binary' distribution. All of the libraries and 
executibles have been built and are in the \lib and \bin directories. All of
the source files have been included as well as Visual Studio Solution and
Project files to allow building things localy,

Each of the included modules has a Visual Studio Solution file that is use to
build all of the libraries and executables for that module. The Solution files
(.SLN) should be used to open the modules rather than the project files (.VCPROJ)
or Visual Studio will create a seperate Solution for each Project.

Build Tree
----------

The distribution may be copied anywhere, but use the Windows Console SUBST 
command such the tree is based in the root of the SUBST drive. For example
if the distribution is unizipped to c:\WinGlobus and w: is SUBST'd for 
c:\WinGlobus, the top of the build tree looks like this. (Note: If this is
not done Visual Studio will be unable to build the modules)

   W:\
      BIN                Executibles and DLLs
      LIB                Static Libraries and Link Libraries   
      INCLUDE            Include directory tree
      CORE               Core Module tree
      COMMON             Common Module tree
      IO                 IO Module tree
      GRIDFTP            GridFTP Module tree
      GSI                GSI Module tree
      CALLOUT            Callout Module tree
      GASS               GASS Module tree
      GRAM               GRAM Module tree

Included Modules
----------------

   CORE      Include files only, no libraries
    
   COMMON    Single-threaded and multi-threaded versions of the Common 
             library. Also contains fifteen test applications. There is
             
             The Solution file is \Common\source\win32\common.sln
    
   IO        Single-threaded and multi-threaded versions of the IO 
             library. Also contains several tests.
             
             The Solution file is \IO\source\win32\io.sln
    
   GRIDFTP   Single-threaded and multi-threaded versions of the GridFTP
             Client and Control Libraries.
    
             Solution file is \Gridftp\client\source\win32\gridftp.sln
    
   CALLOUT   Single-threaded version of the Callout library. Also includes
             a project to build the DLL version of the Callout library 
             which is not presently used. There is a test application and
             a project for a DLL that is loaded dynamically by the test.
             
             Solution file is \Callout\source\win32\callout.sln

   GSI       Multi-threaded versions of the following GSI Libraries:

                  openssl_module
                  gss_assist
                  gssapi
                  cert_utils
                  gridmap_callout
                  gridmap_callout_error
                  gssapi_error
                  callback
                  old_gaa
                  credential
                  sys-config
                  openssl_error
                  proxy_core
                  proxy_ssl
                    
             The solution also contains several test applications. See
             the general note below on these applications.

             Solution file is \Gsi\Callback\source\win32\gsi.sln
    
   GASS      Multi-threaded and single-threaded versions of the GASS Copy
             and GASS Transfer libraries and a single-threaded version of
             GASS Server EZ. Two test applications are also included.
             
             Solution file is \Gass\copy\source\win32\gass.sln
    
   GRAM      Multi-threaded versions of the GASS Client and GASS 
             Protocol libraries.
    
                Solution file is \Gram\Client\source\win32\gram.sln

   Note: there is minimal documentation on the tests so it may be necessary
         to look at the source code to see what they do and what arguments 
         are needed. These are tests developed for the Linux platform and a
         few of them don't run because they have dependencies on unix things
         like fork(). Feel free to fix these up and submit the changes!


--------------------
OpenSSL Distribution

The Windows Globus release uses version 9.7c of OpenSSL.

Applications must use the SSL link libraries and binaries provided in the 
release (ssleay32.lib, ssleay32.dll, libeay32.lib, libeay32.dll). The reason
for this is that GSI makes use of some SSL functions that are not exported in 
the distribution release of SSL and the def file had to be tweaked to make 
these availiable. Using the distribution release will result in undefined
externals during the link process.

          
Known Issues
------------

    This is a huge body of code and it has minimal run time at this point 
    minimal. Please let us know how well it runs (or not). It is our goal 
    to make Globus as stable and functional on Windows as it is on the 
    Unix platforms.
    
    Threaded and non-threaded versions of the library should not be mixed.
    
    Feel free to contact me at gaffaney@mcs.anl.gov with questions, 
    comments or requests.
    
    Bob Gaffaney
