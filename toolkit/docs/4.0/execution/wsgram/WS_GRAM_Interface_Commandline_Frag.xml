<!--  <warning><simpara>The managed-job-globusrun command-line tool has been deprecated. 
    Please use globusrun-ws for all job submissions to GRAM.</simpara></warning>-->


<refentry id="globusrun-ws">
    <refmeta>
        <refentrytitle>globusrun-ws</refentrytitle>
        <manvolnum>1</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>globusrun-ws</refname>
        <refpurpose>Official job submission client for WS GRAM</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <cmdsynopsis>
            <command>globusrun-ws -submit</command>
            <arg>-batch</arg>
            <arg>-quiet</arg>
            <arg>-no-cleanup</arg>
            <arg>-streaming</arg>
            <arg>-streaming-out <replaceable>filename</replaceable></arg>
            <arg>-streaming-err <replaceable>filename</replaceable></arg>
            <arg>-host-authz</arg>
            <arg>-self-authz</arg>
            <arg>-subject-authz <replaceable>subject name</replaceable></arg>
            <arg>-private</arg>
            <arg>-http-timeout <replaceable>milliseconds</replaceable></arg>
            <arg>-debug</arg>
            <arg>-allow-ipv6</arg>
            <arg>-passive</arg>
            <arg>-nodcau</arg>
            <group>
                <arg>-factory-epr-file <replaceable>filename</replaceable></arg>
                <group>
                    <arg>-factory <replaceable>contact</replaceable></arg>
                    <arg>-factory-type <replaceable>type</replaceable></arg>
                </group>
            </group>
            <group>
                <arg>-submission-id <replaceable>uuid</replaceable></arg>
                <arg>-submission-id-file <replaceable>filename</replaceable></arg>
            </group>
            <arg>-submission-id-output-file <replaceable>filename</replaceable></arg>
            <arg>-job-epr-output-file <replaceable>filename</replaceable></arg>
            <arg>-job-delegate</arg>
            <arg>-staging-delegate</arg>
            <arg>-job-credential-file <replaceable>filename</replaceable></arg>
            <arg>-staging-credential-file <replaceable>filename</replaceable></arg>
            <arg>-transfer-credential-file <replaceable>filename</replaceable></arg>
            <arg>-termination
                <group>
                    <option>+HH:MM</option>
                    <option>mm/dd/yyyy HH:MM</option>
                </group>
            </arg>
            <group>
                <arg>-job-description-file <replaceable>filename</replaceable></arg>
                <arg>-job-command <arg>--</arg> <replaceable>program arg ...</replaceable></arg>
            </group>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>globusrun-ws -validate</command>
            <arg choice="plain">-job-description-file <replaceable>filename</replaceable></arg>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>globusrun-ws -monitor</command>
            <arg choice="plain">-job-epr-file <replaceable>filename</replaceable></arg>
            <arg>-quiet</arg>
            <arg>-no-cleanup</arg>
            <arg>-streaming</arg>
            <arg>-streaming-out <replaceable>filename</replaceable></arg>
            <arg>-streaming-err <replaceable>filename</replaceable></arg>
            <arg>-host-authz</arg>
            <arg>-self-authz</arg>
            <arg>-subject-authz <replaceable>subject name</replaceable></arg>
            <arg>-private</arg>
            <arg>-http-timeout <replaceable>milliseconds</replaceable></arg>
            <arg>-debug</arg>
            <arg>-allow-ipv6</arg>
            <arg>-passive</arg>
            <arg>-nodcau</arg>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>globusrun-ws -status</command>
            <arg choice="plain">-job-epr-file <replaceable>filename</replaceable></arg>
            <arg>-host-authz</arg>
            <arg>-self-authz</arg>
            <arg>-subject-authz <replaceable>subject name</replaceable></arg>
            <arg>-private</arg>
            <arg>-http-timeout <replaceable>milliseconds</replaceable></arg>
            <arg>-debug</arg>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>globusrun-ws -kill</command>
            <arg choice="plain">-job-epr-file <replaceable>filename</replaceable></arg>
            <arg>-host-authz</arg>
            <arg>-self-authz</arg>
            <arg>-subject-authz <replaceable>subject name</replaceable></arg>
            <arg>-private</arg>
            <arg>-http-timeout <replaceable>milliseconds</replaceable></arg>
            <arg>-debug</arg>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>globusrun-ws -help</command>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>globusrun-ws -usage</command>
            <arg>-submit</arg>
            <arg>-validate</arg>
            <arg>-monitor</arg>
            <arg>-status</arg>
            <arg>-kill</arg>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>globusrun-ws -version(s)</command>
        </cmdsynopsis>
    </refsynopsisdiv>
    
    <refsect1 id="globusrun-ws-description"><title>Description</title>
        <para>
            globusrun-ws (WS GRAMclient) is a program for submitting and
            managing jobs to a local or remote job host. WS GRAMprovides secure
            job submission to many types of <glossterm linkend="job-scheduler">job scheduler</glossterm> for users who have the
            right to access a job hosting resource in a Grid environment. All
            WS GRAMsubmission options are supported transparently through the
            embedded request document input. <computeroutput>globusrun-ws</computeroutput> offers
            additional features to fetch job output files incrementally during the
            run as well as to automatically delegate credentials needed for
            certain optional WS GRAMfeatures. Online and batch submission modes
            are supported with reattachment (recovery) for jobs whether they were
            started with this client or another WS GRAMclient application.
        </para>
    </refsect1>
    
    <refsect1 id="globusrun-ws-commandoptions"><title>Command options</title>
        
        
        
        
        
        
        
        
        <refsect2><title>Quiet mode</title>
            
            <para>
                A variety of protocol status messages, warning messages, and output
                data may be printed to standard output and error under multiple
                command modes. The <emphasis>quiet mode</emphasis> suppresses all but fatal standard
                error messages in order to have clean outputs for use in scripting or
                with the <emphasis>streaming output mode</emphasis> where application output is
                retrieved and output.
            </para>
            
            <variablelist>
                
                <varlistentry><term>-q, -quiet</term><listitem>
                    
                    <para>
                        If supplied, all non-fatal status and protocol-related messages are
                        suppressed.
                    </para>
                </listitem></varlistentry>
                
            </variablelist>
            
            
        </refsect2><refsect2><title>Debug mode</title>
            
            <variablelist>
                <varlistentry><term>-dbg, -debug</term><listitem>
                    
                    <para>
                        If supplied, all soap messages and ftp control messages will be displayed on stderr.
                    </para>
                </listitem></varlistentry>
                
            </variablelist>
            
        </refsect2><refsect2><title>Protocol Options</title>
            
            <refsect3><title>Service authorization</title>
                
                <para>
                    Usually, secure communication includes mutual authentication. In
                    addition to the service authorizing the client for the requested
                    operation(s), an authorization decision is made by the client to
                    determine whether the remote service is the one intended.
                </para>
                
                <variablelist>
                    
                    <varlistentry><term>-host, -host-authz</term><listitem>
                        
                        <para>
                            The GSI "host authorization" rule is used to verify that the service
                            is using a host credential appropriate for the underlying service
                            address information. This is the default.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-self, -self-authz</term><listitem>
                        
                        <para>
                            The GSI "self authorization" rule is used to verify that the service
                            is using a (proxy) credential derived from the same identity as the
                            client's.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-subject, -subject-authz <emphasis role="underline">subject name</emphasis></term><listitem>
                        
                        <para>
                            The service must be using a credential with the exact subject name
                            provided by this option.
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
                
            </refsect3><refsect3><title>Security Protocol</title>
                
                <para>
                    The client uses secure transport for all https endpoints and secure message
                    for http.  Secure conversation is currently unsupported.
                </para>
                <variablelist>
                    <varlistentry><term>-p, -private</term><listitem>
                        
                        <para>
                            If supplied, privacy-protection is enabled between globusrun-ws and
                            WS GRAMor GridFTP services. It is a fatal error to select privacy
                            protection if it is not available due to build options or other
                            security settings.
                            
                            <emphasis role="bold">Note:</emphasis> Currently only supported with https endpoints.
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
                
            </refsect3><refsect3><title>Timeouts</title>
                
                <variablelist>
                    
                    <varlistentry><term>-T, -http-timeout <emphasis role="underline">milliseconds</emphasis></term><listitem>
                        
                        <para>
                            Set timeout for HTTP socket, in milliseconds, for all Web services
                            interactions. The default value is 120000 (2 minutes).
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
            </refsect3>
        </refsect2>
        
        <refsect2><title>Signal handling</title>
            
            <variablelist>
                
                <varlistentry><term>-n, -no-cleanup</term><listitem>
                    
                    <para>
                        If supplied, the default behavior of trapping interrupts (SIG_INTR)
                        and cancelling the job is disabled. Instead, the interrupt simply
                        causes the tool to exit without affecting the ManagedJob resource.
                    </para>
                </listitem></varlistentry>
            </variablelist>
        </refsect2>
        
        <refsect2><title>Submit options</title>
            <variablelist>
                <varlistentry><term>-submit</term><listitem>
                    <para>
                        The -submit command submits (or <emphasis>resubmits</emphasis>) a job to a
                        job host using an
                        <ulink url="http://www.globus.org/toolkit/docs/4.0/execution/wsgram/WS_GRAM_Public_Interfaces.html#s-wsgram-Public_Interfaces-domain">XML-based job description</ulink>
                        document. The -submit command can submit jobs in one of three output modes:
                        batch, interactive, or interactive-streaming.
                    </para>
                </listitem></varlistentry>
            </variablelist>
            
            <refsect3><title>Output Mode</title>
                <para>
                    The user can select several tool behaviors following submission. In
                    <emphasis>batch mode</emphasis>, the tool prints the resulting ManagedJob EPR as the
                    sole standard output (unless in <emphasis>quiet mode</emphasis>) and exits. In
                    <emphasis>interactive mode</emphasis>, the tool keeps running in order to monitor
                    job status. Interactive mode is qualitatively equivalent to a
                    batch-mode submission immediately followed a second invocation of
                    globusrun-ws using the -monitor command. In interactive mode, an
                    optional <emphasis>streaming mode</emphasis> where job output files are fetched and
                    output from globusrun-ws.
                </para>
                
                <variablelist>
                    
                    <varlistentry><term>-b, -batch</term><listitem>
                        
                        <para>
                            If supplied, the batch mode is enabled. The default is interactive mode.
                            The tool prints the resulting ManagedJob EPR as
                            the sole standard output (unless in quiet mode) and exits.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-s, -streaming</term><listitem>
                        
                        <para>
                            The standard output and standard error files of the job are monitored
                            and data is written to the corresponding output of globusrun-ws. The
                            standard output will contain ONLY job output data, while the standard
                            error may be a mixture of job error output as well as globusrun-ws
                            messages, unless the <emphasis>quiet mode</emphasis> is also enabled.
                        </para>
                        
                        <para>
                            Streaming output depends on the ability to access job outputs via
                            GridFTP. If -streaming mode is selected and the <glossterm linkend="job-description">job description</glossterm> does not
                            already specify output file redirection for the job host, then
                            globusrun-ws adds unique output file name redirections and automatic
                            cleanup directives to the job description.
                        </para>
                        
                        <para>
                            If you are using -batch mode, but intend to use -streaming with -monitor,
                            you may want to still include -streaming.  -streaming always introduces
                            a 'CleanUp Hold' state which ensures that all the data is streamed before the
                            files are destroyed.  If you do use -streaming with -batch, you <emphasis role="bold">must</emphasis>
                            come back with -monitor so the hold can be released.
                        </para>
                        <para>
                            This option implies -staging-delegate if the stdout and stderr entries are not specified in the job description.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-so, -stdout-file <emphasis role="underline">filename</emphasis></term><listitem>
                        
                        <para>
                            append stdout out stream to the specified file instead of to stdout.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-se, -stderr-file <emphasis role="underline">filename</emphasis></term><listitem>
                        
                        <para>
                            append stderr out stream to the specified file instead of to stderr.
                        </para>
                    </listitem></varlistentry>
                </variablelist>
                
            </refsect3><refsect3><title>Streaming Options</title>
                
                <para>Streaming makes use of GridFTP client calls to retrieve user data.  The
                    following options apply to such transfers.
                </para>
                
                <variablelist>
                    <varlistentry><term>-ipv6, -allow-ipv6</term><listitem>
                        
                        <para>
                            Allow streaming transfers to use IPV6.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-passive</term><listitem>
                        
                        <para>
                            Force streaming transfers to use MODE S to allow for passive mode
                            transfers. (Useful if you're behind a firewall, but expensive
                            because there is no connection caching).
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-nodcau</term><listitem>
                        
                        <para>
                            Disable data channel authentication on streaming transfers
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
                
                
            </refsect3><refsect3><title>Factory information</title>
                
                <para>
                    Addressing information for the ManagedJobFactory target of this
                    submission must be provided. If neither option is specified, and no
                    EPR is supplied in the job description, then "-factory localhost
                    -factory-type fork" is assumed.
                </para>
                
                <variablelist>
                    
                    <varlistentry><term>-Ff, -factory-epr-file <emphasis role="underline">filename</emphasis></term><listitem>
                        
                        <para>
                            If supplied, this option causes the EPR for the ManagedJobFactory to
                            be read from the given file. This EPR is used as the service endpoint
                            for submission of the job.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-F, -factory <emphasis role="underline">contact</emphasis></term><listitem>
                        
                        <para>
                            If supplied, this option causes an EPR to be constructed using ad-hoc
                            methods that depend on GT implementation details.  For
                            interoperability to other implementations of WS_GRAM, the
                            -factory-epr-file option should be used instead.
                        </para>
                        
                        <blockquote><para>
                            [<emphasis role="underline">protocol</emphasis>://]{<emphasis role="underline">hostname</emphasis>|<emphasis role="underline">hostaddr</emphasis>}[:<emphasis role="underline">port</emphasis>][/<emphasis role="underline">service</emphasis>]
                        </para></blockquote>
                        
                        <para>
                            Default values form the following contact information if not overridden:
                        </para>
                        
                        <blockquote><para>https://localhost:8443/wsrf/services/ManagedJobFactoryService</para></blockquote>
                        
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-Ft, -factory-type <emphasis role="underline">type</emphasis></term><listitem>
                        
                        <para>
                            In the absence of -factory-epr-file, this option refines the behavior of the
                            -factory option to select a specific type of scheduler. The default is "Fork"
                            for single jobs and "Multi" for <glossterm linkend="multijob">multijobs</glossterm>.
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
                
            </refsect3><refsect3><title>Job description</title>
                
                <para>
                    A description of the job to be submitted must be provided with the
                    -submit command, either using the WS GRAMXML description syntax or a
                    simpler Unix command and argument list.
                </para>
                
                <variablelist>
                    
                    <varlistentry><term>-f, -job-description-file <emphasis role="underline">filename</emphasis></term><listitem>
                        
                        <para>
                            If supplied, this option causes the job description to be read from
                            the given file.  This description is modified according to the other
                            options and passed in the WS GRAMsubmission messages.  The root element of
                            this file must be 'job' for a single job or 'multiJob' for a multijob.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-c, -job-command [--] <emphasis role="underline">prog</emphasis> [<emphasis role="underline">arg</emphasis> ...]</term><listitem>
                        
                        <para>
                            If supplied, this option take all remaining globusrun-ws arguments as
                            its arguments; therefore it must appear last among globusrun-ws
                            options. This option causes globusrun-ws to generate a simple job
                            description with the named program and arguments.
                        </para>
                    </listitem>
                    </varlistentry>
                </variablelist>
                
            </refsect3><refsect3><title>Submission ID</title>
                
                <para>
                    A submission ID may be used in the WS GRAMprotocol for robust
                    reliability in the face of message faults or other transient errors to
                    ensure that at most one instance of a job is executed, i.e. to prevent
                    accidental duplication of jobs under rare circumstances with client
                    retry on failure. The globusrun-ws tool always uses this feature,
                    requiring either a submission ID to be passed in as input or a new
                    unique ID to be created by the tool itself. If a new ID is created, it
                    should be captured by the user who wishes to exploit this reliability
                    interface. The ID in use, whether created or passed as input, will be
                    written to the optional output file when provided, as well as to the
                    standard error output unless the <emphasis>quiet mode</emphasis> is in
                    effect.
                </para>
                
                <para>
                    If a user is unsure whether a job was submitted successfully, he
                    should resubmit using the same ID as was used for the previous
                    attempt.
                </para>
                
                <variablelist>
                    
                    <varlistentry><term>-I, -submission-id <emphasis role="underline">ID</emphasis></term><listitem>
                        
                        <para>
                            If supplied, this option causes the job to be submitted using the
                            given ID in the reliability protocol.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-If, -submission-id-file <emphasis role="underline">filename</emphasis></term><listitem>
                        
                        <para>
                            If supplied, this option causes the ID to be read from the given
                            file. It is an error to use both mechanisms to provide an input ID.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-Io, -submission-id-output-file <emphasis role="underline">filename</emphasis></term><listitem>
                        
                        <para>
                            If supplied, the ID in use is written to the given file, whether this
                            ID was provided by the user or given by one of the above input
                            options.
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
                
            </refsect3><refsect3><title>Job EPR output</title>
                
                <para>
                    A successful submission will create a new ManagedJob resource with its
                    own unique EPR for messaging. The globusrun-ws tool will output this
                    EPR to a file when requested and as the sole standard output when
                    running in batch mode. When running in streaming output mode, it is
                    possible that the EPR will not be output and the user's only recourse
                    is to submit again with the same submission ID and job request in
                    order to reattach to the existing job.
                </para>
                
                <variablelist>
                    
                    <varlistentry><term>-o, -job-epr-output-file <emphasis role="underline">filename</emphasis></term><listitem>
                        
                        <para>
                            If supplied, the created ManagedJob EPR will be written to the given
                            file following successful submission. The file will not be written if
                            the submission fails.
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
                
            </refsect3><refsect3><title>Delegation</title>
                
                <para>
                    The job description supports the optional identification of delegated
                    credentials for use by the WS GRAMservices.  These features are
                    passed through globusrun-ws without modification. However,
                    globusrun-ws can also perform delegation and construct these optional
                    request elements before submitting it to the service. The only delegation
                    performed by default (if an endpoint does not already exist) is the multijob
                    level jobCredential.
                </para>
                
                <variablelist>
                    
                    <varlistentry><term>-J, -job-delegate</term><listitem>
                        
                        <para>
                            If supplied AND the job description does not already provide a jobCredential
                            element, globusrun-ws will delegate
                            the client credential to WS GRAMand introduce the corresponding
                            element to the submission input.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-S, -staging-delegate</term><listitem>
                        
                        <para>
                            If supplied AND the job description does include staging or cleanup
                            directives AND the job description does not already provide the
                            necessary stagingCredential or 
                            transferCredential element(s),
                            globusrun-ws will delegate the client credential to WS GRAM and RFT, and
                            introduce the corresponding elements to the submission input.
                        </para>
                        
                        <para>This option is implied by -streaming</para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-Jf, -job-credential-file <emphasis role="underline">filename</emphasis>:</term><listitem>
                        
                        <para>
                            If supplied AND the job description does not already provide a
                            jobCredential element, globusrun-ws will copy the supplied epr into
                            the job description.  This should be an epr returned from the
                            DelegationFactoryService intended for use by the job (or, in the
                            case of a multijob, for authenticating to the subjobs).
                        </para>
                        <para>
                            <emphasis role="bold">note</emphasis>: for multijob descriptions, only the top level jobCredential
                            will be copied into.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-Sf, -staging-credential-file <emphasis role="underline">filename</emphasis>:</term><listitem>
                        
                        <para>
                            If supplied AND the job description does not already provide a
                            stagingCredential element, globusrun-ws will copy the supplied epr
                            into the job description.  This should be an epr returned from the
                            DelegationFactoryService intended for use with the RFT service
                            associated with the ManagedJobService.
                        </para>
                        <para>
                            <emphasis role="bold">note</emphasis>: this option is ignored for multijobs.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-Tf, -transfer-credential-file <emphasis role="underline">filename</emphasis>:</term><listitem>
                        
                        <para>
                            If supplied, globusrun-ws will copy the epr into each of the
                            stage in, stage out, and cleanup elements that do not already
                            contain a transferCredential element.  This should be an epr
                            returned from the DelegationFactoryService intended for use by
                            RFT to authenticate with the target gridftp server.
                        </para>
                        <para>
                            <emphasis role="bold">note</emphasis>: this option is ignored for multijobs.
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
                
            </refsect3><refsect3><title>Lifetime</title>
                
                <para>
                    The ManagedJob resource supports lifetime management in the form of a
                    scheduled destruction. The default lifetime requested by the client is
                    infinite, subject to server policies.
                </para>
                
                <variablelist>
                    
                    <varlistentry><term>-term, -termination <emphasis role="underline">mm/dd/yyyy HH:MM</emphasis></term><listitem>
                        
                        <para>
                            Set an absolute termination time.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-term, -termination +<emphasis role="underline">HH:MM</emphasis></term><listitem>
                        
                        <para>
                            Set a termination time relative to the successful creation of the
                            job. The default is +24:00
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
            </refsect3>
        </refsect2>
        
        
        <refsect2><title>Validate options</title>
            <variablelist>
                <varlistentry><term>-validate</term><listitem>
                    <para>
                        The -validate command checks the job description for syntax errors and a
                        subset of semantic errors without making any service requests.
                    </para>
                </listitem></varlistentry>
            </variablelist>
            
            <refsect3><title>Job description</title>
                <variablelist>
                    
                    <varlistentry><term>-f, -job-description-file <emphasis role="underline">filename</emphasis></term><listitem>
                        
                        <para>
                            This option causes the job description to be read from the given file.
                            This description is checked for validity.
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
            </refsect3>
        </refsect2>
        
        <refsect2><title>Monitor options</title>
            <variablelist>
                <varlistentry><term>-monitor</term><listitem>
                    <para>
                        The -monitor command attaches to an existing job in interactive or
                        interactive-streaming output modes.
                    </para>
                </listitem></varlistentry>
            </variablelist>
            
            <refsect3><title>Job</title>
                <para>
                    Addressing information for the ManagedJob target of this command
                    must be provided.
                </para>
                
                <variablelist>
                    
                    <varlistentry><term>-j, -job-epr-file <emphasis role="underline">filename</emphasis></term><listitem>
                        
                        <para>
                            If supplied, this option causes the EPR for the ManagedJob to be read
                            from the given file. This EPR is used as the endpoint for service
                            requests.
                        </para>
                    </listitem></varlistentry>
                    
                </variablelist>
                
            </refsect3><refsect3><title>Output mode</title>
                
                <para>
                    In the default <emphasis>interactive mode</emphasis>, the tool keeps running in
                    order to monitor job status.  In the optional <emphasis>interactive-streaming
                        mode</emphasis>, the job output files are fetched and output from
                    globusrun-ws as well.
                </para>
                
                <variablelist>
                    
                    <varlistentry><term>-s, -streaming</term><listitem>
                        
                        <para>
                            See Output mode under Submit Options above for details on streaming.
                        </para>
                    </listitem></varlistentry>
                </variablelist>
            </refsect3>
        </refsect2>
        
        <refsect2><title>Status options</title>
            <variablelist>
                <varlistentry><term>-status</term><listitem>
                    <para>
                        The -status command reports the current state of the job and exits.
                        See the
                        <ulink url="http://www.globus.org/toolkit/docs/4.0/execution/wsgram/developer-index.html#s-wsgram-developer-archdes-states-external">External States of the Managed Job Services</ulink>
                        section of the developer guid for information on valid job states.
                    </para>
                </listitem></varlistentry>
            </variablelist>
            
            <para>
                See the Job options for the -monitor command.
            </para>
        </refsect2>
        
        <refsect2><title>Kill options</title>
            <variablelist>
                <varlistentry><term>-kill</term><listitem>
                    <para>
                        The -kill command requests the immediate cancellation of the job and exits.
                    </para>
                </listitem></varlistentry>
            </variablelist>
        </refsect2>
        
        <refsect2><title>Help options</title>
            <variablelist>
                <varlistentry><term>-help</term><listitem>
                    <para>
                        Outputs an overview of the commands and features of the command.
                    </para>
                </listitem></varlistentry>
            </variablelist>
        </refsect2>
        
        <refsect2><title>Usage options</title>
            <variablelist>
                <varlistentry><term>-usage</term><listitem>
                    <para>
                        Outputs brief usage information for the command.
                    </para>
                </listitem></varlistentry>
            </variablelist>
        </refsect2>
        
        <refsect2><title>Version options</title>
            <variablelist>
                <varlistentry><term>-version</term><listitem>
                    <para>
                        Outputs version information for the command.
                    </para>
                </listitem></varlistentry>
            </variablelist>
        </refsect2>
        
    </refsect1>
    
    <refsect1 id="globusrun-ws-jobhandling"><title>Job Handling</title>
        
        <para>
            For every job that globusrun-ws delegates a credential, globusrun will augment
            the user's job description, adding annotations that will later tell
            globusrun-ws to destroy the credential after the job has been destroyed.
            Below are 2 job annotation examples.
            
            globusrun-ws only delegated the job cred...
            <screen>
                &lt;extensions&gt;
                &lt;globusrunAnnotation&gt;
                &lt;automaticJobDelegation&gt;true&lt;/automaticJobDelegation&gt;
                &lt;automaticStagingDelegation&gt;false&lt;/automaticStagingDelegation&gt;
                &lt;automaticStageInDelegation&gt;false&lt;/automaticStageInDelegation&gt;
                &lt;automaticStageOutDelegation&gt;false&lt;/automaticStageOutDelegation&gt;
                &lt;automaticCleanUpDelegation&gt;false&lt;/automaticCleanUpDelegation&gt;
                &lt;/globusrunAnnotation&gt;
                &lt;/extensions&gt;
            </screen>
            
            globusrun-ws delegated the job, staging and stage in cred...
            <screen>
                &lt;extensions&gt;
                &lt;globusrunAnnotation&gt;
                &lt;automaticJobDelegation&gt;true&lt;/automaticJobDelegation&gt;
                &lt;automaticStagingDelegation&gt;true&lt;/automaticStagingDelegation&gt;
                &lt;automaticStageInDelegation&gt;true&lt;/automaticStageInDelegation&gt;
                &lt;automaticStageOutDelegation&gt;false&lt;/automaticStageOutDelegation&gt;
                &lt;automaticCleanUpDelegation&gt;false&lt;/automaticCleanUpDelegation&gt;
                &lt;/globusrunAnnotation&gt;
                &lt;/extensions&gt;
            </screen>
        </para>
    </refsect1>
    <refsect1 id="globusrun-ws-environment"><title>Environment</title>
        
        <variablelist>
            
            <varlistentry><term>X509_USER_PROXY</term><listitem>
                
                <para>
                    Overrides the default selection of user credentials when using GSI security.
                </para>
            </listitem></varlistentry>
            
        </variablelist>
        
    </refsect1>
    
    <refsect1 id="globusrun-ws-exitcodes"><title>Exit Codes</title>
        
        <para>
            The client returns negative error codes for client errors, 0 for success,
            and positive error codes from the submitted job (where possible)
        </para>
    </refsect1>
</refentry>

<refentry id="managed-job-globusrun">
    <refmeta>
        <refentrytitle>managed-job-globusrun</refentrytitle>
        <manvolnum>1</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>managed-job-globusrun</refname>
        <refpurpose>(DEPRECATED) Java-based job submission client for GRAM</refpurpose>
    </refnamediv>
    <refsynopsisdiv><cmdsynopsis>
        <command>managed-job-globusrun</command>
    </cmdsynopsis>
    </refsynopsisdiv>
    
    <refsect1 id="managed-job-globusrun-tooldescription"><title>Tool Description</title>
        <warning>
            <simpara>This tool has been deprecated in this version and is only documented here because it may be useful for some testing purposes only.</simpara>
            <simpara>Use <link linkend="globusrun-ws">globusrun-ws</link> instead.</simpara>
        </warning>
        <para><computeroutput>managed-job-globusrun</computeroutput> is a Java-based job
            submission tool for the [WS] GRAM (i.e. it is a program for submitting jobs to a
            local or remote host and managing those jobs via the GRAM services). 
            GRAM services provide secure job submission to many types of job schedulers 
            for users who have the right to access a job hosting resource in a Grid environment. 
            All GRAM job submission options are supported transparently through the
            embedded request document input. In fact, the job startup is done by submitting 
            a client-side provided job description (<glossterm linkend="rsl">RSL</glossterm> document in GT2).
            to the GRAM services.</para>
        
        <para>In addition to starting jobs, it is possible to delegate credentials needed for
            certain optional GRAM features, query the state of a previously 
            started job and parse a job description file without making any submission.
            Online and batch submission modes are supported with reattachment (recovery) 
            for jobs whether they were started with this client or another GRAM client 
            application.</para>
        
        <para><emphasis>Note:</emphasis> the existence of a valid proxy is required for essentially all
            supported operations but job description file parsing (<command>-p</command>). In order 
            to generate a valid proxy file, use the grid-proxy-init tool available 
            under $GLOBUS_LOCATION/bin.</para>
    </refsect1>
    <refsect1 id="managed-job-globusrun-commandsyntax"><title>Command Syntax</title>
        
        <refsect2><title>Arguments</title>
            <screen>managed-job-globusrun [options] [&lt;factory&gt;] &lt;job description&gt;
                managed-job-globusrun -p -file &lt;job description filename&gt;
                managed-job-globusrun (-state | -release | -kill) &lt;job handle&gt;
                managed-job-globusrun -help | -usage | -version</screen>
            <para>with</para>
            <screen>&lt;job description&gt;     = -file &lt;job description filename&gt; | &lt;command line&gt;
                &lt;factory&gt; = -factory &lt;contact&gt; [-type &lt;type&gt;]
                &lt;contact&gt; = [&lt;protocol&gt;://]&lt;host&gt;[:[port]][/&lt;service&gt;]
                [options] = [-q] [-n]
                [-b] [-duration] [-terminate-at]
                [-auth &lt;auth&gt;] [-xmlsec &lt;sec&gt;] [-personal]
                [-submission-id &lt;ID&gt;]
            </screen>
            
        </refsect2>
        
        <refsect2><title>Options</title>
            <table><title>Options for managed-job-globusrun</title>
                <tgroup cols="2">
                    <colspec colname="c1"/>
                    <colspec colname="c2"/>
                    <tbody>
                        <row>
                            <entry namest="c1" nameend="c2">Help options </entry>
                        </row>
                        <row>
                            <entry><command>-help</command></entry>
                            <entry>Displays help information about the command. </entry>
                        </row>
                        <row>
                            <entry><command>-usage</command></entry>
                            <entry>Displays usage of the command.</entry>
                        </row>
                        <row>
                            <entry><command>-v, -version</command></entry>
                            <entry>Displays version of the command.</entry>
                        </row>
                        <row>
                            <entry namest="c1" nameend="c2">Job Factory Contact  options </entry>
                        </row>
                        <row>
                            <entry><command>-factory &lt;contact&gt;</command></entry>
                            <entry><para>Specifies the URL of the Job Factory Service
                                to contact when submitting or listing jobs.
                                A factory contact string can be specified in
                                the following ways:</para>
                                <itemizedlist>
                                    <listitem><simpara> host</simpara></listitem>
                                    <listitem><simpara> host:</simpara></listitem>
                                    <listitem><simpara> host:port</simpara></listitem>
                                    <listitem><simpara> host:port/service</simpara></listitem>
                                    <listitem><simpara> host/service</simpara></listitem>
                                    <listitem><simpara> host:/service</simpara></listitem>
                                </itemizedlist>        <para>          It is also possible to specify the protocol
                                    by prepending <command>protocol://</command> to each of the
                                    previous possibilities, bringing the total
                                    number of supported syntaxes to 12.</para>
                                <para>          For those factory contacts which omit the
                                    protocol, port or service field, the following default values
                                    are used, as the following table explains:
                                    
                                    
                                    <variablelist>
                                        <varlistentry><term>URL part</term><listitem><simpara>default value</simpara></listitem></varlistentry>
                                        <varlistentry><term>port</term><listitem><simpara>8080</simpara></listitem></varlistentry>
                                        <varlistentry><term>protocol</term><listitem><simpara>http</simpara></listitem></varlistentry>
                                        <varlistentry><term>service</term><listitem><simpara>/wsrf/services/ManagedJobFactoryService</simpara></listitem></varlistentry>
                                        
                                    </variablelist>
                                    Omitting altogether the -factory option is
                                    equivalent to specifying the local host as
                                    the contact string (with the implied default
                                    protocol, port and service).</para>
                            </entry>
                        </row>
                        <row>
                            <entry><command>-type &lt;factory type&gt;</command></entry>
                            <entry> Specifies the type of factory resource to use. This is
                                the name of the local resource manager. 
                                The default value is <emphasis>Fork</emphasis>.</entry>
                        </row>
                        <row>
                            <entry namest="c1" nameend="c2">Job Specification
                                options</entry>
                        </row>
                        <row>
                            <entry><command>&lt;command line&gt;</command></entry>
                            <entry><para>Creates a simple job description that only
                                consists of a command line of the form:</para>
                                <screen>'executable (argument)*'</screen>
                                <para>          Quotes must be used if there is one or more
                                    arguments.</para></entry>
                        </row>
                        <row>
                            <entry><command>-file &lt;job description filename&gt;</command></entry>
                            <entry><para> Reads job description from the local file &lt;job description filename&gt;.</para>
                                <para>      The job description must be a single job request.</para></entry>
                        </row>
                        <row>
                            <entry><command>-p</command></entry>
                            <entry><para>This option only parses the job description, and then prints either
                                a
                                success message or a parser failure. No job
                                will be submitted to any factory service.</para>
                                <para>      The job description must be a single job request.</para></entry>
                        </row>
                        <row>
                            <entry namest="c1" nameend="c2">Batch Operations options </entry>
                        </row>
                        <row>
                            <entry><command>-b, -batch</command></entry>
                            <entry><para>Do not wait for started
                                job to complete (and
                                do not destroy started job service on exit.) 
                                The handle of the job service will be
                                printed on the standard output.
                            </para>
                                <para>          This option is 
                                    incompatible with multi-request jobs. 
                                    Implies -quiet.</para></entry>
                        </row>
                        <row>
                            <entry><command>-state &lt;handle&gt;</command></entry>
                            <entry>Print out the state of the specified job. 
                                For a list of valid states, see the GRAM 
                                documentation [need link]; the current valid states are 
                                Pending, Active, Done, Suspended, and Failed. 
                                The handle may need to be quoted.</entry>
                        </row>
                        <row>
                            <entry><command>-r, -release &lt;handle&gt; </command></entry>
                            <entry><para>release the specified job from hold. The handle may need to be quoted.</para>
                            </entry>
                        </row>    
                        <row>
                            <entry><command>-k, -kill &lt;handle&gt; </command></entry>
                            <entry><para>Kill the specified job. The handle may need to be quoted.</para>
                                <para>Note: The &lt;handle&gt; argument is printed out
                                    when executing in batch mode or when using
                                    the -list option.</para>
                            </entry>
                        </row>
                        <row>
                            <entry namest="c1" nameend="c2">Job Resource Lifetime
                                options </entry>
                        </row>
                        <row>
                            <entry><command>-duration &lt;duration&gt;</command></entry>
                            <entry><para>Specify the duration of the job resource. The job
                                resource will destroy itself automatically
                                after the specified duration starting from
                                service creation.</para>
                                <itemizedlist>
                                    <listitem><simpara> Format: HH:mm</simpara></listitem>
                                    <listitem><simpara> Default: 24 hours.</simpara></listitem>
                                </itemizedlist>        <para>          Incompatible with -terminate-at. 
                                    Useful with -batch.</para></entry>
                        </row>
                        <row>
                            <entry><command>-terminate-at &lt;date&gt;</command></entry>
                            <entry><para>Specify the termination date/time of the job resource. 
                                Same as -duration but with an absolute date/time value.</para>
                                <itemizedlist>
                                    <listitem><simpara> Format: MM/dd/yyyy HH:mm</simpara></listitem>
                                    <listitem><simpara> Default: see -duration.</simpara></listitem>
                                </itemizedlist>  
                                <para>          The date expression may need to be quoted, 
                                    as in: </para>
                                <screen>-terminate-at '08/15/2005 11:30'</screen>
                                <para>          Incompatible with -duration. 
                                    Useful with -batch.</para></entry>
                        </row>
                        <row>
                            <entry namest="c1" nameend="c2">Security options </entry>
                        </row>
                        <row>
                            <entry><command>-auth &lt;auth&gt;</command></entry>
                            <entry>Set authorization type.<para>
                                Usually, secure communication includes 
                                mutual authentication. In addition to the service authorizing the client for the 
                                requested operation(s), an authorization decision is made by the client to determine 
                                whether the remote service is the one intended. Depending on the configured authorization  
                                type of the GRAM services (which by default is 'host'), the user must select a 
                                corresponding client-side authorization type &lt;auth&gt;.</para>
                                <para>&lt;auth&gt; can be:</para>
                                <itemizedlist>
                                    <listitem><simpara> <emphasis>host</emphasis> for host authorization (default): the GSI "host authorization" rule is 
                                        used to verify that the service is using a host credential appropriate 
                                        for the underlying service address information. This is the default.</simpara></listitem>
                                    <listitem><simpara> <emphasis>self</emphasis> for self authorization: the GSI "self authorization" rule is used 
                                        to verify that the service is using a (proxy) credential derived from the 
                                        same identity as the client's.</simpara></listitem>
                                    <listitem><simpara>an &lt;id&gt; for identity authorization: the service must be using a credential 
                                        with the exact subject name provided.</simpara></listitem>
                                </itemizedlist></entry>
                        </row>
                        <row>
                            <entry><command>-xmlsec &lt;sec&gt;</command></entry>
                            <entry> <para>Set message protection level. </para>
                                <para>&lt;sec&gt; can be:</para>
                                <itemizedlist>
                                    <listitem><simpara> <emphasis>sig</emphasis> for XML Signature (default)</simpara></listitem>
                                    <listitem><simpara> <emphasis>enc</emphasis> for XML Encryption.</simpara></listitem>
                                </itemizedlist></entry>
                        </row>
                        <row>
                            <entry><command>-personal</command></entry>
                            <entry>Shortcut for -auth self.</entry>
                        </row>
                        <row>
                            <entry><command>-proxy &lt;proxy file&gt;</command></entry>
                            <entry>Use &lt;proxy file&gt; instead of the default 
                                proxy credential file.</entry>
                        </row>
                        <row>
                            <entry><command>-deleg &lt;deleg&gt;</command></entry>
                            <entry> <para>Set delegation type. </para>
                                <para>&lt;deleg&gt; can be:</para>
                                <itemizedlist>
                                    <listitem><simpara> <emphasis>limited</emphasis> for limited delegation (default).</simpara></listitem>
                                    <listitem><simpara> <emphasis>full</emphasis> for full delegation</simpara></listitem>
                                    <listitem><simpara> <emphasis>none</emphasis> for no delegation</simpara></listitem>
                                </itemizedlist></entry>
                        </row>
                        <row>
                            <entry namest="c1" nameend="c2">Miscellaneous options </entry>
                        </row>
                        <row>
                            <entry><command>-q, -quiet</command></entry>
                            <entry><para>Switch quiet mode on, i.e. do not print diagnostic
                                messages when job state changes, in non-batch mode.</para><para>
                                    Disabled by default.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><command>-n, -no-interrupt</command></entry>
                            <entry>Disable interrupt handling. By default,
                                interrupt signals (typically generated by
                                <emphasis>Ctrl</emphasis> + <emphasis>C</emphasis>) cause the program to terminate the
                                currently submitted job. This flag disables
                                that behavior.</entry>
                        </row>
                        <row>
                            <entry><command>-timeout &lt;integer&gt;</command></entry>
                            <entry> <para>Set timeout for HTTP socket, in milliseconds.</para>
                                <para>          Applies to job submission only. The default value is 120000.</para></entry>
                        </row>
                        <row>
                            <entry><command>-submission-id &lt;ID&gt;</command></entry>
                            <entry> <para>Set the submission ID of a previous job submission 
                                for which no server response was received.</para><para>The ID can be used after 
                                    an attempted job submission in order to recover the handle to the job.</para></entry>
                        </row>    
                        <row>
                            <entry namest="c1" nameend="c2">GT2 globusrun
                                options NOT functional (yet)</entry>
                        </row>
                        <row>
                            <entry><command>-l, -list</command></entry>
                            <entry><para>NOT IMPLEMENTED ON SERVER SIDE YET.</para>
                                <para>List previously started and not destroyed
                                    job services for this user. The output of 
                                    this command consists of the handles and job description
                                    of the submitted jobs.</para>
                                <para>      Requires the -factory &lt;URL&gt; argument.</para></entry>
                        </row>
                        <row>
                            <entry><command>-dryrun</command></entry>
                            <entry><para>NOT IMPLEMENTED ON SERVER SIDE YET.</para>
                                <para>Augment the job description in order to mark this job as
                                    a dry run, if the job description does not already say
                                    so. This causes the job manager to stop
                                    short of starting the job, but still detect
                                    other job description errors (such as bad directory,
                                    bad executable, etc). An error message will
                                    be displayed if the dry run fails.</para>
                                <para>          Otherwise, a message will be displayed
                                    indicating that the dryrun was successful.</para></entry>
                        </row>
                        <row>
                            <entry><command>-authenticate-only</command></entry>
                            <entry>NOT IMPLEMENTED ON SERVER SIDE YET.</entry>
                        </row>
                    </tbody></tgroup>
            </table>
        </refsect2>
    </refsect1>
    
    
    
    <refsect1 id="managed-job-globusrun-newfunctionality"><title>New Functionality</title>
        
        <refsect2 id="managed-job-globusrun-substitutionvariables"><title>Substitution variables</title>
            <para>In GT 3.9.2, job description substitution variables had been removed from GRAM. 
                Starting with GT 3.9.5, substitution variables are available again, 
                while preserving the simplicity of the job description XML schema 
                (relative to the GT3.2 job description schema).
                Substitution variables can be used in any path-like string or URL 
                specified in the job description. They are special strings that are 
                replaced by the GRAM services with actual values that the client-side 
                does not <emphasis>a priori</emphasis> know. An example of substitution variable is 
                <command>${GLOBUS_USER_HOME}</command>, which represents the path to the 
                HOME directory on the file system visible by the GRAM services of the 
                user on behalf of whom the job is executed.
            </para>
            
            <para> 
                Details are in <ulink url="http://www.globus.org/toolkit/docs/4.0/execution/wsgram/schemas/gram_job_description.html">job description doc</ulink>
            </para>
            
        </refsect2><refsect2 id="managed-job-globusrun-submissionid"><title>Submission ID</title>
            <para>A submission ID may be used in the GRAM protocol for robust
                reliability in the face of message faults or other transient errors in order 
                to ensure that at most one instance of a job is executed, i.e. to prevent
                accidental duplication of jobs under rare circumstances with client
                retry on failure. The managed-job-globusrun tool always uses this feature,
                requiring either a submission ID to be passed in as input or a new
                unique ID to be created by the tool itself. If a new ID is created, it
                should be captured by the user who wishes to exploit this reliability
                interface. The ID in use, whether created or passed as input, will be
                written to the first line of standard output unless the <emphasis>quiet mode</emphasis> 
                is in effect.</para>
            
            <para>If a user is unsure whether a job was submitted successfully, he
                should resubmit using the same ID as was used for the previous
                attempt.</para>
            
        </refsect2><refsect2 id="managed-job-globusrun-jobholdandrelease"><title>Job hold and release</title>
            <para>
                It is possible to specify in a job description that the job be 
                put on hold when it reaches a chosen state (see <ulink url="../WS_GRAM_Approach.html">GRAM Approach</ulink>
                documentation for more information about the executable 
                job state machine, and the job description XML schema documentation 
                for information about how to specify a <ulink url="http://www.globus.org/toolkit/docs/4.0/execution/wsgram/schemas/mj_types.html">held state</ulink>
                This is useful for instance when a GRAM client wishes to directly 
                access output files written by the job (as opposed to waiting for 
                the stage-out step to transfer files from the job host). The client would  
                request that the file cleanup process be held until released, 
                giving the client an opportunity to fetch all remaining/buffered 
                data after the job completes but <emphasis>before</emphasis> the output files are 
                deleted. 
            </para><para>
                Note that the hold feature of the GRAM service interface is 
                not exploited by the current Java version of the client tool, 
                but will be in the C client in order to implement client-side 
                streaming of remote stdout/err. 
            </para><para>
                The current client tool does however
                <itemizedlist>
                    <listitem><simpara>automatically release a 
                        job remotely in interactive mode if the job is being held 
                        at any given state</simpara></listitem>
                    <listitem><simpara>offer an option (<command>-release</command>) for the user 
                        to release a job previously submitted in batch mode.</simpara></listitem>
                </itemizedlist>
            </para>
            
        </refsect2>
        
        <refsect2 id="managed-job-globusrun-multijobs"><title>MultiJobs</title>
            <para>The new job description XML schema allows for specification of a MultiJob 
                i.e. a job that is itself composed of several executable jobs 
                (those jobs cannot be multijobs, so the structure is not recursive). 
                This is useful in order to bundle a group of jobs together and submit 
                them as a whole to a remote GRAM installation.
            </para><para>
                Note that there is no 
                specification of relationships between the executable jobs, which we will 
                refer to as "subjobs". The subjobs are submitted to job factory services 
                in their order of appearance in the multijob description.
            </para>
        </refsect2>
        
        <refsect2 id="managed-job-globusrun-jobandprocessrendezvous"><title>Job and process rendezvous</title>
            <para>This version of GRAM offers a mechanism to perform synchronization 
                between job processes in a multiprocess job and between subjobs in a multijob. 
                The job application can in fact register binary information, for 
                instance process information or subjob information, and get notified when 
                all the other processes or subjobs have registered their own information.
                This is for instance useful for parallel jobs which need to rendezvous 
                at a "barrier" before proceeding with computations, in the case when no 
                native application API is available to help do the rendezvous.</para>
        </refsect2>
    </refsect1>
    
    <refsect1 id="managed-job-globusrun-limitations"><title>Limitations</title>
        <para>With the porting of existing GRAM functionality from OGSI to WSRF, 
            this new version of the job submission tool suffers from a few limitations 
            comparatively to previous versions of the tool.
            These limitations will be dealt with in the next version of the tool, which 
            will be implemented in C and thus will be better performing.</para>
        
        <refsect2 id="managed-job-globusrun-nofilestaginggass"><title>No more file staging using GASS</title>
            <para>The GASS server is not being used anymore by GRAM, so the options 
                -server and -write have been removed.  Instead, file staging is done in a
                reliable fashion via RFT and GridFTP servers.
                <ulink url="#specifyingstaging">  file staging in GT 4.0 GRAM</ulink>
            </para>
        </refsect2><refsect2 id="managed-job-globusrun-nooutputredirection"><title>No standard output redirection yet</title>
            <para>Unlike the GT3.2 managed-job-globusrun used with the option -output, 
                this version of the tool does not offer any streamed redirection of 
                the standard streams. This is because the GASS server is not used anymore 
                by GRAM. Instead, a future version of the tool will allow for streaming 
                of any server-side file (including the standard streams of the job 
                execution) using GridFTP "tailing" of remote files.</para>
            
        </refsect2><refsect2 id="managed-job-globusrun-nolistingsubmittedjobs"><title>No listing of submitted jobs yet</title>
            <para>The -list option, which made the 3.2 tool print the identifiers of the jobs 
                submitted by the user on the standard output, is not available in this version 
                of the tool.</para>
        </refsect2>
    </refsect1>
    
    <refsect1 id="managed-job-globusrun-toolbehavior"><title>Tool behavior for some features</title>
        
        <refsect2 id="managed-job-globusrun-autojobresourcedestruction"><title>Tool-triggered automatic job resource destruction</title>
            <para>Execution errors and user interrupt events are handled by automatically
                destroying the requested job service(s), unless the -batch option
                is on the command-line. The -batch option prevents the tool from
                listening to job state changes and from waiting for the job to finish.
                If -batch is selected, the command will return as soon as the remote
                job has been submitted.</para>
            <para> The behavior of the tool with respect to job service destruction will vary
                in response to several kinds of events:</para>
            <itemizedlist>
                <listitem><simpara> The command exits normally after the job(s) finish(es), and destroys
                    the job service(s) it requested. In batch mode, the requested job
                    is never destroyed.</simpara></listitem>
                <listitem><simpara> The command is terminated in response to a user interrupt, such as
                    typing <emphasis>Ctrl</emphasis> + <emphasis>C</emphasis>, or a system-wide event, such as user logoff or system
                    shutdown. If the -no-interrupt option is on the command-line,
                    and the command-line has been successfully parsed when the interrupt
                    occurs, the tool does not destroy any job service(s) it requested.
                    Otherwise the tool destroys the requested job service(s).</simpara></listitem>
                <listitem><simpara> In case of any error of execution, the command will exit and
                    destroy the job(s) it successfully requested.</simpara></listitem>
            </itemizedlist>
            
            <para>If the Java virtual machine of the tool aborts, that is, stops running without shutting down
                cleanly, for instance because it received a SIGKILL signal on Unix, then no
                guarantee can be made about whether or not the job service(s) will be
                destroyed.</para>
            <para>Note: the shutdown behavior explained above cannot be guaranteed if the JVM option -Xrs is entered.
                The recommended way to disable service destruction is to specify the -batch option on the command-line.</para>
            
        </refsect2><refsect2 id="managed-job-globusrun-credentialdelegation"><title>Credential delegation</title>
            
            
            <refsect3 id="managed-job-globusrun-singlejob"><title>Single job submission</title>
                <para>managed-job-globusrun inserts references to newly delegated credentials in the job description 
                    before submitting it. In order to do so, it obtains endpoint references to resources representing 
                    delegated credentials by passing a proxy credential (user supplied or default) to the Globus 
                    delegation services. The resulting EPRs are then inserted in the job description before submission.
                    The possible elements where the EPR are added are: 
                    as the value of <command>jobCredentialEndpoint</command> and <command>stagingCredentialEndpoint</command>, 
                    in order to secure calls to the GRAM and RFT factories, and inside each individual RFT directive, 
                    i.e. inside the <command>fileStageIn</command>, <command>fileStageOut</command> and <command>fileCleanUp</command> 
                    elements.
                    See the <ulink url="schemas/gram_job_description.html">job description doc</ulink> 
                    for details about these attributes.
                    The Managed Executable Job uses the endpoints in the job description to fetch the credentials 
                    from the Delegation services and use them as needed on behalf of the job.
                </para>
                
            </refsect3><refsect3 id="managed-job-globusrun-multijob"><title>MultiJob submission</title>
                <para><command>managed-job-globusrun</command> delegates full credentials to the delegation service 
                    for the multijob, then processes each single job as stated in the single 
                    job submission case. </para>
                <para>If several subjobs are to use the same delegation service, then only 
                    one credential will be delegated to that delegation service, i.e. the same 
                    credential will be used for several jobs.</para>
            </refsect3>
        </refsect2>
    </refsect1>
    
    <refsect1 id="managed-job-globusrun-howtosubmit"><title>How to do common job submission tasks</title>
        
        <refsect2 id="managed-job-globusrun-interactivemode"><title>Submitting a job in interactive mode</title>
            
            <para>A very simple command-line can be used to submit a job. 
                For instance, the following command-line submits a job 
                to the GRAM services hosted on the same machine (assuming a 
                Globus container is running of course):</para>
            
            <screen>% bin/managed-job-globusrun "/bin/echo Testing 1...2...3"</screen>
            
            <para>The output should look like:</para>
            <screen>
                Submission ID: uuid:661AA7F0-2573-11D9-99B2-D4755757F903
                WAITING FOR JOB TO FINISH
                ========== State Notification ==========
                Job State: Active
                ========================================
                ========== State Notification ==========
                Job State: CleanUp
                ========================================
                ========== State Notification ==========
                Job State: Done
                ========================================
                Exit Code: 0
                DESTROYING SERVICE
                SERVICE DESTROYED
            </screen>
            
            <para><emphasis>Note:</emphasis> the job state notifications are printed in the order of arrival, but 
                they may arrive at the client-side in <emphasis>any order</emphasis>.</para>
            <para>In this example the job description specifies the standard output 
                stream path of the job to be: ${GLOBUS_USER_HOME}/stdout. The GRAM 
                services replace the substitution variable ${GLOBUS_USER_HOME} 
                with the path to the Home directory of the submitting user 
                as seen by the machine were the invoked GRAM services are hosted.
                You can thus verify the output of the job with the following 
                command:</para>
            
            <screen>% cat ~/stdout</screen>
            
            <para>which will display the string:</para>
            
            <screen>12 abc 34 pdscaex_instr_GrADS_grads23_28919.cfg pgwynnel was here</screen>
            
        </refsect2><refsect2 id="managed-job-globusrun-batchmode"><title>Submitting a job in batch mode, checking its status
            and destroying the resource</title>
            
            <para>To submit a job without having the client wait for job completion, 
                specify the option <command>-batch</command> (or <command>-b</command>) on the command-line:</para>
            <screen>
                % bin/managed-job-globusrun -batch "/bin/echo Testing 1...2...3"
                Warning: Will not wait for job completion, and will not destroy job service.
                Submission ID: uuid:9C715240-26C7-11D9-850A-ABE2020F9ED6
                CREATED MANAGED JOB SERVICE WITH HANDLE:
                http://127.0.0.1:8080/wsrf/services/ManagedExecutableJobService?9C715240-26C7-11D9-850A-ABE2020F9ED6
            </screen>
            
            <para>To check the status of the job, use the -state option:</para>
            <screen>
                % bin/managed-job-globusrun 
                -state 'http://127.0.0.1:8080/wsrf/services/ManagedExecutableJobService?9C715240-26C7-11D9-850A-ABE2020F9ED6'
                Job State: Done
            </screen>
            
            <para>To destroy the job resource created on the server side, use the -kill option:</para>
            <screen>
                % bin/managed-job-globusrun 
                -kill 'http://127.0.0.1:8080/wsrf/services/ManagedExecutableJobService?9C715240-26C7-11D9-850A-ABE2020F9ED6'
                DESTROYING SERVICE
                SERVICE DESTROYED
            </screen>
            
        </refsect2><refsect2 id="managed-job-globusrun-findingschedulers"><title>Finding which schedulers are interfaced by the WS GRAM installation</title>
            
            <para>Unfortunately there is no option yet to print the list of local resource 
                managers supported by a given WS-GRAM service installation. But there is a way to check, whether WS-GRAM
				supports a certain local resource manager or not. The following command gives an example how a client
				could check if Condor is available at the remote site:
				<screen>
					wsrf-query \
					   -s https://&lt;hostname&gt;:&lt;port&gt;/wsrf/services/ManagedJobFactoryService \
					   -key {http://www.globus.org/namespaces/2004/10/gram/job}ResourceID Condor \
					   "//*[local-name()='version']"
		        </screen>
				Replace host and port settings with the values you need.
				If Condor is available on the server-side, the output should look something like that. In this example the
				output indicates, that a GT is listening on the server-side, that Condor is available and that the GT
				version is 4.0.3:
				<screen>
					&lt;ns1:version xmlns:ns1="http://mds.globus.org/metadata/2005/02"&gt;4.0.3&lt;/ns1:version&gt;
				</screen>	
				If no GT at all is running at the specified host and/or port or if the specified local resource manager
				is not available on the server-side, the output will be an error message.
			</para>
		
		    <para>	
                On the server-side the <emphasis>GRAM name</emphasis>of local resource managers for which GRAM support has
				been installed can be obtained by looking at the GRAM configuration on the GRAM, as explained
				<ulink url="http://www.globus.org/toolkit/docs/4.0/execution/wsgram/WS_GRAM_Public_Interfaces.html#s-wsgram-Interface_Config_Frag-managerconfig">here</ulink>
                
                The GRAM name of the local resource manager can be used with the <computeroutput>-type</computeroutput> 
                option to specify which factory resource to use when submitting a job. 
                For instance: 
                
                <screen>
                    % bin/managed-job-globusrun -type Fork /bin/true
                </screen>
                will submit a <computeroutput>/bin/true</computeroutput> job to the <command>Fork</command> local resource manager 
                (i.e. the command-line <computeroutput>/bin/true</computeroutput> will simply be executed as a newly spawn process)
                
                <screen>
                    % bin/managed-job-globusrun -type LSF /bin/true
                </screen>
                will submit a <computeroutput>/bin/true</computeroutput> job to the <glossterm linkend="lsf">LSF</glossterm> scheduler (if installed).
                
                <screen>
                    % bin/managed-job-globusrun -type Multi -file simple_multi_job.xml
                </screen>
                where simple_multi_job.xml contains the description of a <ulink url="#specifyingmultijob">multijob</ulink> 
                will submit a multi job to the <command>Multi ManagedJobFactory</command> resource.
                
            </para>
            
        </refsect2><refsect2 id="managed-job-globusrun-specifyingstaging"><title>Specifying file staging in the job description</title>
            <para>
                In order to do file staging one must add specific elements to the job description. The 
                file transfer directives follow the RFT syntax <ulink url="schemas/rft_types.html">RFT syntax</ulink>
                ,which enables third-party transfers.
                Each file transfer must therefore specify a source URL and a destination URL.  
                URLs are specified as GridFTP URLs (for remote files) or as file URLs (for local files).
            </para><para>
                For instance, in the case of staging a file <emphasis>in</emphasis>, the source URL would be a 
                GridFTP URL (for instance <command>gsiftp://job.submitting.host:2888/tmp/mySourceFile</command>) 
                resolving to a source document accessible on the file system of the job submission 
                machine (for instance <command>/tmp/mySourceFile</command>). At run-time the 
                Reliable File Transfer service used by the GRAM service on the remote machine 
                would fetch the remote file using the GridFTP protocol and write it reliably 
                to the specified local file (for instance 
                <command>file:///${GLOBUS_USER_HOME}/my_transfered_file</command>, which resolves to  
                <command>~/my_transfered_file</command>). Here is how the stage-in directive would look like:
                
                <screen>
                    &lt;fileStageIn&gt;
                    &lt;transfer&gt;
                    &lt;sourceUrl&gt;<command>gsiftp://job.submitting.host:2888/tmp/mySourceFile</command>&lt;/sourceUrl&gt;
                    &lt;destinationUrl&gt;<command>file:///${GLOBUS_USER_HOME}/my_transfered_file</command>&lt;/destinationUrl&gt;
                    &lt;/transfer&gt;
                    &lt;/fileStageIn&gt;
                </screen> 
                
                <emphasis>Note:</emphasis> additional RFT-defined quality of service requirements can be specified 
                for each transfer. See the RFT documentation for more information.
            </para>
            <para>
                Here is an example job description with file stage-in and stage-out:
                
                <screen>
                    &lt;job&gt;
                    &lt;executable&gt;my_echo&lt;/executable&gt;
                    &lt;directory&gt;${GLOBUS_USER_HOME}&lt;/directory&gt;
                    &lt;argument&gt;Hello&lt;/argument&gt;
                    &lt;argument&gt;World!&lt;/argument&gt;
                    &lt;stdout&gt;${GLOBUS_USER_HOME}/stdout&lt;/stdout&gt;
                    &lt;stderr&gt;${GLOBUS_USER_HOME}/stderr&lt;/stderr&gt;
                    &lt;fileStageIn&gt;
                    &lt;transfer&gt;
                    &lt;sourceUrl&gt;gsiftp://job.submitting.host:2888/bin/echo&lt;/sourceUrl&gt;
                    &lt;destinationUrl&gt;file:///${GLOBUS_USER_HOME}/my_echo&lt;/destinationUrl&gt;
                    &lt;/transfer&gt;
                    &lt;/fileStageIn&gt;
                    &lt;fileStageOut&gt;
                    &lt;transfer&gt;
                    &lt;sourceUrl&gt;file://${GLOBUS_USER_HOME}/stdout&lt;/sourceUrl&gt;
                    &lt;destinationUrl&gt;gsiftp://job.submitting.host:2888/tmp/stdout&lt;/destinationUrl&gt;
                    &lt;/transfer&gt;
                    &lt;/fileStageOut&gt;
                    &lt;fileCleanUp&gt;
                    &lt;deletion&gt;
                    &lt;file&gt;file://${GLOBUS_USER_HOME}/my_echo&lt;/file&gt;
                    &lt;/deletion&gt;
                    &lt;/fileCleanUp&gt;
                    &lt;/job&gt;
                </screen>
            </para>
            <para>
                The submission of this job to the GRAM services causes the following sequence 
                of actions:
                <orderedlist>
                    <listitem><simpara> The <command>/bin/echo</command> executable is transfered from the submission machine 
                        to the GRAM host file system. The destination location is the HOME directory of the 
                        user on behalf of whom the job is executed by the GRAM services 
                        (see <command>&lt;fileStageIn&gt;</command>).</simpara></listitem>
                    <listitem><simpara> The transfered executable is used to print a test string  
                        (see <command>&lt;executable&gt;</command>, <command>&lt;directory&gt;</command> and 
                        the <command>&lt;argument&gt;</command> elements) on the standard output, which is 
                        redirected to a local file (see <command>&lt;stdout&gt;</command>).</simpara></listitem>
                    <listitem><simpara> The standard output file is transfered to the submission machine 
                        (see <command>&lt;fileStageOut&gt;</command>).</simpara></listitem>
                    <listitem><simpara> The file that was initially transfered during the stage-in phase is removed 
                        from the file system of the GRAM installation (see <command>&lt;fileCleanup&gt;</command>).</simpara></listitem>
                </orderedlist>
            </para>
            
            
        </refsect2><refsect2 id="managed-job-globusrun-specifyingmultijob"><title>Specifying and submitting a MultiJob</title>
            <para>
                Within the multijob description, each subjob description 
                must come along with an endpoint for the factory to submit the subjob to. This 
                enables the at-once submission of several jobs to different hosts.
                The factory to which the multijob is submitted acts as an intermediary tier 
                between the client and the eventual executable job factories. 
                See the <ulink url="schemas/gram_job_description.html">job description schema documentation</ulink> for more information about multijob specification.
            </para><para>
                A multijob must be submitted to a <command>Multi</command> job factory resource:
                <screen>
                    % bin/managed-job-globusrun -type Multi -file myMultiJob.xml
                </screen>
                A multijob resource is created by the factory and exposes a set of 
                WSRF resource properties different than the resource properties of 
                an executable job. The state machine of a multijob is also different 
                since the multijob represents the overall execution of all the executable 
                jobs it is composed of.
            </para></refsect2>
    </refsect1>
    
    <refsect1 id="managed-job-globusrun-troubleshooting"><title>Troubleshooting</title>
        
        <refsect2 id="managed-job-globusrun-jobexecution"><title>Job Execution Errors</title>
            <para><ulink url="schemas/mj_faults.html">fault types</ulink></para>
        </refsect2>
        
        
        <refsect2 id="managed-job-globusrun-commonissues"><title>Common issues</title>
            
            <refsect3 id="managed-job-globusrun-expiredcreds"><title>Expired credentials</title>
                <para><emphasis>Symptom:</emphasis> the client output shows an error related to expired credentials, 
                    as in:</para>
                <screen>
                    Error: error submitting job request: ; nested exception is:
                    javax.xml.rpc.soap.SOAPFaultException: Expired credentials 
                    (O=Grid,OU=GlobusTest,OU=simpleCA.foo.bar.com,OU=bar.com,CN=John Doe,CN=1255793213).
                </screen>
                <para><emphasis>Solution:</emphasis> use the $GLOBUS_LOCATION/bin/grid-proxy-init tool to create a new proxy file:</para>
                <screen>
                    % bin/grid-proxy-init
                    Your identity: /O=Grid/OU=GlobusTest/OU=simpleCA-foo.bar.com/OU=bar.com/CN=John Doe
                    Enter GRID pass phrase for this identity:
                    Creating proxy ................................. Done
                    Your proxy is valid until: Tue Oct 26 01:33:42 2004
                </screen>
                
            </refsect3><refsect3 id="managed-job-globusrun-sockettimeout"><title>Socket timeout error</title>
                <para><emphasis>Symptom:</emphasis> the client output shows a timeout error when waiting for 
                    the response from the GRAM service(s):</para>
                <screen>
                    Error: error submitting job request: ; nested exception is:
                    java.net.SocketTimeoutException: Read timed out
                </screen>                
                
                <para><emphasis>Solution:</emphasis> re-submit the job with a higher delay before HTTP socket timeout than the default. 
                    Use the<computeroutput>-timeout</computeroutput> option of <computeroutput>managed-job-globusrun</computeroutput>, as in:</para>
                <screen>
                    % bin/managed-job-globusrun -timeout 240000 -f myJob.xml
                </screen>
                
            </refsect3><refsect3 id="managed-job-globusrun-postmasterexception"><title>Connection refused to postmaster</title>
                <para><emphasis>Symptom:</emphasis> the server log and client output show exception stack traces 
                    with the following message:</para>
                <screen>
                    Unable to create RFT Resource; nested exception is:
                    org.apache.commons.dbcp.DbcpException: Connection refused. Check that the hostname 
                    and port are correct and that the postmaster is accepting TCP/IP connections.
                </screen>
                <para>This error indicates a lack of configuration for RFT.
                    <emphasis>Solution:</emphasis> <ulink url="../../data/rft/admin-index.html#s-rft-admin-configuring">See RFT Configuration Docs</ulink>
                </para>
                
            </refsect3><refsect3 id="managed-job-globusrun-gridmapentryneeded"><title>Lack of authorization for the user's Distinguished Name</title>
                <para><emphasis>Symptom:</emphasis> the server log and client output show exception stack traces 
                    with the following message:</para>
                <screen>
                    Error: error submitting job request: 
                    org.globus.wsrf.impl.security.authorization.exceptions.AuthorizationException: 
                    (pdp08) "/O=Grid/OU=GlobusTest/OU=simpleCA-foo.bar.com/OU=foo.bar.com/CN=John Doe" 
                    is not authorized to use operation:
                    {http://properties.impl.wsrf.globus.org}getMultipleResourceProperties on this service
                </screen>
                <para>
                    This error indicates a lack of authorization for the Distinguished Name (DN) reported 
                    in the error message. This means that according to the gridmap configuration for the 
                    toolkit, this user has not been authorized to call the operation reported in the 
                    error message.</para>
                <para><emphasis>Solution:</emphasis> Add an entry for the user's DN to the gridmap file. See the 
                    <ulink url="admin-index.html#s-wsgram-admin-nondefaultgridmap">GRAM configuration documentation</ulink>
                    
                </para>
                
            </refsect3><refsect3 id="managed-job-globusrun-filesnotfound"><title>File(s) Not Found warnings</title>
                <para><emphasis>Symptom:</emphasis> the server LOG displays messages at WARN severity such as:</para>
                <screen>
                    [Thread-3] WARN  factory.ManagedJobFactoryResource [getRestartTimestamp:187] 
                    java.io.FileNotFoundException: /software/globus/gt4/rc4.0.0/var/globus-jsm-fork.stamp (No such file or directory)
                    [Thread-3] WARN  factory.ManagedJobFactoryResource [getRestartTimestamp:187] 
                    java.io.FileNotFoundException: /software/globus/gt4/rc4.0.0/var/globus-jsm-multi.stamp (No such file or directory)
                    [Thread-2] WARN  utils.XmlPersistenceHelper [load:185] [CORE] File 
                    /nfs/v5/alain/.globus/persisted/128.9.72.67/ManagedExecutableJobResourceStateType/897BC6E0-26CA-11D9-8D59-FF280F77E689.xml
                    for resource {http://www.globus.org/namespaces/2004/10/gram/job}ResourceID=897BC6E0-26CA-11D9-8D59-FF280F77E689 
                    was not found
                </screen>
                <para><emphasis>Solution:</emphasis> the log messages above are harmless and are not indicative of any problem in the 
                    behavior of the GRAM service. They can be ignored.</para>
            </refsect3>
        </refsect2>
        
        
        <refsect2 id="managed-job-globusrun-knownproblems"><title>Known problems</title>
            
            <refsect3 id="managed-job-globusrun-hangingclient"><title>Client Hanging Forever</title>
                <para><emphasis>Symptom:</emphasis> in interactive (i.e. non-batch) mode, the managed-job-globusrun client 
                    seems to be stuck waiting for additional job state notifications.</para>
                <para><emphasis>Solution:</emphasis> This is a known problem which can happen sometimes.</para>
                
                <para>Possible solution: remove the timestamp files in $GLOBUS_LOCATION/var:</para>
                <screen>
                    % rm var/globus-jsm-*.stamp
                </screen>
                <para>Restart the container.</para>
                <para>If you decide to report the issue, please provide the job description 
                    and submission command-line as well as a full server-side GRAM log 
                    so we can determine the cause of the problem:</para>
                <orderedlist>
                    <listitem><simpara>Edit $GLOBUS_LOCATION/log4j.properties to add <command>exec=DEBUG</command>.</simpara></listitem>
                    <listitem><simpara>Restart container and execute the same job submission command-line.</simpara></listitem>
                    <listitem><simpara>Submit full GRAM server LOG to support list.</simpara></listitem>
                </orderedlist>
            </refsect3><refsect3 id="managed-job-globusrun-NotRegisteredException"><title>NotRegisteredException ERROR log message</title>
                <para><emphasis>Symptom:</emphasis> the following message appears in the server log:</para>
                <screen>
                    [Thread-7] ERROR jobmanager.JobManager [unsubscribeForNotifications:1762] unable to stop monitoring job for state changes
                    org.globus.exec.monitoring.NotRegisteredException
                    at org.globus.exec.monitoring.JobStateMonitor.unregisterJobID(JobStateMonitor.java:375)
                    at org.globus.exec.service.job.jobmanager.JobManager.unsubscribeForNotifications(JobManager.java:1758)
                    at org.globus.exec.service.job.jobmanager.JobManager.processState(JobManager.java:1274)
                    at org.globus.exec.service.job.jobmanager.RunQueue.run(RunQueue.java:75)
                </screen>
                
                <para><emphasis>Solution:</emphasis> this is typically harmless and can be ignored.</para>
            </refsect3>
        </refsect2>
    </refsect1>
</refentry>

<refentry id="globus-job-run-ws">
    <refmeta>
        <refentrytitle>globus-job-run-ws</refentrytitle>
        <manvolnum>1</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>globus-job-run-ws</refname>
        <refpurpose>
        Interactive job submission script for WS GRAM
        (requires globus_wsrf_gram_client_tools update package from
        <ulink url="http://www.globus.org/toolkit/downloads/development/">
            http://www.globus.org/toolkit/downloads/development/</ulink>)
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <cmdsynopsis>
            <command>globus-job-run-ws</command>
            <arg choice="plain">GLOBAL OPTIONS</arg>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>GLOBAL OPTIONS:</command>
            <sbr/><sbr/>
            <arg>-help|-usage</arg>
            <arg>-version</arg>
            <arg>-verbose</arg>
            <arg>-dumpcmd</arg>
            <arg>-dumpjdd</arg>
            <arg>-o|-job-epr-output-file <replaceable>filename</replaceable></arg>
            <arg>-contact <replaceable>factory contact</replaceable></arg>
            <arg>-factory-type <replaceable>ResourceID</replaceable></arg>
            <arg>-z|-authorization <replaceable>authz</replaceable></arg>
            <arg>-delegation-epr-file <replaceable>EPR file</replaceable></arg>
            <arg>-gridftp <replaceable>URL</replaceable></arg>
            <arg>-jobid <replaceable>job ID</replaceable></arg>
            <arg>-np|-count <replaceable>N</replaceable></arg>
            <arg>-host-count <replaceable>N</replaceable></arg>
            <arg>-max-time <replaceable>minutes</replaceable></arg>
            <arg>-max-memory <replaceable>MB</replaceable></arg>
            <arg>-min-memory <replaceable>MB</replaceable></arg>
            <arg>-project <replaceable>project ID</replaceable></arg>
            <arg>-queue <replaceable>queue ID</replaceable></arg>
            <arg>-dir <replaceable>directory</replaceable></arg>
            <arg>-job-type <replaceable>job type</replaceable></arg>
            <arg>-stdin <replaceable>file</replaceable></arg>
            <arg>-stdout <replaceable>file</replaceable></arg>
            <arg>-stderr <replaceable>file</replaceable></arg>
            <arg rep="repeat">-library-path <replaceable>path</replaceable></arg>
            <arg>-env <replaceable>name=value[ name=value]...</replaceable></arg>
            <arg>-args <replaceable>arg[ arg]...</replaceable></arg>
            <group choice="req">
                <arg>HOST CLAUSE</arg>
                <arg rep="repeat">-: <replaceable>OPTIONS</replaceable> HOST CLAUSE[ -: <replaceable>OPTIONS</replaceable> HOST CLAUSE]...</arg>
            </group>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>OPTIONS:</command>
            <sbr/><sbr/>
            <arg>-factory-type <replaceable>ResourceID</replaceable></arg>
            <arg>-np|-count <replaceable>N</replaceable></arg>
            <arg>-host-count <replaceable>N</replaceable></arg>
            <arg>-max-time <replaceable>minutes</replaceable></arg>
            <arg>-max-memory <replaceable>MB</replaceable></arg>
            <arg>-min-memory <replaceable>MB</replaceable></arg>
            <arg>-project <replaceable>project ID</replaceable></arg>
            <arg>-queue <replaceable>queue ID</replaceable></arg>
            <arg>-dir <replaceable>directory</replaceable></arg>
            <arg>-job-type <replaceable>job type</replaceable></arg>
            <arg>-stdin <replaceable>file</replaceable></arg>
            <arg>-stdout <replaceable>file</replaceable></arg>
            <arg>-stderr <replaceable>file</replaceable></arg>
            <arg>-env <replaceable>name=value[ name=value]...</replaceable></arg>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>HOST CLAUSE:</command>
            <sbr/><sbr/>
            <arg choice="plain">contact</arg>
            <group>
                <arg>-l</arg>
                <arg>-s</arg>
            </group>
            <arg choice="plain">executable</arg>
            <arg choice="plain" rep="repeat"><replaceable>arg[ arg]</replaceable></arg>
        </cmdsynopsis>
    </refsynopsisdiv>
    
    <refsect1 id="globus-job-run-ws-description"><title>Description</title>
        <important><simpara>
            This package requires the globus_wsrf_gram_client_tools update
            package from
            <ulink url="http://www.globus.org/toolkit/downloads/development/">
                http://www.globus.org/toolkit/downloads/development/</ulink>.
        </simpara></important>
        <para>
            <computeroutput>globus-job-run-ws</computeroutput> is a wrapper
            script around <computeroutput>globusrun-ws</computeroutput>.
            It makes it easier to submit interactive jobs with streaming output.
            Interactive jobs are defined as those that are submitted and
            actively monitored by the client for state changes.  The client
            will not exit until the job is finished and the output has been
            streamed back.  The job is also automatically destroyed and it's
            scratch space cleaned up before the client exits.
        </para>
    </refsect1>
    
    <refsect1 id="globus-job-run-ws-commandoptions"><title>Command options</title>
        <refsect2><title>Global Options</title>
            <para>
                The global options are used to 1) affect the script execution,
                2) control the job submission, and 3) provide defaults for
                subjobs when using the multijob syntax.
            </para>
            <variablelist>
                <varlistentry><term>-help|-usage</term><listitem>
                    <para>
                        Prints the command usage and exits.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-version</term><listitem>
                    <para>
                        Prints the version of the client program and exits.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-verbose</term><listitem>
                    <para>
                        Prints extra script execution debug messages.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-dumpcmd</term><listitem>
                    <para>
                        Prints the actual 
                        <computeroutput>globusrun-ws</computeroutput>
                        command that would have been executed and exits.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-dumpjdd</term><listitem>
                    <para>
                        Prints the actual Job Description Document that
                        would have been passed to
                        <computeroutput>globusrun-ws</computeroutput> and exits.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-o|-job-epr-output-file</term><listitem>
                    <para>
                        Causes the job's EPR to be written to the specified
                        file.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-contact</term><listitem>
                    <para>
                        Specifies the factory contact string for where to
                        submit the multijob.  This argument is ignored if
                        there is only one single job host clause (i.e. no '-:'
                        arguments).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-factory-type</term><listitem>
                    <para>
                        Specifies the factory resource ID for the target factory
                        service.  Supported values are "Fork", "Multi",
                        "<glossterm linkend="condor">Condor</glossterm>", "<glossterm linkend="lsf">LSF</glossterm>", and "<glossterm linkend="pbs">PBS</glossterm>". For single jobs the the
                        default is "Fork".  For multijobs the default is
                        "Multi".
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-z|-authorization</term><listitem>
                    <para>
                        Specifies the type of authorization to do against the
                        service.  Valid values are "host", "self", or a
                        certificate subject (i.e. identity authorization).
                        The default is "host" if not specified.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-delegation-epr-file</term><listitem>
                    <para>
                        Specifies a file with an EPR to a delegated credential
                        that is to be used for the job, staging, and transfer
                        credential. If you need more flexibility over these
                        different credentials separately, please use
                        <computeroutput>globusrun-ws</computeroutput> directly.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-gridftp</term><listitem>
                    <para>
                        Specifies the base URL for the GridFTP server used local
                        to the client for staging files to and from the server.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-jobid</term><listitem>
                    <para>
                        Specifies the ID of the job. This overrides the
                        automatically generated <glossterm linkend="uuid">UUID</glossterm>.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-np|-count</term><listitem>
                    <para>
                        Specifies the number of processes to spawn for this job.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-host-count</term><listitem>
                    <para>
                        Specifies the number of processing elements to employ
                        for running the job process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-max-time</term><listitem>
                    <para>
                        Specifies the maximum amount of time the scheduler
                        should allow for running the job process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-max-memory</term><listitem>
                    <para>
                        Specifies the maximum amount of memory the scheduler
                        should allow for running the job process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-min-memory</term><listitem>
                    <para>
                        Specifies the minimum amount of memory the job needs
                        to run.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-project</term><listitem>
                    <para>
                        Specifies the project ID associated with the job.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-queue</term><listitem>
                    <para>
                        Specifies the target queue that the job should be placed
                        in when the job is submitted to the scheduler.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-dir</term><listitem>
                    <para>
                        Specifies the working directory for the job process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-job-type</term><listitem>
                    <para>
                        Specifies the type of job this is.  Valid values are
                        "single", "multiple", "condor", and "mpi".  The default
                        value is "multiple".
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-stdin</term><listitem>
                    <para>
                        Specifies the stdin input file path local to the job
                        process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-stdout</term><listitem>
                    <para>
                        Specifies the stdout output file path local to the job
                        process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-stderr</term><listitem>
                    <para>
                        Specifies the stderr output file path local to the job
                        process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-library-path</term><listitem>
                    <para>
                        Specifies the a path to be added to the library path of
                        the job.  This argument can be repeated.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-env</term><listitem>
                    <para>
                        Specifies name/value pairs separated by '=' to be used
                        as environment variable assignments for the job
                        process(es). The name/value pair values can be repeated
                        until a dashed argument is specified or there are only
                        two arguments left on the command line
                        (i.e. ending host clause).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-args</term><listitem>
                    <para>
                        Specifies default command arguments for the subjobs.
                        The values can be repeated until a host clause is
                        encountered.  Arguments specified with the executable
                        in the host clause are appended to these values.
                    </para>
                </listitem></varlistentry>
            </variablelist>
            
            <refsect3><title>Options</title>
                <para>
                    These options can be specified before each subjob host
                    clause when using the multijob syntax.
                </para>
                
                <variablelist>
                    <varlistentry><term>-factory-type</term><listitem>
                        <para>
                            Specifies the factory resource ID for the target
                            factory service.  Supported values are "Fork",
                            "Condor", "LSF", and "PBS". The default is "Fork".
                            A value of "Multi" is not allowed in the subjob
                            options because the service semantics do not allow
                            this.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-np|-count</term><listitem>
                        <para>
                            Specifies the number of processes to spawn for this
                            job.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-host-count</term><listitem>
                        <para>
                            Specifies the number of processing elements to
                            employ for running the job process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-max-time</term><listitem>
                        <para>
                            Specifies the maximum amount of time the scheduler
                            should allow for running the job process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-max-memory</term><listitem>
                        <para>
                            Specifies the maximum amount of memory the scheduler
                            should allow for running the job process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-min-memory</term><listitem>
                        <para>
                            Specifies the minimum amount of memory the job needs
                            to run.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-project</term><listitem>
                        <para>
                            Specifies the project ID associated with the job.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-queue</term><listitem>
                        <para>
                            Specifies the target queue that the job should be
                            placed in when the job is submitted to the
                            scheduler.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-dir</term><listitem>
                        <para>
                            Specifies the working directory for the job
                            process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-job-type</term><listitem>
                        <para>
                            Specifies the type of job this is.  Valid values are
                            "single", "multiple", "condor", and "mpi".  The
                            default value is "multiple".
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-stdin</term><listitem>
                        <para>
                            Specifies the stdin input file path local to the job
                            process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-stdout</term><listitem>
                        <para>
                            Specifies the stdout output file path local to the
                            job process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-stderr</term><listitem>
                        <para>
                            Specifies the stderr output file path local to the
                            job process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-library-path</term><listitem>
                        <para>
                            Specifies the a path to be added to the library path
                            of the job.  This argument can be repeated.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-env</term><listitem>
                        <para>
                            Specifies name/value pairs separated by '=' to be
                            used as environment variable assignments for the job
                            process(es). The name/value pair values can be
                            repeated until a dashed argument is specified or
                            there are only two arguments left on the command
                            line (i.e. ending host clause).
                        </para>
                    </listitem></varlistentry>
                </variablelist>
            </refsect3>
            
            <refsect3><title>Host Clause</title>
                <para>
                    The host clause specifies the service contact string and
                    executable.
                </para>
                
                <variablelist>
                    <varlistentry><term>contact string</term><listitem>
                        <para>
                            Specifies the target service.  Valid forms of the
                            contact string are as follows:
                            <screen>
                               hostname
                               hostname:port
                               hostname:port/service
                               hostname/service
                               protocol://hostname
                               protocol://hostname:port
                               protocol://hostname:port/service
                               protocol://hostname/service
                            </screen>
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-l|-s</term><listitem>
                        
                        <para>
                            Specifies whether the executable is already local
                            to the execution machine (-l) or should be staged
                            (-s). The default is -l.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>executable</term><listitem>
                        <para>
                            The local path to the program or script to be
                            executed.
                        </para>
                    </listitem></varlistentry>
                </variablelist>
            </refsect3>
        </refsect2>
    </refsect1>
    
    <refsect1 id="globus-job-run-ws-notes"><title>Notes</title>
        <para>
Job stdin defaults to /dev/null.
Job stdout/stderr defaults to "stdout/err" in the scratch directory.

The file modifiers -l and -s specify different filespaces:
      -l[ocal]  file is relative to working directory of job      (DEFAULT)
      -s[tage]  file relative to job request is staged to job host

The working directory of the submitted job defaults to $HOME.

More than one host clause can be specified, in which case the job runs
on all of the hosts simultaneously.

The host clause begins with '-:' for a multi-request, and the contact string
of the remote resource for a single request. It allows any of the
specified options in any order. The first unrecognized (non-flagged)
term  is treated as the executable, with arguments following immediately
after.

In the multi-request case, arguments may be specified specifically for
each host-clause by appending them after the name of the executable, or
job-wide with the -args flag. In either case, arguments continue until
the end of the command-line or until the next '-:' flag signifying
a new host-clause.

Two '-:' flags in a row are interpreted as an escaped '-:' and the host-
clause continues until the next unpaired '-:' flag or end of input.

Except for -library-path, if more than one copy of an argument is specified
(such as two -stdin definitions), the setting defined last on the command line
will be used.
        </para>
    </refsect1>
</refentry>

<refentry id="globus-job-submit-ws">
    <refmeta>
        <refentrytitle>globus-job-submit-ws</refentrytitle>
        <manvolnum>1</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>globus-job-submit-ws</refname>
        <refpurpose>
        Batch job submission script for WS GRAM
        (requires globus_wsrf_gram_client_tools update package from
        <ulink url="http://www.globus.org/toolkit/downloads/development/">
            http://www.globus.org/toolkit/downloads/development/</ulink>)
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <cmdsynopsis>
            <command>globus-job-submit-ws</command>
            <arg choice="plain">GLOBAL OPTIONS</arg>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>GLOBAL OPTIONS:</command>
            <sbr/><sbr/>
            <arg>-help|-usage</arg>
            <arg>-version</arg>
            <arg>-verbose</arg>
            <arg>-dumpcmd</arg>
            <arg>-dumpjdd</arg>
            <arg choice="plain">-o|-job-epr-output-file <replaceable>filename</replaceable></arg>
            <arg>-contact <replaceable>contact string</replaceable></arg>
            <arg>-factory-type <replaceable>ResourceID</replaceable></arg>
            <arg>-z|-authorization <replaceable>authz</replaceable></arg>
            <arg>-delegation-epr-file <replaceable>EPR file</replaceable></arg>
            <arg>-gridftp <replaceable>URL</replaceable></arg>
            <arg>-jobid <replaceable>job ID</replaceable></arg>
            <arg>-np|-count <replaceable>N</replaceable></arg>
            <arg>-host-count <replaceable>N</replaceable></arg>
            <arg>-max-time <replaceable>minutes</replaceable></arg>
            <arg>-max-memory <replaceable>MB</replaceable></arg>
            <arg>-min-memory <replaceable>MB</replaceable></arg>
            <arg>-project <replaceable>project ID</replaceable></arg>
            <arg>-queue <replaceable>queue ID</replaceable></arg>
            <arg>-dir <replaceable>directory</replaceable></arg>
            <arg>-job-type <replaceable>job type</replaceable></arg>
            <arg>-stdin <replaceable>file</replaceable></arg>
            <arg>-stdout <replaceable>file</replaceable></arg>
            <arg>-stderr <replaceable>file</replaceable></arg>
            <arg rep="repeat">-library-path <replaceable>path</replaceable></arg>
            <arg>-env <replaceable>name=value[ name=value]...</replaceable></arg>
            <arg>-args <replaceable>arg[ arg]...</replaceable></arg>
            <group choice="req">
                <arg>HOST CLAUSE</arg>
                <arg rep="repeat">-: <replaceable>OPTIONS</replaceable> HOST CLAUSE[ -: <replaceable>OPTIONS</replaceable> HOST CLAUSE]...</arg>
            </group>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>OPTIONS:</command>
            <sbr/><sbr/>
            <arg>-np|-count <replaceable>N</replaceable></arg>
            <arg>-host-count <replaceable>N</replaceable></arg>
            <arg>-max-time <replaceable>minutes</replaceable></arg>
            <arg>-max-memory <replaceable>MB</replaceable></arg>
            <arg>-min-memory <replaceable>MB</replaceable></arg>
            <arg>-project <replaceable>project ID</replaceable></arg>
            <arg>-queue <replaceable>queue ID</replaceable></arg>
            <arg>-dir <replaceable>directory</replaceable></arg>
            <arg>-job-type <replaceable>job type</replaceable></arg>
            <arg>-stdin <replaceable>file</replaceable></arg>
            <arg>-stdout <replaceable>file</replaceable></arg>
            <arg>-stderr <replaceable>file</replaceable></arg>
            <arg>-env <replaceable>name=value[ name=value]...</replaceable></arg>
        </cmdsynopsis>
        <cmdsynopsis>
            <command>HOST CLAUSE:</command>
            <sbr/><sbr/>
            <arg choice="plain">contact string</arg>
            <group>
                <arg>-l</arg>
                <arg>-s</arg>
            </group>
            <arg choice="plain">executable</arg>
            <arg choice="plain" rep="repeat"><replaceable>arg[ arg]</replaceable></arg>
        </cmdsynopsis>
    </refsynopsisdiv>
    
    <refsect1 id="globus-job-submit-ws-description"><title>Description</title>
        <important>
           <simpara>
            This package requires the globus_wsrf_gram_client_tools update
            package from
            <ulink url="http://www.globus.org/toolkit/downloads/development/">
                http://www.globus.org/toolkit/downloads/development/</ulink>.
        </simpara></important>
        <para>
            <computeroutput>globus-job-submit-ws</computeroutput> is a wrapper
            script around <computeroutput>globusrun-ws</computeroutput>...
            It makes it easier to submit batch jobs. Batch jobs are defined as
            those that are submitted but not actively monitored for state
            changes.  One must use <computeroutput>globusrun-ws</computeroutput>
            to check the job's state.  Also, when the job is finished one can
            use <computeroutput>globus-job-get-output-ws</computeroutput> to
            fetch the output of the job and
            <computeroutput>globus-job-cliean-ws</computeroutput> to destroy
            the job and clean up the job's scratch space.
        </para>
    </refsect1>
    
    <refsect1 id="globus-job-submit-ws-commandoptions"><title>Command options</title>
        <refsect2><title>Global Options</title>
            <para>
                The global options are used to 1) affect the script execution,
                2) control the job submission, and 3) provide defaults for
                subjobs when using the multijob syntax.
            </para>
            <variablelist>
                <varlistentry><term>-help|-usage</term><listitem>
                    <para>
                        Prints the command usage and exits.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-version</term><listitem>
                    <para>
                        Prints the version of the client program and exits.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-verbose</term><listitem>
                    <para>
                        Prints extra script execution debug messages.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-dumpcmd</term><listitem>
                    <para>
                        Prints the actual 
                        <computeroutput>globusrun-ws</computeroutput>
                        command that would have been executed and exits.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-dumpjdd</term><listitem>
                    <para>
                        Prints the actual Job Description Document that
                        would have been passed to
                        <computeroutput>globusrun-ws</computeroutput> and exits.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-o|-job-epr-output-file</term><listitem>
                    <para>
                        Causes the job's EPR to be written to the specified
                        file. This argument is not optional.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-contact</term><listitem>
                    <para>
                        Specifies the factory contact string for where to
                        submit the multijob.  This argument is ignored if
                        there is only one single job host clause (i.e. no '-:'
                        arguments).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-factory-type</term><listitem>
                    <para>
                        Specifies the factory resource ID for the target factory
                        service.  Supported values are "Fork", "Multi",
                        "Condor", "LSF", and "PBS". For single jobs the the
                        default is "Fork".  For multijobs the default is
                        "Multi".
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-z|-authorization</term><listitem>
                    <para>
                        Specifies the type of authorization to do against the
                        service.  Valid values are "host", "self", or a
                        certificate subject (i.e. identity authorization).
                        The default is "host" if not specified.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-delegation-epr-file</term><listitem>
                    <para>
                        Specifies a file with an EPR to a delegated credential
                        that is to be used for the job, staging, and transfer
                        credential. If you need more flexibility over these
                        different credentials separately, please use
                        <computeroutput>globusrun-ws</computeroutput> directly.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-gridftp</term><listitem>
                    <para>
                        Specifies the base URL for the GridFTP server used local
                        to the client for staging files to and from the server.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-jobid</term><listitem>
                    <para>
                        Specifies the ID of the job. This overrides the
                        automatically generated UUID.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-np|-count</term><listitem>
                    <para>
                        Specifies the number of processes to spawn for this job.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-host-count</term><listitem>
                    <para>
                        Specifies the number of processing elements to employ
                        for running the job process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-max-time</term><listitem>
                    <para>
                        Specifies the maximum amount of time the scheduler
                        should allow for running the job process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-max-memory</term><listitem>
                    <para>
                        Specifies the maximum amount of memory the scheduler
                        should allow for running the job process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-min-memory</term><listitem>
                    <para>
                        Specifies the minimum amount of memory the job needs
                        to run.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-project</term><listitem>
                    <para>
                        Specifies the project ID associated with the job.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-queue</term><listitem>
                    <para>
                        Specifies the target queue that the job should be placed
                        in when the job is submitted to the scheduler.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-dir</term><listitem>
                    <para>
                        Specifies the working directory for the job process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-job-type</term><listitem>
                    <para>
                        Specifies the type of job this is.  Valid values are
                        "single", "multiple", "condor", and "mpi".  The default
                        value is "multiple".
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-stdin</term><listitem>
                    <para>
                        Specifies the stdin input file path local to the job
                        process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-stdout</term><listitem>
                    <para>
                        Specifies the stdout output file path local to the job
                        process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-stderr</term><listitem>
                    <para>
                        Specifies the stderr output file path local to the job
                        process(es).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-library-path</term><listitem>
                    <para>
                        Specifies the a path to be added to the library path of
                        the job.  This argument can be repeated.
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-env</term><listitem>
                    <para>
                        Specifies name/value pairs separated by '=' to be used
                        as environment variable assignments for the job
                        process(es). The name/value pair values can be repeated
                        until a dashed argument is specified or there are only
                        two arguments left on the command line
                        (i.e. ending host clause).
                    </para>
                </listitem></varlistentry>
                <varlistentry><term>-args</term><listitem>
                    <para>
                        Specifies default command arguments for the subjobs.
                        The values can be repeated until a host clause is
                        encountered.  Arguments specified with the executable
                        in the host clause are appended to these values.
                    </para>
                </listitem></varlistentry>
            </variablelist>
            
            <refsect3><title>Options</title>
                <para>
                    These options can be specified before each subjob host
                    clause when using the multijob syntax.
                </para>
                
                <variablelist>
                    <varlistentry><term>-factory-type</term><listitem>
                        <para>
                            Specifies the factory resource ID for the target
                            factory service.  Supported values are "Fork",
                            "Condor", "LSF", and "PBS". The default is "Fork".
                            A value of "Multi" is not allowed in the subjob
                            options because the service semantics do not allow
                            this.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-np|-count</term><listitem>
                        <para>
                            Specifies the number of processes to spawn for this
                            job.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-host-count</term><listitem>
                        <para>
                            Specifies the number of processing elements to
                            employ for running the job process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-max-time</term><listitem>
                        <para>
                            Specifies the maximum amount of time the scheduler
                            should allow for running the job process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-max-memory</term><listitem>
                        <para>
                            Specifies the maximum amount of memory the scheduler
                            should allow for running the job process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-min-memory</term><listitem>
                        <para>
                            Specifies the minimum amount of memory the job needs
                            to run.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-project</term><listitem>
                        <para>
                            Specifies the project ID associated with the job.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-queue</term><listitem>
                        <para>
                            Specifies the target queue that the job should be
                            placed in when the job is submitted to the
                            scheduler.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-dir</term><listitem>
                        <para>
                            Specifies the working directory for the job
                            process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-job-type</term><listitem>
                        <para>
                            Specifies the type of job this is.  Valid values are
                            "single", "multiple", "condor", and "mpi".  The
                            default value is "multiple".
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-stdin</term><listitem>
                        <para>
                            Specifies the stdin input file path local to the job
                            process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-stdout</term><listitem>
                        <para>
                            Specifies the stdout output file path local to the
                            job process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-stderr</term><listitem>
                        <para>
                            Specifies the stderr output file path local to the
                            job process(es).
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-library-path</term><listitem>
                        <para>
                            Specifies the a path to be added to the library path
                            of the job.  This argument can be repeated.
                        </para>
                    </listitem></varlistentry>
                    <varlistentry><term>-env</term><listitem>
                        <para>
                            Specifies name/value pairs separated by '=' to be
                            used as environment variable assignments for the job
                            process(es). The name/value pair values can be
                            repeated until a dashed argument is specified or
                            there are only two arguments left on the command
                            line (i.e. ending host clause).
                        </para>
                    </listitem></varlistentry>
                </variablelist>
            </refsect3>
            
            <refsect3><title>Host Clause</title>
                <para>
                    The host clause specifies the service contact string and
                    executable.
                </para>
                
                <variablelist>
                    <varlistentry><term>contact string</term><listitem>
                        <para>
                            Specifies the target service.  Valid forms of the
                            contact string are as follows:
                            <screen>
                               hostname
                               hostname:port
                               hostname:port/service
                               hostname/service
                               protocol://hostname
                               protocol://hostname:port
                               protocol://hostname:port/service
                               protocol://hostname/service
                            </screen>
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>-l|-s</term><listitem>
                        
                        <para>
                            Specifies whether the executable is already local
                            to the execution machine (-l) or should be staged
                            (-s). The default is -l.
                        </para>
                    </listitem></varlistentry>
                    
                    <varlistentry><term>executable</term><listitem>
                        <para>
                            The local path to the program or script to be
                            executed.
                        </para>
                    </listitem></varlistentry>
                </variablelist>
            </refsect3>
        </refsect2>
    </refsect1>
    
    <refsect1 id="globus-job-submit-ws-notes"><title>Notes</title>
        <para>
Job stdin defaults to /dev/null.
Job stdout/stderr defaults to "stdout/err" in the scratch directory.

The file modifiers -l and -s specify different filespaces:
      -l[ocal]  file is relative to working directory of job      (DEFAULT)
      -s[tage]  file relative to job request is staged to job host

The working directory of the submitted job defaults to $HOME.

More than one host clause can be specified, in which case the job runs
on all of the hosts simultaneously.

The host clause begins with '-:' for a multi-request, and the contact string
of the remote resource for a single request. It allows any of the
specified options in any order. The first unrecognized (non-flagged)
term  is treated as the executable, with arguments following immediately
after.

In the multi-request case, arguments may be specified specifically for
each host-clause by appending them after the name of the executable, or
job-wide with the -args flag. In either case, arguments continue until
the end of the command-line or until the next '-:' flag signifying
a new host-clause.

Two '-:' flags in a row are interpreted as an escaped '-:' and the host-
clause continues until the next unpaired '-:' flag or end of input.

Except for -library-path, if more than one copy of an argument is specified
(such as two -stdin definitions), the setting defined last on the command line
will be used.
        </para>
    </refsect1>
</refentry>

<refentry id="globus-job-get-output-ws">
    <refmeta>
        <refentrytitle>globus-job-get-output-ws</refentrytitle>
        <manvolnum>1</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>globus-job-get-output-ws</refname>
        <refpurpose>
        Job output fetch script for WS GRAM
        (requires globus_wsrf_gram_client_tools update package from
        <ulink url="http://www.globus.org/toolkit/downloads/development/">
            http://www.globus.org/toolkit/downloads/development/</ulink>)
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <cmdsynopsis>
            <command>globus-job-get-output-ws</command>
            <arg>-help</arg>
            <arg>-version</arg>
            <arg>-verbose</arg>
            <group>
                <arg>-out</arg>
                <arg>-err</arg>
            </group>
            <arg>-z|authorization <replaceable>authz method</replaceable></arg>
            <arg choice="plain">&lt;EPR file&gt;</arg>
        </cmdsynopsis>
    </refsynopsisdiv>
    
    <refsect1 id="globus-job-get-output-ws-description"><title>Description</title>
        <important><simpara>
            This package requires the globus_wsrf_gram_client_tools update
            package from
            <ulink url="http://www.globus.org/toolkit/downloads/development/">
                http://www.globus.org/toolkit/downloads/development/</ulink>.
        </simpara></important>
        <para>
            <computeroutput>globus-job-get-output-ws</computeroutput> is a
            wrapper around 
            <computeroutput>wsrf-get-property</computeroutput> and
            <computeroutput>globus-url-copy</computeroutput>. It is intended to
            fetch either the stdout or stderr of a batch job submitted with
            <computeroutput>globus-job-submit-ws</computeroutput>.
        </para>
    </refsect1>
    
    <refsect1 id="globus-job-get-output-ws-commandoptions"><title>Command Options</title>
        <para>
        </para>
            
        <variablelist>
            <varlistentry><term>-help</term><listitem>
                <para>
                    HELP!
                </para>
            </listitem></varlistentry>

            <varlistentry><term>-version</term><listitem>
                <para>
                    The script version.
                </para>
            </listitem></varlistentry>

            <varlistentry><term>-verbose</term><listitem>
                <para>
                    Verbose script execution.
                </para>
            </listitem></varlistentry>

            <varlistentry><term>-out, -err</term><listitem>
                <para>
                    Fetch either the stdout or stderr of the job.
                </para>
            </listitem></varlistentry>

            <varlistentry><term>-authorization</term><listitem>
                <para>
                    Either "host", "self", or a cert subject (identity authz).
                </para>
            </listitem></varlistentry>
            <varlistentry><term>EPR file</term><listitem>
                <para>
                    Specifies a path to a file containg a job EPR. This is
                    usually the file written via the
                    <computeroutput>-job-epr-output-file</computeroutput>
                    argument to
                    <computeroutput>globus-job-submit-ws</computeroutput>.
                </para>
            </listitem></varlistentry>
        </variablelist>
    </refsect1>
</refentry>

<refentry id="globus-job-clean-ws">
    <refmeta>
        <refentrytitle>globus-job-clean-ws</refentrytitle>
        <manvolnum>1</manvolnum>
    </refmeta>
    <refnamediv>
        <refname>globus-job-clean-ws</refname>
        <refpurpose>
        Destroy and clean up a batch job for WS GRAM
        (requires globus_wsrf_gram_client_tools update package from
        <ulink url="http://www.globus.org/toolkit/downloads/development/">
            http://www.globus.org/toolkit/downloads/development/</ulink>)
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <cmdsynopsis>
            <command>globus-job-clean-ws</command>
            <arg>-help</arg>
            <arg>-version</arg>
            <arg>-verbose</arg>
            <arg>-dumpcmd</arg>
            <arg>-z|authorization <replaceable>authz method</replaceable></arg>
            <arg choice="plain">&lt;EPR file&gt;</arg>
        </cmdsynopsis>
    </refsynopsisdiv>
    
    <refsect1 id="globus-job-get-clean-ws-description"><title>Description</title>
        <important><simpara>
            This package requires the globus_wsrf_gram_client_tools update
            package from <ulink url="http://www.globus.org/toolkit/downloads/development/">
                http://www.globus.org/toolkit/downloads/development/</ulink>.
        </simpara></important>
        <para>
            <computeroutput>globus-job-clean-ws</computeroutput> is a very
            simple wrapper around the 
            <computeroutput>globusrun-ws -kill</computeroutput> command.
        </para>
    </refsect1>
    
    <refsect1 id="globus-job-get-clean-ws-commandoptions"><title>Command Options</title>
        <para>
        </para>
            
        <variablelist>
            <varlistentry><term>-help</term><listitem>
                <para>
                    HELP!
                </para>
            </listitem></varlistentry>

            <varlistentry><term>-version</term><listitem>
                <para>
                    The script version.
                </para>
            </listitem></varlistentry>

            <varlistentry><term>-verbose</term><listitem>
                <para>
                    Verbose script execution.
                </para>
            </listitem></varlistentry>

            <varlistentry><term>-dumpcmd</term><listitem>
                <para>
                    Dump the actual globusrun-ws command being executed.
                </para>
            </listitem></varlistentry>

            <varlistentry><term>-authorization</term><listitem>
                <para>
                    Either "host", "self", or a cert subject (identity authz).
                </para>
            </listitem></varlistentry>
            <varlistentry><term>EPR file</term><listitem>
                <para>
                    Specifies a path to a file containg a job EPR. This is
                    usually the file written via the
                    <computeroutput>-job-epr-output-file</computeroutput>
                    argument to
                    <computeroutput>globus-job-submit-ws</computeroutput>.
                </para>
            </listitem></varlistentry>
        </variablelist>
    </refsect1>
</refentry>
