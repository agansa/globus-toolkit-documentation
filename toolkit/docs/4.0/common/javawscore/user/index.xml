<title>GT 4.0 Java WS Core : User's Guide</title>
<titleabbrev>User's Guide</titleabbrev>

<section id="s-javawscore-user-introduction"><title>Introduction</title>
 <para>The Java WS Core User's Guide provides general end user-oriented information.</para>
</section>

<section id="s-javawscore-user-commandline"><title>Command-line tools</title>
<para>Please see the <xref linkend="r-javawscore-commandline"/>.</para>
</section>

<section id="s-javawscore-user-gui"><title>Graphical user interfaces</title>
&Java_WS_Core_Interface_GUI_Frag;
</section>

<section id="s-javawscore-user-troubleshooting"><title>Troubleshooting</title>


<section id="s-javawscore-user-runningclients"><title>Running clients from any directory</title>
<para>
A client launched directly through the <computeroutput>java</computeroutput> executable might fail if ran from a directory other then the <computeroutput>GLOBUS_LOCATION</computeroutput> (It usually happens if the client receives notifications). To ensure that a client can be started from any directory pass a <computeroutput>GLOBUS_LOCATION</computeroutput> system property on the <computeroutput>java</computeroutput> command line set to the appropriate <computeroutput>GLOBUS_LOCATION</computeroutput> directory. Also, make sure to put the <computeroutput>GLOBUS_LOCATION</computeroutput> directory as the very first entry in the classpath used for the application.
</para>
<para>
For example on Unix/Linux:
</para>
<screen> $ java -DGLOBUS_LOCATION=$GLOBUS_LOCATION -classpath $GLOBUS_LOCATION:mylib.jar foo.MyClass</screen>
<para>or on Windows:</para>
<screen> &gt; java -DGLOBUS_LOCATION=%GLOBUS_LOCATION% -classpath %GLOBUS_LOCATION%;mylib.jar foo.MyClass</screen>
</section>

<section id="s-javawscore-user-notificationconsumer"><title>Program fails with &quot;<computeroutput>Failed to acquire notification consumer home instance from registry</computeroutput>&quot; error</title>
<para>
Please see <xref linkend="s-javawscore-user-runningclients"/> if a client fails with &quot;<computeroutput>Failed to acquire notification consumer home instance from registry. Caused by javax.naming.NameNotFoundException: Name services is not bound in this Context</computeroutput>&quot; error.
</para>
</section>

<section id="s-javawscore-user-wsa">
<title>
Container warning: &quot;<computeroutput>The WS-Addressing 'To' request header is missing</computeroutput>&quot;
</title>
<para>
This warning is logged by the container if the request did not contain the necessary <glossterm linkend="wsa">WS-Addressing</glossterm> headers. The client either did not attempt to send those headers at all or is somehow misconfigured (for example, the client used an incorrect configuration file). If you using a Java client and launching it directly using the <computeroutput>java</computeroutput> executable take a look at <xref linkend="s-javawscore-user-runningclients"/>.
</para>
</section>

 <section id="s-javawscore-user-troubleshooting-containerhang">
  <title>The standalone container appears to hang</title>
  <para>If the standalone container appears to hang, for example the list of deployed services is not shown after a while or all requests to the container time out, please see the <link linkend="s-javawscore-developer-debugging-hanged-process">Debugging hanged Java process</link> section for information on how to diagnose this problem. 
  </para>
 </section>

 <section id="s-javawscore-user-troubleshooting-general">
  <title>General troubleshooting information</title>
  &Java_WS_Core_Troubleshooting_Frag;
 </section>
</section>


<section id="s-javawscore-user-miscellaneousinfo"><title>Miscellaneous information</title>

<section id="s-javawscore-user-RunningJava"><title>Running Java Programs From Command Line</title>

<para>
Sometimes it might be necessary to run a Java program directly using the <computeroutput>java</computeroutput> executable. There are two recommended ways of doing so (the <computeroutput>GLOBUS_LOCATION</computeroutput> environment variable must first be set in both cases):
</para>

<important><simpara>
If you are not using any of these two methods please take a look at <xref linkend="s-javawscore-user-runningclients"/>.
</simpara></important>

<section><title>With <computeroutput>globus-devel-env</computeroutput> script help</title>
<para>
The <computeroutput>globus-devel-env</computeroutput> script can be used to set the proper <computeroutput>CLASSPATH</computeroutput> environment variable.
To set the <computeroutput>CLASSPATH</computeroutput> on Windows execute:
</para>
<screen> &gt; %GLOBUS_LOCATION%\etc\globus-devel-env.bat</screen>
<para>
On Unix/Linux machines execute (for bash/sh):
</para>
<screen> $ . $GLOBUS_LOCATION/etc/globus-devel-env.sh</screen>
<para>or (for csh/tcsh):</para>
<screen> $ source $GLOBUS_LOCATION/etc/globus-devel-env.csh</screen>
<para>
Once the <computeroutput>globus-devel-env</computeroutput> is executed successfully run the Java program, for example:
</para>
<para>On Windows:</para>
<screen> &gt; java -DGLOBUS_LOCATION=%GLOBUS_LOCATION% foo.MyClass</screen>
<para>On Unix/Linux:</para>
<screen> $ java -DGLOBUS_LOCATION=$GLOBUS_LOCATION foo.MyClass</screen>
<para>
<emphasis>Note:</emphasis>
Passing <computeroutput>-DGLOBUS_LOCATION</computeroutput> is not necessary but will enable the client to execute from any directory.
</para>
</section>
<section><title>Using bootstrap</title>
<para>
Sometimes the above method might fail if the <computeroutput>CLASSPATH</computeroutput> environment variable is too long for the OS to handle. With the bootstrap method, a bootstrap code is executed first which sets the classpath programmatically and then invokes the specified Java program. 
To invoke a Java program on Windows through bootstrap execute:
</para>
<screen> &gt; java -cp %GLOBUS_LOCATION%\lib\bootstrap.jar -DGLOBUS_LOCATION=%GLOBUS_LOCATION% \
       org.globus.bootstrap.Bootstrap foo.MyClass</screen>
<para>
On Unix/Linux machines execute:
</para>
<screen> $ java -cp $GLOBUS_LOCATION/lib/bootstrap.jar -DGLOBUS_LOCATION=$GLOBUS_LOCATION \
       org.globus.bootstrap.Bootstrap foo.MyClass</screen>
</section>
</section>
</section>

<section id="s-javawscore-user-usage"><title>Usage statistics collection by the Globus Alliance</title>
&Java_WS_Core_Usage_Statistics_Frag;
</section>




