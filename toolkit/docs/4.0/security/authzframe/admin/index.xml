<?xml version='1.0' encoding='UTF-8'?>
<title>GT4 WS AA Admin Guide</title>
<titleabbrev>Admin Guide</titleabbrev>
<section id="s-authzframe-admin-introduction">
  <title>Introduction</title>
  <para>This guide contains advanced configuration information for system administrators
  working with the Authorization Framework. It provides references to information
  on procedures typically performed by system administrators, including installing,
configuring, deploying, and testing the installation.</para>
  <para>This information is in addition to the basic installation instructions in
  the <ulink url="../../../admin/docbook/">GT 4.0 System Administrator&apos;s Guide</ulink>.</para>
  <para>This component determines the authorization enforced on the server
  and the client side. Admin configuration could include determining
  the container/service level authorization mechanism and setting up and
  managing authorization policy, e.g. entries in gridmap file
  and so on.</para>
  <para> The <ulink url="../security_descriptor.html">Security Descriptors</ulink>
document describes how to configure an authorization mechanism as well as the
configuration required for each of the  mechanisms that are distributed
with GT 4.0.</para>
</section>
<section id="s-authzframe-admin-installing">
  <title>Building and Installing</title>
  <para>This component is built and installed as a part of <ulink url="http://www-unix.globus.org/toolkit/docs/development/4.0-drafts/common/javawscore/admin/#installing">Java WS Core</ulink>.</para>
</section>
<section id="s-authzframe-admin-configuring">
  <title>Configuring </title>
&WS_AA_Authz_Interface_Config_Frag;
</section>
<section id="s-authzframe-admin-deploying">
  <title>Deploying</title>
  <para> This component is deployed as a part of <ulink url="http://www-unix.globus.org/toolkit/docs/development/4.0-drafts/common/javawscore/admin/#deploying">Java WS Core</ulink>.</para>
</section>
<section id="s-authzframe-admin-testing">
  <title>Testing</title>
  <para>To execute security tests ensure that <ulink url="http://www-unix.globus.org/toolkit/docs/development/4.0-drafts/common/javawscore/developer/index.html#testing">Ant with JUnit is configured</ulink>.</para>
  <para>All the security tests require a valid credential. <emphasis>FILLME: some notes on how to get a user credential ?</emphasis></para>
  <para>The security tests are included in
<filename>$GLOBUS_LOCATION/lib/wsrf_test_unit.jar</filename>. This jar contains tests for both the Java WS Core component and the WS Authentication and Authorization components contained in the Java WS Core package.</para>
  <para>To execute the tests pass the above jar file to the test script as described in the <ulink url="http://www-unix.globus.org/toolkit/docs/development/4.0-drafts/common/javawscore/developer/index.html#runningtests">Java WS Core Developer&apos;s Guide</ulink>. To ensure that only security tests are run, set <option>-DsecurityTestsOnly=true</option>. </para>
  <para>By default the tests require that the container and the tests  are using the same credentials, i.e self authorization is done on secure calls. </para>
  <para>The tests allow for another configuration in which the
container can be configured with host credentials and the tests can be
run with any credentials.</para>
  <itemizedlist>
    <listitem>
      <simpara>Configure the container to use host credentials using the security descriptor as described in the <ulink url="../security_descriptor.html#configDesc">container descriptor</ulink> section.</simpara>
    </listitem>
    <listitem>
      <para>Edit <filename>$GLOBUS_LOCATION/etc/globus_wsrf_test_unit/server-config.wsdd</filename>

<itemizedlist>
          <listitem>
            <para> Comment out the configured descriptor in <emphasis>SecurityTestService</emphasis> and <emphasis>AuthzCalloutTestService</emphasis> that specifies self authorization. 
<screen>&lt;!-- Does self authz by default --&gt;
&lt;!-- parameter name=&quot;securityDescriptor&quot; value=&quot;@config.dir@/security-config.xml&quot;/ --&gt;</screen></para>
          </listitem>
          <listitem>
            <para>Uncomment the configuration for identity authorization and set the value of the property <emphasis>idenAuthz-identity</emphasis> to the subject DN of the credentials used to run the tests.

<screen>&lt;!-- For use only when identity authz is used--&gt;
&lt;parameter name=&quot;securityDescriptor&quot; value=&quot;@config.dir@/identity-security-config.xml&quot;/&gt;
&lt;parameter name=&quot;idenAuthz-identity&quot; value=&quot;Identity used by client&quot;/&gt;</screen></para>
          </listitem>
        </itemizedlist></para>
    </listitem>
    <listitem>
      <para>To run tests without starting up an external container, run <screen>ant test -Dsecurity.test.client.authz=host </screen>To run tests against external containers, secure and insecure, on localhost port 8180 and 8181 respectively, the command would be <screen>ant testServer -Dsecurity.test.client.authz=host -Dtest.server.url=http://127.0.0.1:8181/wsrf/services/ -Dsecure.test.server.url=https://127.0.0.1:8180/wsrf/services/</screen></para>
    </listitem>
  </itemizedlist>
</section>
<section id="s-authzframe-admin-security_considerations">
  <title>Security Considerations </title>
&WS_AA_Authz_Security_Considerations_Frag;
</section>
<section id="s-authzframe-admin-troubleshooting">
  <title>Troubleshooting</title>
  <para>[help for common problems sysadmins may experience] </para>
</section>
