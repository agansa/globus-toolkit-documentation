<?xml version='1.0' encoding='UTF-8'?>
<section id="s-delegation-api">
  <title>Delegation Service API</title>
  <para>The <constant>org.globus.delegation.DelegationUtil</constant> provides an API
 that allows users to get the certificate chain resource property exposed by the Delegation Factory Service, delegate to a service, and to refresh and register listeners.</para>
  <section id="getCertChain">
    <title>To get certificate chain of delegation factory service</title>
    <para><screen>static X509Certificate[] getCertificateChainRP(String delegationUrl)</screen></para>
    <para>This takes  an endpoint URL to a Delegation Factory Service and queries
the <type>CertificateChain</type> resource property. The chain of
certificates is returned as an array of
<type>X509Certificate</type>. The client needs to delegate on the
first certificate in the returned chain.</para>
  </section>
  <section id="delegate">
    <title>To delegate</title>
    <screen>public static EndpointReferenceType delegate(String delegationServiceUrl,
                                                 GlobusCredential issuingCred,
                                                 X509Certificate certificate,
                                                 int lifetime,
                                                 boolean fullDelegation,
                                                 ClientSecurityDescriptor desc)</screen>
    <para>This utility method is used to create the security token to
delegate using the <parameter>issuingCred</parameter> and <parameter>certificate</parameter>
parameters. The lifetime and type of the delegated credential created
is determined by the <parameter>lifetime</parameter> and <parameter>fullDelegation</parameter>
parameters. The security token (delegated credential) thus created is
then stored  by the Delegation Factory Service specified by the
<parameter>delegationServiceUrl</parameter>. The client security descriptor determines
the authentication mechanism, protection and authorization  settings to
use.</para>
    <para>The Endpoint Reference that is returned points to the delegated credential
and can be used by co-hosted services (services in the same hosting
environment) to retrieve the delegated credential.</para>
  </section>
  <section id="refresh">
    <title>To refresh a delegated credential</title>
    <screen>public static void refresh(GlobusCredential issuingCred,
                               X509Certificate certToSign,
                               int lifetime,
                               boolean fullDelegation,
                               ClientSecurityDescriptor desc,
                               EndpointReferenceType epr)</screen>
    <para>This method can be used to refresh a delegated credential that is
referred to by  the EPR <parameter>epr</parameter>. A new delegated credential is created using the 
<parameter>issuingCred</parameter>, <parameter>certToSign</parameter>, <parameter>lifetime</parameter> and
<parameter>fullDelegation</parameter> parameters. The client security descriptor determines
the authentication mechanism, protection and authorization type to
use.</para>
  </section>
  <section id="registerListener">
    <title>To register listener</title>
    <screen>static void
        registerDelegationListener(EndpointReferenceType epr,
                                   DelegationRefreshListener listener,
                                   Subject subject)</screen>
    <para>This method registers the listener <parameter>listener</parameter> with the
delegation resource referenced by <parameter>epr</parameter>. The operation is
permitted only if the  identity in the subject object matches that of the user who delegated the credential.</para>
    <screen>static void
        registerDelegationListener(EndpointReferenceType epr,
                                   DelegationRefreshListener listener)</screen>
    <para>This  method  provides the same functionality as the previous one,  except that the
subject object is picked up from the property
<constant>org.globus.wsrf.security.Constants.PEER_SUBJECT</constant> in the
current message context. If the identity of the  user who 
delegated the credential matches that  of the subject object referred to by the property, then the operation is
permitted.</para>
  </section>
</section>
