<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

  <chapter id="gram4-migrating-gt40">
    <title>Migrating GRAM from GT4.0</title>
      <para>The <replaceable role="entity">version</replaceable>
      protocol has been changed to be WSRF 1.2, WSN 1.3 and WS Addressing
      1.0 compliant. There is no backward compatibility between
      <replaceable role="entity">version</replaceable> and 4.0.</para>

<section> <title>Admin - Migration Guide</title>

  <section id="gram4-admin-migrating-gt4-default-lrm">
    <title>Default local resource manager</title>
    <para>
      In GRAM4 an administrator can configure a default local resource manager
      being used for job submission if the client did not specify any in a job
      submission request. Check section <olink targetdoc="gram4Admin"
      targetptr="gram4-Interface_Config_default-lrm">Defining a default local
      resource manager</olink> in the <olink targetdoc="gram4Admin">System
      Administrator's Guide</olink> for more information.
    </para>
  </section>

  <section id="gram4-admin-migrating-gt4-audit">
    <title>Audit Logging</title>
    <para>
      The log4j configuration for audit logging in GRAM4 in 4.2 is slightly
      different compared to the 4.0 series. This involves log4j and database
      configuration changes. For the log4j configuration check section
      section <olink targetdoc="gram4Admin"
      targetptr="gram4-audit-logging-config-log4j">Configure Log4j</olink> in the
      <olink targetdoc="gram4Admin">System Administrator's Guide</olink> for more
      information. For the database related changes check
      <olink targetdoc="gram4Admin"
      targetptr="gram4-audit-logging-config-database">Configure the Database in
      JNDI</olink> in the <olink targetdoc="gram4Admin">System
      Administrator's Guide</olink>.
    </para>
  </section>

  <section id="gram4-admin-migrating-gt4-lifetime">
    <title>Job lifetime</title>
    <para>
      An administrator can configure lifetime parameters for all jobs in GRAM4's
      JNDI configuration. In short these parameters restrict the maximum lifetime
      a client can set on a job, and the maximum time a job is kept in the container
      and thus in the persistence directory after the job had been fully processed.
      Check section <olink targetdoc="executionKey"
      targetptr="execution-approach-lifetime">Job Lifetime</olink> in the
      <olink targetdoc="executionKey">Execution key concepts</olink> and section
      <olink targetdoc="gram4Admin" targetptr="gram4-Interface_Config_lifetime">Job
      lifetime configuration </olink> in the <olink targetdoc="gram4Admin">System
      Administrator's Guide</olink> for more information.
    </para>
  </section>

  <section id="gram4-admin-migrating-gt4-li">
    <title>Local Java calls from GRAM4 to RFT</title>
    <para>
      By default GRAM4 in the 4.0 series does Web Service invocations when
      calling RFT to perform staging and file cleanup. The default in GRAM4 in 
      4.2 is local java calls to significantly improve performance in jobs with
      staging and file cleanup. If GRAM4 is configured to use RFT in a separate
      machine local invocations are disabled. For more information check the section
      <olink targetdoc="gram4Admin" targetptr="gram4-Interface_Config_Frag-rft">GRAM4
      - RFT interaction</olink> in the <olink targetdoc="gram4Admin">System
      Administrator's Guide</olink>
    </para>
  </section>

  <section id="gram4-admin-migrating-gt4-seg-threadpool">
    <title>Threads for SEG event processing</title>
    <para>
      An administrator can configure the number of threads in the thread-pool that
      is responsible for handling scheduler events. The default size should be fine
      for all Scheduler Event Generators (SEGs) provided by Globus. It might be
      interesting for custom written SEGs. Check section
      <olink targetdoc="gram4Admin" targetptr="gram4-Interface_Config_threadpools">Configuring
      thread-pools</olink> in the <olink targetdoc="gram4Admin">System
      Administrator's Guide</olink> for more information.
    </para>
  </section>

</section>

<section> <title>User - Migration Guide</title>

  <section id="gram4-user-migrating-gt4-specupgrade">
    <title>Specification upgrade related changes</title>
    <para>
      Due to the WSRF, WSN and WS-Adressing specification upgrade some
      namespaces changed. All occurences of the following old 4.0 namespaces
      must be updated to the new 4.2 namespaces.
      <informaltable><tgroup cols="2">
      <thead>
        <row>
          <entry>4.0</entry>
          <entry>4.2</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry><para>http://schemas.xmlsoap.org/ws/2004/03/addressing</para></entry>
          <entry><para>http://www.w3.org/2005/08/addressing</para></entry>
        </row>
        <row>
          <entry><para>http://www.globus.org/namespaces/2004/10/gram/job</para></entry>
          <entry><para>http://www.globus.org/namespaces/2008/03/gram/job</para></entry>
        </row>
        <row>
          <entry><para>http://www.globus.org/namespaces/2004/10/rft</para></entry>
          <entry><para>http://www.globus.org/namespaces/2008/04/rft</para></entry>
        </row>
      </tbody>
      </tgroup></informaltable>
      Additionally, in a job description the ReferenceProperties element must be
      renamed to ReferenceParameters.
    </para>
    <para>
      The following shows a factoryEndpoint element of a 4.0 job description
      and a 4.2 job description:
    </para>
    <screen># Endpoint in 4.0
&lt;factoryEndpoint
  xmlns:gram="http://www.globus.org/namespaces/2004/10/gram/job"
  xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
  &lt;wsa:Address&gt;
    https://grid-w.ncsa.teragrid.org:8444/wsrf/services/ManagedJobFactoryService
  &lt;/wsa:Address&gt;
  &lt;wsa:ReferenceProperties&gt;
    &lt;gram:ResourceID&gt;Fork&lt;/gram:ResourceID&gt;
  &lt;/wsa:ReferenceProperties&gt;
&lt;/factoryEndpoint&gt;</screen>
    <para></para>
    <screen># Endpoint in 4.2
&lt;factoryEndpoint
  xmlns:gram="http://www.globus.org/namespaces/2008/03/gram/job"
  xmlns:wsa="http://www.w3.org/2005/08/addressing"&gt;
  &lt;wsa:Address&gt;
    https://grid-w.ncsa.teragrid.org:8444/wsrf/services/ManagedJobFactoryService
  &lt;/wsa:Address&gt;
  &lt;wsa:ReferenceParameters&gt;
    &lt;gram:ResourceID&gt;Fork&lt;/gram:ResourceID&gt;
  &lt;/wsa:ReferenceParameters&gt;
&lt;/factoryEndpoint&gt;</screen>
  </section>

  <section id="gram4-user-migrating-gt4-default-lrm">
    <title>Local resource manager</title>
    <para>
      GRAM4 in 4.2 defines a default local resource manager which is used for
      job execution if the user did not explicitly specify one. A user however
      still can specify a local resource manager (LRM), e.g. if it's required
      that a job runs in a certain LRM. Check
      <itemizedlist>
        <listitem><simpara>
          <olink targetdoc="gram4User" targetptr="gram4-user-finding-availablescheduler">Finding
          available local resource managers</olink> to get information about how
          to get a list of available LRM's of a GRAM4 instance.
        </simpara></listitem>
        <listitem><simpara>
          <olink targetdoc="gram4User" targetptr="gram4-user-finding-defaultscheduler">Finding
          the default local resource manager</olink> to find out which LRM is
          the default LRM of a GRAM4 instance.
        </simpara></listitem>
        <listitem><simpara>
          <olink targetdoc="gram4User" targetptr="gram4-user-lrm">Specifying a
          local resource manager</olink> to get information about how
          to submit to the default vs to a non-default LRM.
        </simpara></listitem>
      </itemizedlist>      
    </para>
  </section>

  <section id="gram4-user-migrating-gt4-lifetime">
    <title>Job Lifetime</title>
    <para>
      globusrun-ws in 4.0 sets a default lifetime of 24h on a job if a user
      does not explicitly set it. In 4.2 a job will run to completion in any
      event if no lifetime is specified, i.e. it will not be terminated after 24h.
    </para>
    <para>
      However, there are server-side settings define limits on an explicitly
      requested lifetime, and that determine what will happen to a completed job
      if no lifetime had been set.
      Check section <olink targetdoc="executionKey"
      targetptr="execution-approach-lifetime">Job Lifetime</olink> in the
      <olink targetdoc="executionKey">Execution key concepts</olink> and section
      <olink targetdoc="gram4User" targetptr="gram4-user-lifetime">Job
      Lifetime</olink> in the
      <olink targetdoc="gram4User">User's Guide</olink> for more
      information.
    </para>
  </section>

</section>

<section> <title>Developer - Migration Guide</title>

  <section id="gram4-develper-migrating-gt4-specupgrade">
    <title>Specification upgrade related changes</title>
    <para>
      Due to the WSRF, WSN and WS-Adressing specification upgrade namespaces 
      of many components have changed.
      Check section <olink targetptr="gram4-user-migrating-gt4-specupgrade">Specification
      upgrade related changes</olink> and the Java WS Core
      <olink targetptr="gram4-user-migrating-gt4-specupgrade">Migration guide</olink>
      for details.
    </para>
  </section>

  <section id="gram4-developer-migrating-gt4-termination">
    <title>Job termination</title>
    <para>
      GRAM4 does not extend from the ImmediateResourceTermination port type anymore, 
      i.e. the Destroy() operation is no longer available to synchronously destroy
      job resources. Instead GRAM4 offers an asynchronous Terminate() method that
      lets clients terminate jobs and destroy a job resource.
      Check the TerminateManagedJobPortType PortType in the
      <olink targetdoc="gram4Developer" targetptr="gram4-wsdl">WSDL section</olink>
      of the <olink targetdoc="gram4Developer">Developer's guide</olink>
      for details and section <olink targetdoc="gram4Developer"
      targetptr="gram4-selective-concepts-termination">Job termination</olink> for
      explanations of the new termination interface.
    </para>
  </section>

  <section id="gram4-developer-migrating-gt4-lifetime">
    <title>Job lifetime</title>
    <para>
      The Java API GramJob in 4.0 sets a default lifetime of 24h on a job if a
      developer does not explicitly set it. In 4.2 it will not be set and a job
      will run to completion in any event if no lifetime is specified, i.e. it
      will not be terminated after 24h.
    </para>
    <para>
      However, there are server-side settings define limits on an explicitly
      requested lifetime, and that determine what will happen to a completed job
      if no lifetime had been set.
      Check section <olink targetdoc="executionKey"
      targetptr="execution-approach-lifetime">Job Lifetime</olink> in the
      <olink targetdoc="executionKey">Execution key concepts</olink> and section
      <olink targetdoc="gram4User" targetptr="gram4-user-lifetime">Job
      Lifetime</olink> in the
      <olink targetdoc="gram4User">User's Guide</olink> for more
      information.
    </para>
  </section>

  <section id="gram4-developer-migrating-gt4-subscriptions">
    <title>Subscription resources</title>
    <para>
      In GRAM4 in the 4.0 series a client had to destroy subscription resources
      before destroying a job if it subscribed for notifications in order to cleanup
      state on the server-side.
      In GRAM4 in 4.2 all subscription resources of a job resource are destroyed
      on the server-side automatically if a job resource is destroyed. There's no
      need to keep track of subscription resources anymore. 
    </para>
  </section>

  <section id="gram4-developer-migrating-gt4-default-lrm">
    <title>Default local resource manager</title>
    <para>
      In GRAM4 an administrator can configure a default local resource manager (LRM)
      being used for job submission if the client did not specify any in a job
      submission request.
      To submit a job to the default local resource manager just don't put
      a ReferenceParameters element in the EndpointReference used to contact
      GRAM4's job factory service.
      By querying resource properties of GRAM4's factory service a client can find
      out which local resource manager is the default, or which LRM's are 
      available on the server-side.
    </para>
  </section>
    
  <section id="gram4-developer-migrating-gt4-client-mj-uuid">
    <title>Client-side generated UUIDS for MultiJobs</title>
    <para>
      In GRAM4 in GT 4.0 the client-side generated submission being set in
      CreateManagedJobInputType.JobID had been used as server-side job id for
      multi-jobs. In GRAM4 in 4.2 a UUID is created on the server-side to manage
      the job and the client-side generated ID will only be stored to enable
      reliable job submission. A client cannot use the self-generated id for any
      job operation besides a second submission call for multi-jobs anymore.
      See section <olink targetdoc="gram4User"
      targetptr="gram4-user-submissionid">Client-Side Generated Submission ID</olink>
      for more information about this.
    </para>
  </section>

  <section id="gram4-developer-migrating-gt4-api">
    <title>API changes</title>

    <section id="gram4-developer-migrating-gt4-api-service">
      <title>Service</title>
      <para>
        namespace, termination, destruction, fault types,
        RPs (fault, defaultLRM, availableLRMs, lifetime-things),
        topic name change, final job states
      </para>
    </section>

    <section id="gram4-developer-migrating-gt4-api-client">
      <title>Client</title>
          
      <section id="gram4-developer-migrating-gt4-api-client-gramjob">
        <title>Java client GramJob</title>
        <para></para>
      </section>

      <section id="gram4-developer-migrating-gt4-api-client-c">
        <title>C client API</title>
        <para></para>
      </section>
    
    </section>
  </section>
</section>

</chapter>