<title>GT 4.0 WS GRAM: Developer's Guide</title>
<titleabbrev>Developer's Guide</titleabbrev> 

<section id="s-wsgram-developer-introduction"><title>Introduction</title>
<para>
This guide is intended to help a developer create compatible WS GRAM clients
and alternate service implementations.
</para>
<para>The key concepts for the GRAM component have not changed. Its purpose
  is still to provide the mechanisms to execute remote applications for a
  user. Given an RSL (Resource Specification Language) job description,
  GRAM submits the job to a scheduling system such as PBS or Condor, or
  to a simple fork-based way of spawning processes,
  and monitors it until completion. More details can be found here:</para>
<para><ulink url="http://www-unix.globus.org/toolkit/docs/3.2/gram/key">http://www-unix.globus.org/toolkit/docs/3.2/gram/key</ulink></para>

</section>



<section id="s-wsgram-developer-archdes"><title>Architecture and design overview</title>

<para>  The GRAM services in GT 4.0 are WSRF compliant. One of the key
  concepts in the <ulink url="http://www.globus.org/wsrf/">WSRF</ulink> specification
  is the decoupling of a  service with the public &quot;state&quot; of the service
  in the interface via the <ulink url="http://www.globus.org/wsrf/faq.asp#wsrf12">implied
  resource pattern</ulink>.
  Following this concept, the data of GT 4.0 GRAM jobs is published
  as part of WSRF resources, while there is only one service
  to start jobs or query and monitor their state. This is different from the
   <ulink url="http://www.gridforum.org/ogsi-wg/drafts/draft-ggf-ogsi-gridservice-04_2002-10-04.pdf">OGSI</ulink> model
   of GT3 where each job was represented as a separate service. There is still
   a job factory service that can be called in order to create job instances
   (represented as WSRF resources). Each scheduling system that GRAM is interfaced
   with is represented as a separate factory resource. By making a call to the
   factory service while associating the call to  the appropriate factory resource,
   the job submitting actor can create  a job resource mapping to a job in the
   chosen scheduling system.</para>

</section>

<section id="s-wsgram-developer-states">
<title>Internal and External Job States</title>

<section id="s-wsgram-developer-states-Summary">
<title>Summary</title>
<para>
The Managed Executable Job Service relies on a state machine to handle state
transitions. There are two sets of states: internal and external.  The external
states are those that the user sees. The internal states are those that are
strictly used by the state machine to step through all the neccessary internal
tasks that need to be performed for a particular job.
</para>

<para>
The Managed Multi-Job Service does not rely on a state machine, but instead
makes judgements after receiving notifications from the sub-jobs about which
external state it should be in.  The external states for the MMJS are identical
to the ones used by the MEJS.
</para>
</section>

<section>
<title>External and Internal States of the Managed Job Services</title>

<section>
<title>External States of the Managed Job Services</title>
<itemizedlist>
<listitem><simpara>Unsubmitted</simpara></listitem>
<listitem><simpara>StageIn</simpara></listitem>
<listitem><simpara>Pending</simpara></listitem>
<listitem><simpara>Active</simpara></listitem>
<listitem><simpara>Suspended</simpara></listitem>
<listitem><simpara>StageOut</simpara></listitem>
<listitem><simpara>CleanUp</simpara></listitem>
<listitem><simpara>Done</simpara></listitem>
<listitem><simpara>Failed</simpara></listitem>
</itemizedlist>
</section>

<section>
<title>Internal States of the Managed Executable Job Service</title>
<itemizedlist>
<listitem><simpara>None</simpara></listitem>
<listitem><simpara>Restart</simpara></listitem>
<listitem><simpara>Start</simpara></listitem>
<listitem><simpara>StageIn</simpara></listitem>
<listitem><simpara>StageInResponse</simpara></listitem>
<listitem><simpara>Submit</simpara></listitem>
<listitem><simpara>OpenStdout</simpara></listitem>
<listitem><simpara>OpenStderr</simpara></listitem>
<listitem><simpara>WaitingForStateChanges</simpara></listitem>
<listitem><simpara>MergeStdout</simpara></listitem>
<listitem><simpara>StageOut</simpara></listitem>
<listitem><simpara>StageOutResponse</simpara></listitem>
<listitem><simpara>UserCancel</simpara></listitem>
<listitem><simpara>UserCancelResponse</simpara></listitem>
<listitem><simpara>SystemCancel</simpara></listitem>
<listitem><simpara>CleanUp</simpara></listitem>
<listitem><simpara>FileCleanUp</simpara></listitem>
<listitem><simpara>FileCleanUpResponse</simpara></listitem>
<listitem><simpara>CacheCleanUp</simpara></listitem>
<listitem><simpara>CacheCleanUpResponse</simpara></listitem>
<listitem><simpara>ScratchCleanUp</simpara></listitem>
<listitem><simpara>ScratchCleanUpResponse</simpara></listitem>
<listitem><simpara>Suspend</simpara></listitem>
<listitem><simpara>Resume</simpara></listitem>
<listitem><simpara>Done</simpara></listitem>
<listitem><simpara>FailureFileCleanUp</simpara></listitem>
<listitem><simpara>FailureFileCleanUpResponse</simpara></listitem>
<listitem><simpara>FailureCacheCleanUp</simpara></listitem>
<listitem><simpara>FailureCacheCleanUpResponse</simpara></listitem>
<listitem><simpara>FailureScratchCleanUp</simpara></listitem>
<listitem><simpara>FailureScratchCleanUpResponse</simpara></listitem>
<listitem><simpara>Failed</simpara></listitem>
<listitem><simpara>UnsubmittedHold</simpara></listitem>
<listitem><simpara>StageInHold</simpara></listitem>
<listitem><simpara>PendingHold</simpara></listitem>
<listitem><simpara>ActiveHold</simpara></listitem>
<listitem><simpara>SuspendedHold</simpara></listitem>
<listitem><simpara>StageOutHold</simpara></listitem>
<listitem><simpara>CleanUpHold</simpara></listitem>
<listitem><simpara>DoneHold</simpara></listitem>
<listitem><simpara>FailedHold</simpara></listitem>
</itemizedlist>
</section>

</section>

<section>
<title>Managed Executable Job Service Internal State Diagram</title>
<para>
Here is a diagram illustrating the internal state transitions of the
Managed Executable Job Service and how the external states are triggered
within this progression: <ulink url="developer/MEJS_internal_state_transitions.jpg">Managed Executable Job Service Internal State Transition Diagram</ulink>.
</para>
</section>

</section>


<section id="s-wsgram-developer-pubinterfaces"><title>Public interface</title>

<para>The semantics and syntax of the APIs and WSDL for the component, along with
  descriptions of domain-specific structured interface data, can be found in
  <xref linkend="c-wsgram-Public_Interfaces"/>.</para>

</section>


<section id="s-wsgram-developer-scenarios"><title>Usage scenarios</title>
&WS_GRAM_Scenarios_Frag;
</section>

<section id="s-wsgram-developer-tutorials"><title>Tutorials</title>
<para>The following tutorials are available for WS GRAM developers:</para>
<itemizedlist>
  <listitem><simpara><ulink url="scheduler-tutorial.html">WS-GRAM Scheduler Interface Tutorial</ulink> </simpara></listitem>
</itemizedlist>
</section>

<section id="s-wsgram-developer-features"><title>Feature summary</title>
&WS_GRAM_Feature_Summary_Frag;
</section>

<section id="s-wsgram-developer-platforms"><title>Tested platforms</title>
&WS_GRAM_Platform_Summary_Frag;
</section>

<section id="s-wsgram-developer-compatibility"><title>Backward compatibility summary</title>
&WS_GRAM_Compatibility_Summary_Frag;
</section>

<section id="s-wsgram-developer-dependencies"><title>Technology dependencies</title>
&WS_GRAM_Dependencies_Summary_Frag;
</section>

<section id="s-wsgram-developer-security_considerations"><title>Security considerations </title>
&WS_GRAM_Security_Considerations_Frag;
</section>

<section id="s-wsgram-developer-debugging"><title>Debugging</title>
&WS_GRAM_Debugging_Frag;
</section>

<section id="s-wsgram-developer-troubleshooting"><title>Troubleshooting</title>
&WS_GRAM_Troubleshooting_Frag;
</section>

<section id="s-wsgram-developer-relateddocs"><title>Related Documentation</title>
<para>No related documentation links have been determined at this time.</para>
</section>

<section id="s-wsgram-developer-internal-components"><title>Internal Components</title>
<para><ulink url="developer/internal-components.html">Internal Components</ulink></para></section>





