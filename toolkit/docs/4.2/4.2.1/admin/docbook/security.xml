<chapter>
	<title>Security Overview</title>

	<para>Authentication in the Globus Toolkit is based on X.509 certificates.
		This document describes the configuration steps required to:
	</para>
	<itemizedlist>
		<listitem><simpara>Determine whether or not to trust certificates issued by a particular
				Certificate Authority (CA),</simpara></listitem>
		<listitem><simpara>Provide appropriate default values for use by the
				<command>grid-cert-request</command> command, which is used to generate
				certificates,</simpara></listitem>

		<listitem><simpara>Request <emphasis>service certificates</emphasis>, used by services to authenticate
				themselves to users, and</simpara></listitem>
		<listitem><simpara>Specify identity mapping information.</simpara></listitem>
	</itemizedlist>
	<section id="s-sec-configuration"><title>Configuration</title> 
		<para>This section describes the configuration steps required to:
		</para>
		<itemizedlist>
			<listitem><simpara>Determine whether or not to trust certificates issued by a particular
					Certificate Authority (CA),</simpara></listitem>
			<listitem><simpara>Provide appropriate default values for use by the
				<command>grid-cert-request</command> command, which is used to generate
				certificates,</simpara></listitem>
			<listitem><simpara>Request <emphasis>service certificates</emphasis>, used by services to authenticate
					themselves to users, and</simpara></listitem>
			<listitem><simpara>Specify identity mapping information.</simpara></listitem>
		</itemizedlist>
		<para>In general, Globus tools will look for a configuration file in a
			user-specific location first, and in a systemwide location if no
			user-specific file was found.  The configuration commands described
			here may be run by administrators to create systemwide defaults, and by
			individuals to override those defaults.
			[TODO:  Add a reference to an overview document]
		</para>
	</section>
	<section><title>Configuring Globus to Trust a Particular Certificate Authority</title>

		<para>The Globus tools will trust certificates issued by a CA if (and only if) it
			can find information about that CA in the trusted certificate directory.
			[TODO: link to the environment fragment, which explains where the
			trusted certificates directory is]
			The
			following two files must exist in that directory for each trusted CA:
		</para>
		<table>
			<title>Trusted CA files</title>
			<tgroup cols="2">
				<tbody>
					<row>
						<entry><filename><replaceable>cert_hash</replaceable>.0</filename></entry>
						<entry>The trusted CA certificate.</entry>
					</row>
					<row>
						<entry><filename><replaceable>cert_hash</replaceable>.signing_policy</filename></entry>
						<entry>A configuration file defining the distinguished names of certificates
							signed by the CA.
						</entry>
					</row>
		</tbody></tgroup></table>

		<para>
			Pre-WS Globus components will honor a certificate only if:
		</para>
		<itemizedlist>
			<listitem><simpara>its CA certificate
				exists (with the appropriate name) in the <replaceable>TRUSTED_CA</replaceable> directory,
				and</simpara></listitem>
		<listitem><simpara>the certificate's distinguished name matches the pattern described in
				the signing policy file.</simpara></listitem>
		</itemizedlist>
		<para>WSRF-based components ignore the signing policy file and will honor
			all valid certificates issued by trusted CAs.
		</para>
		<para>The <replaceable>cert_hash</replaceable> that appears in the file names above is the hash of
			the CA certificate, which can be found by running the command:

		</para>
		<screen><command>$GLOBUS_LOCATION/bin/openssl x509 -hash -noout &lt; <replaceable>ca_certificate</replaceable></command>
		</screen>
		<para>Some CAs provide tools to install their CA certificates and signing policy
			files into the trusted certificates directory.  You can, however, create
			a signing policy file by hand; the signing policy file has the following
			format:
		</para>
		<screen>
			access_id_CA X509 '<replaceable>CA Distinguished Name</replaceable>'
			pos_rights globus CA:sign
			cond_subjects globus '"<replaceable>Distinguished Name Pattern</replaceable>"'
		</screen>
		<para>In the above, the <replaceable>CA Distinguished Name</replaceable> is the subject name of the
			CA certificate, and the <replaceable>Distinguished Name Pattern</replaceable> is a string
			used to match the distinguished names of certificates granted by the CA.
			Some very simple wildcard matching is done -- if the
			<replaceable>Distinguished Name Pattern</replaceable> ends with a '*', then any distinguished
			name that matches the part of the CA subject name before the '*' is considered
			a match.  Note:  the cond_subjects line may contain a space-separated list of distinguished name patterns.

		</para>
	</section>
	<section><title>Configuring Globus to Create Appropriate Certificate Requests</title>
		<para>The <command>grid-cert-request</command> command, which is used to create certificates,
			uses the following configuration files:
		</para>

		<table>
			<title>grid-cert-request configuration files</title>
			<tgroup cols="2">
				<tbody>
					<row>
						<entry><filename>globus-user-ssl.conf</filename></entry>
						<entry>defines the distinguished name to
							use for a user's certificate request. The format is described 
							<ulink url="http://www.openssl.org/docs/apps/req.html#CONFIGURATION_FILE_FORMAT">here</ulink>.</entry>

					</row>
					<row>
						<entry><filename>globus-host-ssl.conf</filename></entry>
						<entry>defines the distinguished name for a
							host (or service) certificate request. The format is described 
							<ulink url="http://www.openssl.org/docs/apps/req.html#CONFIGURATION_FILE_FORMAT">here</ulink>.</entry>
					</row>
					<row>
						<entry><filename>grid-security.conf</filename></entry>
						<entry>a base configuration file that contains the name and email address
							for the CA.</entry>
					</row>
			</tbody></tgroup>
		</table>

		<para>Many CAs provide tools to install configuration files called
			<filename>globus-user-ssl.conf.<replaceable>cert_hash</replaceable></filename>,
			<filename>globus-host-ssl.conf.<replaceable>cert_hash</replaceable></filename>, and
			<filename>grid_security.conf.<replaceable>cert_hash</replaceable></filename>
			in the trusted certificates directory.  The command:
		</para>
		<screen>
			<command>grid-cert-request -ca <replaceable>cert_hash</replaceable></command>
		</screen>
		<para>will create a certificate request based on the specified CA's configuration
			files.  The command:
		</para>
		<screen>
			<command>grid-cert-request -ca</command>
		</screen>
		<para>will list the available CAs and let the user choose which one to create a
			request for.
		</para>
		<para>You can specify a default CA for certificate requests (i.e., a CA that
			will be used if <command>grid-cert-request</command> is invoked without the
			<command>-ca</command> flag) by making the following symbolic links (where
			<replaceable>GRID_SECURITY</replaceable> is the grid security directory [TODO: link to environment
			fragment] and <replaceable>TRUSTED_CA</replaceable> is the trusted CA directory:

		</para>
		<screen>
			ln -s <replaceable>GRID_SECURITY</replaceable>/globus-user-ssl.conf \
			<replaceable>TRUSTED_CA</replaceable>/globus-user-ssl.conf.<replaceable>cert_hash</replaceable>
			ln -s <replaceable>GRID_SECURITY</replaceable>/globus-host-ssl.conf \
			<replaceable>TRUSTED_CA</replaceable>/globus-host-ssl.conf.<replaceable>cert_hash</replaceable>

			ln -s <replaceable>GRID_SECURITY</replaceable>/grid_security.conf \
			<replaceable>TRUSTED_CA</replaceable>/grid_security.conf.<replaceable>cert_hash</replaceable>
		</screen>
	</section>
	<section><title>Requesting Service Certificates</title>
		<para>Different CAs use different mechanisms for issuing end-user
			certificates; some use mechanisms that are entirely web-based, while
			others require you to generate a certificate request and send it to
			the CA. If you need to create a certificate request for a
			service certificate, you can do so by running:
		</para>
		<screen>
			grid-cert-request -host <replaceable>hostname</replaceable> -service <replaceable>service_name</replaceable>

		</screen>
		<para>where <replaceable>hostname</replaceable> is the fully-qualified name of the host on which
			the service will be running, and <replaceable>service_name</replaceable> is the name of the
			service.  This will create the following three files:
		</para>
		<table>
			<title>grid-cert-request output files</title>
			<tgroup cols="2">
				<tbody><row>
						<entry><filename><replaceable>GRID_SECURITY/service_name/service_name</replaceable>cert.pem</filename></entry>
						<entry>
							An empty file.  When you receive your actual service certificate from your CA,
							you should place it in this file.
						</entry>
					</row>
					<row>
						<entry><filename><replaceable>GRID_SECURITY/service_name/service_name</replaceable>cert_request.pem</filename></entry>
						<entry>
							The certificate request, which you should send to your CA.
						</entry>
					</row>
					<row>
						<entry><filename><replaceable>GRID_SECURITY/service_name/service_name</replaceable>key.pem</filename></entry>
						<entry>
							The private key associated with your certificate request, encrypted with
							the pass phrase that you entered when prompted by <command>grid-cert-request</command>.
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<para>The <command>grid-cert-request</command> command recognizes several other useful
			options; you can list these with:
		</para>
		<screen>
			<command>grid-cert-request -help</command>
		</screen>
	</section>
	<section><title>Specifying Identity Mapping Information</title>
		<para>Several Globus services map distinguished names (found in certificates) to
			local identities (e.g., unix logins).  These mappings are maintained in
			the <filename>gridmap</filename> file.
			[TODO:  link to the environment fragment,
			which tells how to find the gridmap file]
			A gridmap line of the form:

		</para>
		<screen>
			"<replaceable>Distinguished Name</replaceable>" <replaceable>local_name</replaceable>
		</screen>
		<para>maps the distinguished name <replaceable>Distinguished Name</replaceable> to the local name
			<replaceable>local_name</replaceable>.
			A gridmap line of the form:
		</para>
		<screen>

			"<replaceable>Distinguished Name</replaceable>" <replaceable>local_name1</replaceable>,<replaceable>local_name2</replaceable>
		</screen>
		<para>maps <replaceable>Distinguished Name</replaceable> to both <replaceable>local_name1</replaceable> and
			<replaceable>local_name2</replaceable>; any number of local user names may occur in the

			comma-separated local name list.
		</para>
		<para>Several tools exist to manage gridmap files.
			To add an entry to the gridmap file, run:
		</para>
		<screen>
			$GLOBUS_LOCATION/sbin/grid-mapfile-add-entry \
			-dn "<replaceable>Distinguished Name</replaceable>" \
			-ln <replaceable>local_name</replaceable>
		</screen>
		<para>To delete an entry from the <filename>gridmap</filename> file, run:
		</para>

		<screen>
			$GLOBUS_LOCATION/sbin/grid-mapfile-delete-entry \
			-dn "<replaceable>Distinguished Name</replaceable>" \
			-ln <replaceable>local_name</replaceable>
		</screen>
		<para>To check the consistency of the <filename>gridmap</filename> file, run
		</para>
		<screen>
			$GLOBUS_LOCATION/sbin/grid-mapfile-check-consistency
		</screen>

		<para>These commands recognize several useful options, including a
			<command>-help</command> option, which lists detailed usage information.
		</para>
		<para>
			The location of the <filename>gridmap</filename> file is determined as follows:
		</para>
		<orderedlist>
			<listitem><simpara>If the <envar>GRIDMAP</envar> environment variable is set, the <filename>gridmap</filename>
					file location is the value of that environment variable.</simpara></listitem>

			<listitem><simpara>Otherwise:</simpara>
				<orderedlist>
					<listitem><simpara>If the user is root (uid 0), then the <filename>gridmap</filename> file is
							<filename>/etc/grid-security/grid-mapfile</filename>.</simpara></listitem>
					<listitem><simpara>Otherwise, the <filename>gridmap</filename> file is
							<filename>$<envar>HOME</envar>/.gridmap</filename></simpara></listitem>
				</orderedlist>
			</listitem>
		</orderedlist>
	</section>
	<section><title>GSI File Permissions Requirements</title>
		<itemizedlist>
			<listitem><simpara>
					<ulink url="../glossary.html#End_Entity_Certificate_EEC"> End Entity</ulink>
					(<ulink url="../glossary.html#User_Certificate">User</ulink>, <ulink
						url="../glossary.html#Host_Certificate">Host</ulink> and <ulink
						url="../glossary.html#Service_Certificate">Service</ulink>)
					Certificates and the <ulink
						url="../glossary.html#GSI_Authorization_Callout_Configuration">GSI
						Authorization Callout Configuration File</ulink>:</simpara>
				<itemizedlist>
					<listitem><simpara>May not be executable</simpara></listitem>
					<listitem><simpara>May not be writable by group and other</simpara></listitem>
					<listitem><simpara>Must be either regular files or soft links</simpara></listitem>
			</itemizedlist></listitem>
			<listitem><simpara><ulink url="../glossary.html#Private_Key"> Private Keys</ulink> and <ulink
					url="../glossary.html#Proxy_Credentials">Proxy Credentials</ulink>:</simpara>
				<itemizedlist>

					<listitem><simpara>Must be owned by the current (effective) user</simpara></listitem>
					<listitem><simpara>May not be executable</simpara></listitem>
					<listitem><simpara>May not be readable by group and other</simpara></listitem>
					<listitem><simpara>May not be writable by group and other</simpara></listitem>
					<listitem><simpara>Must be either regular files or soft links</simpara></listitem>
				</itemizedlist>
			</listitem>
			<listitem><simpara><ulink url="../glossary.html#CA_Certificate"> CA Certificates</ulink>,
				<ulink url="../glossary.html#CA_Signing_Policy">CA Signing Policy
					Files</ulink>, the <ulink url="../glossary.html#Grid_Map_File">Grid Map File</ulink> and the <ulink url="../glossary.html#GAA_Configuration_File">GAA Configuration File</ulink>:</simpara>
				<itemizedlist>
					<listitem><simpara>Have to be either regular files or soft links</simpara></listitem>

				</itemizedlist>
			</listitem>
		</itemizedlist>
	</section>
	<section id="s-sec-troubleshooting"><title>Troubleshooting</title>
		<para>
			The following are some common problems that may cause clients or servers
			to report that credentials are invalid:
		</para>
		<itemizedlist>
			<listitem><para>Your proxy credential may have expired</para>
				<para>
					Use <command>grid-proxy-info</command> to check whether the proxy has actually
					expired.  If it has, generate a new proxy with <command>grid-proxy-init</command>.
			</para></listitem>
			<listitem><para>The system clock on either the local or remote system is wrong</para>
				<para>
					This may cause the server or client to conclude that a credential has
					expired.
			</para></listitem>
			<listitem><para>Your end-user certificate may have expired</para>
				<para>
					Use <command>grid-cert-info</command> to check your certificate's expiration
					date.  If it
					has expired, follow your CA's procedures to get a new
					one.
			</para></listitem>
			<listitem><para>The permissions may be wrong on your proxy file</para>
				<para>
					If the permissions on your proxy file are too lax (for example, if others
					can read your proxy file), Globus Toolkit clients will not use that file
					to authenticate.  You can "fix" this problem by changing the permissions
					on the file or by destroying it (with <command>grid-proxy-destroy</command> and
					creating a new one (with <command>grid-proxy-init</command>).  However, it is still
					possible that someone else has made a copy of that file during the time
					that the permissions were wrong.  In that case, they will be able to
					impersonate you until the proxy file expires or your permissions or
					end-user certificate are revoked, whichever happens first.
			</para></listitem>
			<listitem><para>The permissions may be wrong on your private key file</para>
				<para>
					If the permissions on your end user certificate private key file are too lax
					(for example, if others can read the file), <command>grid-proxy-init</command> will
					refuse to create a proxy certificate.  You can "fix" this by changing the
					permissions on the private key file; however, you will still have a much
					more serious problem:  it's possible that someone has made a copy of
					your private key file.  Although this file is encrypted, it is possible
					that someone will be able to decrypt the private key, at which point they
					will be able to impersonate you as long as your end user certificate is valid.
					You should contact your CA to have your end-user certificate revoked and
					get a new one.
			</para></listitem>
			<listitem><para>The remote system may not trust your CA</para>
				<para>
					Verify that the remote system is configured to trust the CA that issued
					your end-entity certificate.  See the [TODO:  add admin guide link] for
					details.
			</para></listitem>
			<listitem><para>You may not trust the remote system's CA</para>
				<para>
					Verify that your system is configured to trust the remote CA (or that
					your environment is set up to trust the remote CA).  See the [TODO:  
					add admin guide link] for details.
			</para></listitem>
			<listitem><para>There may be something wrong with the remote service's credentials</para>
				<para>
					It is sometimes difficult to distinguish between errors reported by the
					remote service regarding your credentials and errors reported by the
					client interface regarding the remote service's credentials.  If you
					can't find anything wrong with your credentials, check for the same
					conditions (or ask a remote administrator to do so) on the remote system.
			</para></listitem>
			<listitem><para>The following are some common problems that may cause clients or
					servers to report that user are not authorized:
				</para>
				<itemizedlist>

					<listitem><para>The content of the gridmap file does not conform to the expected
							format</para>
						<para>
							Use <command>grid-mapfile-check-consistency</command> to make sure that your
							gridmap conforms to the expected format.
					</para></listitem>

					<listitem><para>The gridmap file does not contain a entry for your DN</para>
						<para>
							Use <command>grid-mapfile-add-entry</command> to add the relevant entry.
						</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
	</section>

</chapter>

