<?xml version="1.0" encoding="UTF-8"?>
<!-- (c) International Business Machines Corporation, 2002 - 2004.--> 
<!-- (c) University of Edinburgh, 2002 - 2004.-->
<!-- See OGSA-DAI-Licence.txt for licencing information.-->
<xsd:schema targetNamespace="http://ogsadai.org.uk/namespaces/2004/05/gdsf/config" 
			  xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
			  xmlns:gdsf="http://ogsadai.org.uk/namespaces/2004/05/gdsf/config" 
			  elementFormDefault="qualified" attributeFormDefault="unqualified">
			  
	<xsd:annotation>
		<xsd:documentation>
			Schema to be used to configure a GDSF instance. In Release 3 of OGSA-DAI a GDSF can only
			expose one data resource to the Grid. An XML file validated by this schema should contain
			enough information to configure a GDSF instance.
		</xsd:documentation>
	</xsd:annotation>

	<!-- ========== Documentation Tag ========== -->
	<xsd:complexType name="DocumentationType" mixed="true">
		<xsd:annotation>
			<xsd:documentation>
			 Allow human readable documentation to be added to a data resource configuration file.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<!-- ========== Metadata Tags ========== -->
	<xsd:complexType name="MetaDataType">
			<xsd:annotation>
				<xsd:documentation>
				  Relational and xml Metadata.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:sequence>
				<xsd:element name="productInfo" type="gdsf:ProductInfoType" minOccurs="0"/>
				<xsd:element name="relationalMetaData" type="gdsf:RelationalMetaDataType" minOccurs="0"/>
				<xsd:element name="xmlMetaData" type="gdsf:XMLMetaDataType" minOccurs="0"/>
				<xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
	</xsd:complexType>
	
	<!--specific meta data types-->
	<xsd:complexType name="ProductInfoType">
		<xsd:annotation>
			<xsd:documentation>
				Provide some information about the underlying data resource.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="productName" type="xsd:string"/>
			<xsd:element name="productVersion" type="xsd:string"/>
			<xsd:element name="vendorName" type="xsd:string"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:QName" use="optional"/>
	</xsd:complexType>
	
	<xsd:complexType name="RelationalMetaDataType">
		<xsd:annotation>
			<xsd:documentation>
			 	Relational meta data.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="databaseSchema" type="gdsf:CallbackSetterType"/>
			<xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="XMLMetaDataType">
		<xsd:annotation>
			<xsd:documentation>
			 	XML meta data.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="collectionSchema" type="gdsf:CallbackSetterType" minOccurs="0"/>
			<xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="optional"/>
	</xsd:complexType>

	<xsd:complexType name="CallbackSetterType">
		<xsd:annotation>
			<xsd:documentation>
				General type for defining a callback class for generating content for dynamic 
				service data elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="name" type="xsd:QName" use="optional"/>
		<xsd:attribute name="callback" type="xsd:string" use="required"/>
	</xsd:complexType>

	<!-- ========== Role Map Type ========== -->
	<xsd:complexType name="RoleMapType">
		<xsd:annotation>
			<xsd:documentation>
			 Provides mapping between the grid credentials and the database access role. This
                     is done through the implementation element below. The configuration allows a file to 
                     be used to point to a configuration file.
             	      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="name" type="xsd:Name" use="optional"/>
		<xsd:attribute name="implementation" type="xsd:string" use="required"/>
		<xsd:attribute name="configuration" type="xsd:string" use="optional"/>
	</xsd:complexType>

	<!-- ========= What used to be the data resource implementation ========== -->
	<xsd:complexType name="DataResourceType">
		<xsd:annotation>
			<xsd:documentation>
			   Provides a mechanism for managing connections and data resource specific functions to the 
			   underlying data resource. This was known as the DataResourceImplementation in prior 
			   releases to release 3.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="driver" type="gdsf:DriverType"/>
		</xsd:sequence>
		<xsd:attribute name="implementation" type="xsd:string" use="required"/>
	</xsd:complexType>

	<!-- ========================= Driver information =========================== -->
	<xsd:complexType name="DriverType">
		<xsd:annotation>
			<xsd:documentation>
			   Allow a base driver type that can be extended to specify driver specific information.
			 </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="uri" type="xsd:string"/>
		</xsd:sequence>
		<xsd:attribute name="implementation" type="xsd:string" use="required"/>
	</xsd:complexType>
	
	<!-- Type for the root element -->
	<xsd:complexType name="DataResourceConfigType">
		<xsd:sequence>
			<xsd:element name="documentation" type="gdsf:DocumentationType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="metaData" type="gdsf:MetaDataType"/>
			<xsd:element name="roleMap" type="gdsf:RoleMapType" maxOccurs="unbounded"/>
			<xsd:element name="dataResource" type="gdsf:DataResourceType"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="optional"/>
	</xsd:complexType>

	<!--Root element -->
	<xsd:element name="dataResourceConfig" type="gdsf:DataResourceConfigType"/>

</xsd:schema>
