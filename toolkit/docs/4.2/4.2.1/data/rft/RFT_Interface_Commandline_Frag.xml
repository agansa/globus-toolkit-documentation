<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<reference id="rft-cmd"><title>RFT Commands</title>
<refentry id="rft-command">
  <indexterm type="rft-howto"><primary>submitting a third party GridFTP transfer</primary></indexterm>
  <indexterm type="rft"><primary>commands</primary><secondary><command>rft</command></secondary></indexterm>
<refmeta>
<refentrytitle>rft</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>rft</refname>
<refpurpose>Submit and monitor a 3rd party GridFTP transfer</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>rft</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>
<para>Submits a transfer to the Reliable
File Transfer Service and prints out the status of the transfer on the console.</para>
</refsect1><refsect1><title>Command syntax and options</title>
<screen>rft [-h &lt;host-ip of the container defaults to localhost&gt; 
-r &lt;port, defaults to 8080&gt;
-l &lt;lifetime for the resource default 60mins&gt; 
-m &lt;security mechanism. 'msg' for secure message or 'conv' for 
 secure conversation and 'trans' for transport. Defaults to 
   secure transport.&gt;
-p &lt;protection type, 'sig' signature and 'enc' encryption, 
 defaults to signature &gt;
-z &lt;authorization mechanism can be self or host. default self&gt; 
-file &lt;file to write EPR of created Reliable  File Transfer Resource]&gt; 
-f &lt;path to the file that contains list of transfers&gt;</screen>

<para>This is a sample transfer file that the command-line client will be
able to parse. It can also be found in 
<command>$GLOBUS_LOCATION/share/globus_wsrf_rft_client/ </command>
  along with other samples for directory transfers and deletes (lines starting
  with # are comments): </para>
<screen>This option when it is set to true means to perform transfer in binary 
form, if it is set to false transfer is done in ASCII. Default is binary.
true
#Block size in bytes that is transferred. Default is 16000 bytes.
16000
#TCP Buffer size in bytes
#Specifies the size (in bytes) of the TCP buffer to be used by the underlying 
ftp data channels. This is critical to good performance over the WAN.  Use the 
bandwidth-delay  product as your buffer size.

16000

#Notpt (No thirdPartyTransfer): turns third-party transfers off is this option 
is set to false (on if set to true). 
Site firewall and/or software configuration may prevent a connection  
between the two servers (a third party transfer).  If this is  the case, 
RFT will "relay" the data.  It will do a  GET from the source and a PUT to 
the destination. This obviously causes a performance penalty, but will allow 
you to  complete a transfer you otherwise could not do.

false

#Number of parallel streams: Specifies the number of parallel data connections 
that should be used. 

1

#Data Channel Authentication (DCAU): Turns off data channel authentication for 
FTP transfers  is set to false.(the default is true to authenticate the data 
channel). 
true
# Concurrency of the request: Number of files that you want to transfer at any 
given point. Default is set to one.
1
#Grid Subject name of the source gridftp server. This is used for Authorization
purposes. If the source gridftp server is running with host credentials you can specify "null" here. By default host authorization is performed
/DC=org/DC=doegrids/OU=People/CN=Ravi Madduri 134710
#Grid Subject name of the destination gridftp server. This is used for Authorization purposes. If the destination gridftp server is running with host 
credentials you can specify "null" here. By default Host authorization is done.
/DC=org/DC=doegrids/OU=People/CN=Ravi Madduri 134710
#Transfer all or none of the transfers: This option if set to true will make RFT
to clean up ( delete ) all the transfers that have been done already if one of the transfers fails. Used in GRAM when staging.

false
#Maximum number of retries: This is number of times RFT retries a transfer failed with a non-fatal error. 

10

#Source/Dest URL Pairs: gsiftp urls of source followed by destination. 
If directory is to be recursively transferred the source gsiftp url and 
destination gsiftp url should end with "/". Currently RFT supports Directory - 
Directory, File - Directory, File - File transfers. There can be more URL pairs
and all of them use the same options as above for performing the transfer. 

gsiftp://localhost:5678/tmp/rftTest.tmp
gsiftp://localhost:5678/tmp/rftTest_Done.tmp</screen>
</refsect1>

<refsect1><title>Limitations</title>
<para>This command line client is very simple and does not do any
  intelligent parsing of various command line options or of the options in
  the sample transfer file. It works fine if used in the way documented
  here. For more information on all these options please refer to the <olink targetdoc="gridftpDeveloper" targetptr="globus-url-copy">documentation of globus-url-copy</olink>. 
Also, please note that the maximum number of transfers the command-line client
can process before running out of memory is ~21K with the default JVM heap size, which was 64M in our tests. Please look at 
<ulink url="../rft_scalability_3_9_4.doc">Performance Reports</ulink> for more details.</para>
</refsect1>
</refentry>

<refentry id="globus-crft">
  <indexterm type="rft-howto"><primary>submitting transfers (from a list)</primary><secondary>C client</secondary></indexterm>
  <indexterm type="rft"><primary>commands</primary><secondary><command>globus-crft</command></secondary></indexterm>
<refmeta>
<refentrytitle>globus-crft</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>globus-crft</refname>
<refpurpose>Command-line client to delete files using RFT</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>globus-crft</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>
<para>This distribution contains a client to the RFT service written in C.
RFT is the reliable transfer server.  It allows clients to submit URL
transfer requests to a persistent service which will perform
the transfers on behalf of the client.  </para>
</refsect1>
<refsect1><title> Options</title>
  
<variablelist>
  <varlistentry>
    <term> <option>-a</option> | <option>--all-or-none</option> &lt;on | off&gt;
                             </term>
    <listitem><simpara>Enable all or none transfer: default off.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term> <option>-con</option> | <option>--concurrent</option> &lt;int&gt;  </term>
    <listitem><simpara> The number of simultaneous transfers.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-C</option> | <option>--cancel </option></term>
    <listitem><simpara>Cancel a transfer.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-c</option> | <option>--create</option></term>
    <listitem><simpara>Create a new RFT service.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-del</option> | <option>--delete</option></term>
    <listitem><simpara>Delete a URL.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-ds</option> | <option>--destination-subject</option> &lt;subject&gt;</term>
    <listitem><simpara>The expected domain name of the destination
                             GridFTP server.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-d</option> | <option>--destroy</option></term>
    <listitem><simpara>Destroy the server.  If used with <option>-monitor</option>, wait
                             until completion and then destroy.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-D</option> | <option>--done</option> </term>
    <listitem><simpara>
      Return the current status of the transfer in the
                             exit code:
    </simpara>
    <itemizedlist>
      <listitem><simpara>0=Done</simpara></listitem>
      <listitem><simpara>1=Active</simpara></listitem>
      <listitem><simpara>2=Pending</simpara></listitem>
      <listitem><simpara>3=Cancelled</simpara></listitem>
      <listitem><simpara>4=Failed</simpara></listitem>
    </itemizedlist>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-ef</option> | <option>--epr-file</option> &lt;path&gt;</term>
    <listitem><simpara>Path to the EPR file.  If used with <option>--create</option> the
                             EPR is written to this location.  In all other
                             cases the EPR is read from this location.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term>-ez | --easy</term>
    <listitem><simpara>Create, submit, and wait for the transfer to
                             complete.  The job is started with some standard
                             options.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term>-e | --factory &lt;contact&gt;</term>
    <listitem><simpara>The endpoint to contact when creating a server. 
                             Used with --create.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-f</option> | <option>--transfer-file &lt;path&gt;</option></term>
    <listitem><simpara>A path to a file that contains the source
                             destination URL pairs.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-gS</option> | <option>--getStatusSet &lt;int&gt; &lt;int&gt;</option></term>
    <listitem><simpara>Get the status of all the transfer requests in
                             the range.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-g</option> | <option>--getStatus</option> &lt;source url&gt;</term>
    <listitem><simpara>Get the status of the given source url.</simpara></listitem>
  </varlistentry>
  <varlistentry>
    <term><option>-h</option> | <option>--help</option></term>
    <listitem><simpara>Print usage information.</simpara></listitem>
  </varlistentry>
</variablelist>
 <screen>  FIXME - finish converting to variable list:          
 -ms | --message-security &lt;[sig] | [conv] | [trans]&gt;
                             Security mechanism.  'msg' for secure message,
                             'conv' for secure conversation, 'trans' for
                             transport.  The default is trans.
 -m | --monitor              Wait for the service to complete, and recieve
                             status updates.
 -os | --getOverallStatus    Get the overall status.
 -p | --protection &lt;[sig] | [enc]&gt;
                             Protection type.  'sig' for signature, 'enc' for
                             encryption.  The default is 'sig'.
 -P | --parallel &lt;int&gt;       The number of parallel sockets to use with each
                             transfer.
 -q | --quiet                Write no output.
 -rs | --getRequestStatus    Get the request status.
 -r | --retries              Number of retries
 -S | --subject &lt;subject&gt;    The expected domain name of both the source and
                             destination GridFTP servers.
 -ss | --source-subject &lt;subject&gt;
                             The expected domain name of the source GridFTP
                             server.
 -s | --submit               Start the RFT service
 -tb | --tcp-bs &lt;int&gt;        The TCP buffer size to use with each transfer.
 -ttl | --termination-time &lt;int&gt;
                             Set the lifetime of the service.
 -v | --version              Print version information.
 -vb | --verbose             Display much more output.
 -xi | --xml-input &lt;path&gt;    Read the request description from the given xml
                             description.
 -xo | --xml-output &lt;path&gt;   Write the request description to the given file
                             location in xml format.
 -z | --authz &lt;[self] | [host] | [id &lt;subject&gt;]&gt;
                             Authorization.  'self', 'host', or 'id &lt;DN&gt;'.

</screen>
  
</refsect1>
  <refsect1><title>Limitations</title>
<para>No limitations exist with this command line tool. </para>
</refsect1>
</refentry>
  
  
  
  
<refentry id="rft-delete">
  <indexterm type="rft-howto"><primary>deleting files (from a list)</primary></indexterm>
  <indexterm type="rft"><primary>commands</primary><secondary><command>rft-delete</command></secondary></indexterm>
<refmeta>
<refentrytitle>rft-delete</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>rft-delete</refname>
<refpurpose>Command-line client to delete files using RFT</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>rft-delete</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>
<para>This command-line tool is used to submit a list of files to be deleted.</para>
</refsect1>
<refsect1><title> Command and options</title>
<screen>rft-delete [-h &lt;host-ip of the container default localhost&gt; 
-r &lt;port, defaults to 8080&gt;
-l &lt;lifetime for the resource default 60mins&gt; 
-m &lt;security mechanism. 'msg' for secure message or 'conv' for 
 secure conversation and 'trans' for transport. Defaults to 
   secure transport.&gt;
-p &lt;protection type, 'sig' signature and 'enc' encryption, 
 defaults to signature &gt;
-z &lt;authorization mechanism can be self or host. default self&gt; 
-file &lt;file to write EPR of created Reliable  File Transfer Resource]&gt; 
-f &lt;path to the file that contains list of transfers&gt;</screen>

<para>  This is a sample file that the command line client will be able to
  parse, and it can also be found in
  <command>$GLOBUS_LOCATION/share/globus_wsrf_rft_client/</command> along with other
  samples for directory transfers and deletes (lines starting with # are comments): </para>

<screen># Subject name (defaults to host subject)
  /DC=org/DC=doegrids/OU=People/CN=Ravi Madduri 134710
  gsiftp://localhost:5678/tmp/rftTest_Done.tmp
  gsiftp://localhost:5678/tmp/rftTest_Done1.tmp</screen>
  
</refsect1><refsect1><title>Limitations</title>
<para>No limitations exist with this command line tool. </para>
</refsect1>
</refentry>
</reference>