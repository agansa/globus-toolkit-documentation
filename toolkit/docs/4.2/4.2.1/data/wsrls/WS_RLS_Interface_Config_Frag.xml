<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<chapter id="wsrls-configuring"><title>Configuring WS RLS</title>
<section><title>Configuration overview</title>
    <indexterm type="wsrls-howto"><primary>configuring WS RLS</primary></indexterm>
    <para>The WS RLS requires certain WSDD and JNDI settings to be properly configured. The installed JNDI configuration file may be found at <computeroutput>$GLOBUS_LOCATION/etc/globus_wsrf_replicalocation_resource/jndi-config.xml</computeroutput>. To view the default JNDI file (current snapshot) from the Globus CVS repository <ulink url="http://viewcvs.globus.org/viewcvs.cgi/ws-replica/location/resource/java/source/deploy-jndi-config.xml">click here</ulink>. The installed WSDD configuration file may be found at <computeroutput>$GLOBUS_LOCATION/etc/globus_wsrf_replicalocation_service/server-config.wsdd</computeroutput>. To view the default WSDD file (current snapshot) from the Globus CVS repository <ulink url="http://viewcvs.globus.org/viewcvs.cgi/ws-replica/location/service/java/source/deploy-server.wsdd">click here</ulink>. In most cases, you will not need to alter either of these files.</para>
    <para>This information is in addition to the basic configuration instructions in the <olink targetdoc="gtadmin"/>.</para>
</section>

<section><title>WS RLS Web Service Deployment Descriptor (WSDD) Configuration</title>
    
    <para>The WS RLS's WSDD determines which services will be activated by the GT Java WS Core container. By default, the WS RLS defines two services.</para>
    <itemizedlist>
        <listitem>
            <indexterm type="wsrls-howto"><primary>configuring ReplicaLocationCatalogService</primary></indexterm>
            <simpara>ReplicaLocationCatalogService. The <computeroutput>ReplicaLocationCatalogService</computeroutput> service provides the WS interface to the RLS Local Replica Catalog capabilities. If you intend to activate this service, you need not alter the WSDD. If you do not wish to activate this service, simply remove it from the WSDD and restart the container.</simpara>
            <screen>
...
    &lt;service name=&quot;ReplicaLocationCatalogService&quot; provider=&quot;Handler&quot;.
        use=&quot;literal&quot; style=&quot;document&quot;&gt;
...
    &lt;/service&gt;
...
            </screen>
        </listitem>
        <listitem>
            <indexterm type="wsrls-howto"><primary>configuring ReplicaLocationIndexService</primary></indexterm>
            <simpara>ReplicaLocationIndexService. The <computeroutput>ReplicaLocationIndexService</computeroutput> service provides the WS interface to the RLS Replica Location Index capabilities. If you intend to activate this service, you need not alter the WSDD. If you do not wish to activate this service, simply remove it from the WSDD and restart the container.</simpara>
            <screen>
...
    &lt;service name=&quot;ReplicaLocationIndexService&quot; provider=&quot;Handler&quot;.
        use=&quot;literal&quot; style=&quot;document&quot;&gt;
...
    &lt;/service&gt;
...
            </screen>
        </listitem>
    </itemizedlist>
</section>

<section><title>WS RLS Java Naming &amp; Directory Interface (JNDI) Configuration</title>
    <para>The WS RLS's JNDI configuration determines the resource class to be used for each service defined by the WS RLS WSDD. It also determines other critical settings used by these resources. In this file, you will find settings for the two default services defined in the WSDD.</para>
    <para>Each service has a JNDI Resource of name <computeroutput>RLSConnectionSource</computeroutput>. This JNDI Resource is used by the WS RLS service to open a connection to the backend RLS service. In many cases, you may find that the default settings require no modification for your setup. The <computeroutput>url</computeroutput> parameter sets the endpoint for the backend RLS. The <computeroutput>certfile</computeroutput> and <computeroutput>keyfile</computeroutput> parameters set the certificate and key files to be used by the WS RLS to communicate securely with the backend RLS.</para>
    <para>You will notice that the default settings use the container's suggested certificate and key file paths. If you have chosen different paths in which to keep these files, please adjust the settings accordingly. At present, the WS RLS uses a single identity (defined by the certificate and key) to authenticate itself with the RLS in order to perform any user requested operations. When the WS RLS interface is finalized, it will most likely use a different approach to authentication between WS RLS and the back end RLS. At this time, we expect that the interface will change such that the caller's credentials will be used to make calls between the WS RLS and the back end RLS on behalf of the originating caller.</para>
    <screen>
...
    &lt;resource
        name=&quot;RLSConnectionSource&quot;
        type=&quot;org.globus.replica.rls.connection.impl.PooledRLSConnectionSource&quot;&gt;
    &lt;resourceParams&gt;
      &lt;parameter&gt;
        &lt;name&gt;factory&lt;/name&gt;
        &lt;value&gt;org.globus.wsrf.jndi.BeanFactory&lt;/value&gt;
      &lt;/parameter&gt;
      &lt;parameter&gt;
        &lt;name&gt;url&lt;/name&gt;
        &lt;value&gt;rls://localhost&lt;/value&gt;
      &lt;/parameter&gt;
      &lt;parameter&gt;
        &lt;name&gt;certfile&lt;/name&gt;
        &lt;value&gt;/etc/grid-security/containercert.pem&lt;/value&gt;
      &lt;/parameter&gt;
      &lt;parameter&gt;
        &lt;name&gt;keyfile&lt;/name&gt;
        &lt;value&gt;/etc/grid-security/containerkey.pem&lt;/value&gt;
      &lt;/parameter&gt;
    &lt;/resourceParams&gt;
    &lt;/resource&gt;
...
    </screen>
</section>

</chapter>