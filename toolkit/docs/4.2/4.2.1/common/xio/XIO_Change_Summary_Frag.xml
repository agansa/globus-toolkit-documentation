<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<section id="xio-changessummary">
  <title>Summary of Changes in XIO</title>

  <para>The following changes have occurred for XIO since the last stable
  release, <replaceable role="entity">previousversion</replaceable>:</para>

  <para>

The only significant change to Globus XIO in this release is the
          addition of "string attributes".  The previous method of handling
          attributes still works in an entirely backward compatible way,
          but the string attributes adds a much needed convenience. Drivers
          can now provide a list of key=value pairs.  A user can then
          specify these options at the command line and at runtime.  This
          makes run time configuration much more flexible.
    </para>
    <para>
        A driver can choose to expose parameters in a string form.
        This feature makes dynamically setting driver-specific
        options much easier. A user can then load the driver by name and
        set specific options by name all at runtime with no object module
        references. For example, a TCP driver can be loaded with the string
        <emphasis>tcp</emphasis>  and the options can be set with the string
        <code>port=50668;keepalive=yes;nodelay=N</code>.
    </para>
    <para>
        This would set the port to 50668, keepalive to true and nodelay to
        false.  The particular string definition is defined by the TCP
        driver.  This is done by creating a <computeroutput>globus_i_xio_attr_parse_table_t</computeroutput>
        array within the driver's source code.
See the TCP driver source code for an example.
        Each row of the array is 1 option.  There are 3 sub-members of
        each row entry: key, cmd, and parse function.
        The key is a string that defines what option is to be set.
        In the above example, string  <emphasis>port</emphasis> would be a
        key.   <emphasis>cmd</emphasis> tells the driver what cntl is
        associated with the key.  In other words, once the string is
        parsed out it converts the key into a driver-specific control enum.
        XIO then uses that enum as it would if a driver-specific option
        was set in the source code.  For more information on controls, see
        <computeroutput>globus_xio_attr_cntl</computeroutput>.
    </para>
</section>
