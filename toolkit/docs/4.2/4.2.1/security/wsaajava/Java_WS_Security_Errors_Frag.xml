<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<section id="wsaajava-errorcodes" xreflabel="Java WS Security Error Codes">
  <title>Error Messages For Java WS Security</title>

  <table frame="all" id="wsaajava-errors-table">
    <title>Java WS Security Errors</title>

    <tgroup align="left" cols="3" colsep="1" rowsep="1">
      <colspec colname="c1" />

      <colspec colname="c2" />

      <colspec colname="c3" />

      <thead>
        <row>
          <entry>Error Code</entry>

          <entry>Definition</entry>

          <entry>Possible Solutions</entry>
        </row>
      </thead>

      <tbody>
        <row id="wsaajava-errorsc-248">
          <entry><code>[JWSSEC-248] Secure container requires valid
          credentials</code></entry>

          <entry>This error occurs when <olink targetdoc="javawscorePI"
          targetptr="globus-start-container">globus-start-container</olink> is
          run without any valid credentials. Either a proxy certificate or
          service/host certificate needs to be configured for the container to
          start up.</entry>

          <entry><orderedlist>
              <listitem>
                <para>If you are not looking to start up a container that uses
                GSI Secure Transport, which is used by the container by
                default, use <code>globus-start-container -nosec</code>. You
                will be able to use insecure clients and services. However,
                this also implies that if you have not configured individual
                services with credentials, you will not be able to securely
                access the service.</para>
              </listitem>

              <listitem>
                <para>If you are running a personal container, generate a
                proxy certificate with <olink targetdoc="prewsaaPI"
                targetptr="grid-proxy-init">grid-proxy-init</olink>. If the
                proxy certificate is not in the default location, configure
                the container security descriptor as described in <olink
                targetdoc="wsaajavaDescriptor"
                targetptr="wsaajava-secdesc-configDesc-container">Configuring
                Container Security Descriptor</olink>.</para>
              </listitem>

              <listitem>
                <para>If you want to use host certificates, configure the
                container security descriptor as described <olink
                targetdoc="wsaajavaDescriptor"
                targetptr="wsaajava-secdesc-configCred">Configuring
                Credentials</olink>. </para>
              </listitem>
            </orderedlist></entry>
        </row>

        <row id="wsaajava-errors-250">
          <entry><code>Failed to start container: Container failed to
          initialize [Caused by: [JWSSEC-250] Failed to load certificate/key
          file]</code></entry>

          <entry>This error occurs if the file path to the container
          certificate and key configured are invalid.</entry>

          <entry><orderedlist>
              <listitem>
                <para>The path to the container certificate and key are
                configured in <filename>$GLOBUS_LOCATION/etc/globus_wsrf_core/
                global_security_descriptor.xml</filename>. This file is loaded
                as described [here - fixme link]. Ensure that the path is
                correct.</para>
              </listitem>
            </orderedlist></entry>
        </row>

        <row id="wsaajava-errors-249">
          <entry><code>Failed to start container: Container failed to
          initialize [Caused by: [JWSSEC-249] Failed to load proxy
          file]</code></entry>

          <entry>This error occurs if container proxy file configured is
          invalid.</entry>

          <entry><orderedlist>
              <listitem>
                <para>The path to the container proxy certificates are
                configured in <filename>$GLOBUS_LOCATION/etc/globus_wsrf_core/
                global_security_descriptor.xml</filename>. This file is loaded
                as described [here - fixme link]. Ensure that the path is
                correct.</para>
              </listitem>
            </orderedlist></entry>
        </row>

        <row id="wsaajava-errors-245">
          <entry><code>Failed to start container: Container failed to
          initialize [Caused by: [JWSSEC-245] Error parsing file:
          "etc/globus_wsrf_core/ global_security_descriptor.xml" [Caused by:
          ...]</code></entry>

          <entry>This error occurs if the container security descriptor
          configured is invalid.</entry>

          <entry><orderedlist>
              <listitem>
                <para>The container security descriptor should conform to the
                <ulink
                url="http://www.globus.org/toolkit/docs/4.2.0/security/container_security_descriptor.xsd">Container
                Security Descriptor Schema.</ulink></para>
              </listitem>

              <listitem>
                <para>Refer to the "Caused by: " section for details on the
                specific element that is not correct.</para>
              </listitem>
            </orderedlist></entry>
        </row>

        <row id="wsaajava-errors-JGLOBUS-77">
          <entry><code>[JGLOBUS-77] Unknown CA</code></entry>

          <entry>This error occurs if the CA certificate for the credentials
          being used is not installed correctly.</entry>

          <entry><orderedlist>
              <listitem>
                <para>If this issue occurs on the server side, the container
                is not configured with CA certificates. The container looks
                for trusted certificates in the default location as described
                <ulink
                url="http://www.globus.org/cog/distribution/1.2/FAQ.TXT">Java
                CoG Toolkit FAQ</ulink></para>
              </listitem>

              <listitem>
                <para>On the server side, the trusted certificates can be
                configured as described in <olink targetdoc="wsaajavaDescriptor"
                targetptr="wsaajava-secdesc-container-trusted">Trusted
                Certificates</olink></para>
              </listitem>

              <listitem>
                <para>On the client side, trusted certificates can be
                configured as described in <olink targetdoc="wsaajavaDescriptor"
                targetptr="wsaajava-secdesc-client-trustedCerts">Configuring
                Trusted Credentials</olink></para>
              </listitem>
            </orderedlist></entry>
        </row>
      </tbody>
    </tgroup>
  </table>
</section>