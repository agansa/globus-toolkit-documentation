<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="wsaajava-security-considerations"><title>Security considerations for Java WS A&amp;A</title>
  <section id="wsaajava-security-considerations-authorization">
  <title>Security considerations for authorization</title>

  <section id="wsaajava-security-client">
    <title>Client side authorization</title>
    <para>Client authorization of the server is done after the completion of the operation when GSI
      Secure Message authentication is used. If you require client authorization to be done prior,
      use GSI Secure Conversation or GSI <glossterm baseform="transport-level security">Transport
        security</glossterm>.</para>
  </section>

  <section id="wsaajava-security-host">
    <title>Host authorization</title>
    <para>During host authorization, the toolkit treats DNs &quot;hostname-*.edu&quot; as
      equivalent to &quot;hostname.edu&quot;. This means that if a service was setup to do
      host authorization and hence accept the certificate &quot;hostname.edu&quot;, it would
      also accept certificates with DNs &quot;hostname-*.edu&quot;. </para>

    <para> The feature is in place to allow a multi-homed host folowing a
      &quot;hostname-interface&quot; naming convention, to have a single host certificate.
      For example, host &quot;grid.test.edu&quot; would also accept likes of
      &quot;grid-1.test.edu&quot; or &quot;grid-foo.test.edu&quot;. </para>

    <note>
      <simpara>The wildcard character &quot;*&quot; matches only name of the hostand not
        domain components. This means that &quot;hostname.edu&quot; will not match
        &quot;hostname-foo.sub.edu&quot;, but will match
      &quot;host-foo.edu&quot;.</simpara>
    </note>

    <note>
      <simpara>If a host was set up to accept &quot;hostname-1.edu&quot;, it will not accept
        any of &quot;hostname-*.edu&quot;.</simpara>
    </note>



    <para>A <ulink url="http://bugzilla.globus.org/bugzilla/show_bug.cgi?id=2969">bug</ulink> has
      been opened to see if this feature needs to be modfiied. </para>



  </section>
</section>
<section id="wsaajava-security-considerations-message">
  <title>Security considerations for Message/Transport-level Security</title>
  <section id="wsaajava-security-considerations-permissions">
    <title>File permissions</title>
    <para>The Java security code currently does not enforce secure permissions and, implicitly, file
      ownership requirements on any of the security related files, e.g. configuration and credential
      files. It is thus important that administrators ensure that the relevant files have correct
      permissions and ownership. Permissions should generally be as restrictive as possible, i.e.
        <glossterm baseform="private key">private keys</glossterm> should be readable only by the
      file owner and other files should be writable by owner only, and the files should generally be
      owned by the globus user (the requirements that the C code enforces are documented in <olink
        targetdoc="gsicPI" targetptr="gsic-configuring"/>).</para>

    <para> Also refer to <olink targetdoc="wsaajavaRN" targetptr="wsaajava-rn-knownproblems"/> for
      details on any other open issues.</para>

  </section>
</section>
</section>