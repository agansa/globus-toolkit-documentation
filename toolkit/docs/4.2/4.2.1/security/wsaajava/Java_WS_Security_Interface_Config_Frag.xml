<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<chapter id="wsaajava-configuring">
  <title>Configuring</title>
 <abstract><para>Java WS A&amp;A is configured using security descriptors. The following describes configuration settings specific for authorization and authentication. 
  You can read the entire Java WS A&amp;A Security Descriptor documentation <olink targetdoc="wsaajavaDescriptor">here</olink>.
  <itemizedlist>
   <listitem><simpara><olink targetptr="wsaajava-configuring-authz">Configuring authorization</olink></simpara></listitem>
   <listitem><simpara><olink targetptr="wsaajava-configuring-message">Configuring authentication/message protection</olink></simpara></listitem>
  </itemizedlist>
  
 </para></abstract>
 <section id="wsaajava-configuring-authz"><title>Configuring authorization</title>
 <section>
  <title>Configuration overview</title>
  <para> Security descriptors are mechanisms used to configure authorization mechanism and policy.
   The authorization on the server side can be configured at the container, service or resource
   level. </para>
  <para> On the client side, authorization can be configured using security descriptors or as a
   property on the stub. This configuration can be done on a per invocation granularity</para>
 </section>
 <section>
  <title>Server side authorization</title>
  <para> The server side authorization can be configured at the container, service or resource level
   using <itemizedlist>
    <listitem>
     <para> Security descriptors using files. Refer to <olink targetdoc="wsaajavaDescriptor"
       targetptr="wsaajava-secdesc-serverSide-configDesc-files"/>
     </para>
    </listitem>
    <listitem>
     <para> Security descriptors programmatically. Refer to <olink targetdoc="wsaajavaDescriptor"
       targetptr="wsaajava-secdesc-serverSide-configDesc-program"/>
     </para>
    </listitem>
   </itemizedlist>
  </para>
  <para> To write and configure a server-side custom authorization mechanism refer to <olink
    targetdoc="wsaajavaDeveloper" targetptr="wsaajava-domain-serverAuthz-custom"/>.</para>
 </section>
 <section id="wsaajava-config-client">
  <title>Client side authorization</title>
  <para> The client side authorization can be configured for each invocation. <itemizedlist>
    <listitem>
     <para> Security descriptors using files. Refer to <olink targetdoc="wsaajavaDescriptor"
       targetptr="wsaajava-secdesc-clientSide-configDesc-files"/>, specifically <olink
       targetdoc="wsaajavaDescriptor" targetptr="wsaajava-secdesc-client-authz"/>.</para>
    </listitem>
    <listitem>
     <para> Security descriptors programmatically. Refer to <olink targetdoc="wsaajavaDescriptor"
       targetptr="wsaajava-secdesc-clientSide-configDesc-program"/>
     </para>
    </listitem>
    <listitem>
     <para> Properties on the Stub. Refer to <olink targetdoc="wsaajavaDeveloper"
       targetptr="wsaajava-domain-clientAuthz-stub-config"/>
     </para>
    </listitem>
   </itemizedlist>
  </para>
  <para> To write and configure custom authorization mechanism refer to <olink
    targetdoc="wsaajavaPI" targetptr="wsaajava-domain-clientAuthz-custom"/>.</para>
  <para> If no authorization mechanism has been specified, HostOrSelf authorization is used. In this
   scheme host authorization is tried first, if it fails, self authorization is attempted</para>
 </section>
 </section>
 <section id="wsaajava-configuring-message">
  <title>Configuring authentication/message protection</title>
   <section>
    <title>Configuration overview</title>

    <para>Configuration of service-side security settings can be achieved by
    using container or service security descriptor. Some of the security
    configuration, like the credential to use and trusted certificates
    location, can also be configured using CoG properties or rely on default
    location. <emphasis role="strong">The preferred way is to provide these
    settings in a security descriptor.</emphasis></para>

    <para>The next section provides details on the relevant properties. An
    overview of the syntax of security descriptors can be found in <olink
    targetdoc="wsaajavaDescriptor"></olink>. Available CoG
    security properties can be found in <olink targetdoc="javacogAdmin"
    targetptr="javacog-admin-configuring"></olink></para>
  </section>

  <section>
    <title>Syntax of the interface</title>

    <para>The following properties are relevant to authentication and
    message/transport security:<table>
        <title>Configuring server side authentication and message/transport
        security</title>

        <tgroup cols="4">
          <colspec colname="c1" />

          <colspec colname="c2" />

          <colspec colname="c3" />

          <colspec colname="c4" />

          <tbody>
            <row>
              <entry><emphasis role="strong">Number</emphasis></entry>

              <entry><emphasis role="strong">Task</emphasis></entry>

              <entry><emphasis role="strong"> Descriptor Configuration
              </emphasis></entry>

              <entry><emphasis role="strong"> Alternate Configuration
              </emphasis></entry>
            </row>

            <row>
              <entry>1</entry>

              <entry>Credentials</entry>

              <entry><olink targetdoc="wsaajavaDescriptor" targetptr="wsaajava-secdesc-configCred">Container
              or service descriptor configuration</olink></entry>

              <entry><para> <itemizedlist>
                  <listitem>
                    <simpara>X509_USER_CERT or <olink targetdoc="javacogAdmin" targetptr="javacog-admin-configuring-user-certificate">CoG
                    Configuration: User certificate configuration</olink></simpara>
                  </listitem>

                  <listitem>
                    <simpara>X509_USER_KEY or <olink targetdoc="javacogAdmin" targetptr="javacog-admin-configuring-user-key">CoG
                    Configuration: User key configuration</olink></simpara>
                  </listitem>

                  <listitem>
                    <simpara>X509_USER_PROXY or <olink targetdoc="javacogAdmin" targetptr="javacog-admin-configuring-proxy">CoG
                    Configuration: User proxy configuration</olink></simpara>
                  </listitem>
              </itemizedlist> </para> 
               <para> If no explicit configuration is found, the default proxy is read from <filename>/tmp/x509_up_&lt;uid&gt;</filename>. </para></entry>
            </row>

            <row>
              <entry>2</entry>

              <entry>Trusted Certificates</entry>

              <entry><olink targetdoc="wsaajavaDescriptor" targetptr="wsaajava-secdesc-container-trusted">Container
              security descriptor configuration</olink></entry>

              <entry><olink targetdoc="javacogAdmin" targetptr="javacog-admin-configuring-trusted-certs">CoG
              Configuration</olink></entry>
            </row>

            <row>
              <entry>3</entry>

              <entry>Limited proxy policy configuration</entry>

              <entry><olink targetdoc="wsaajavaDescriptor" targetptr="wsaajava-secdesc-rejectLimProxy">Container
              or service descriptor configuration</olink></entry>

              <entry>None.</entry>
            </row>

            <row>
              <entry>4</entry>

              <entry>Replay Attack Window</entry>

              <entry><olink targetdoc="wsaajavaDescriptor" targetptr="wsaajava-secdesc-replayAttack">Container
              or service descriptor configuration</olink></entry>

              <entry>None.</entry>
            </row>

            <row>
              <entry>5</entry>

              <entry>Replay Attack Filter</entry>

              <entry><olink targetdoc="wsaajavaDescriptor" targetptr="wsaajava-secdesc-replayAttack">Container
              or service descriptor configuration</olink></entry>

              <entry>None.</entry>
            </row>

            <row>
              <entry>6</entry>

              <entry>Replay timer interval</entry>

              <entry><olink targetdoc="wsaajavaDescriptor" targetptr="wsaajava-secdesc-container-replay">Container
              descriptor configuration</olink></entry>

              <entry>None.</entry>
            </row>

            <row>
              <entry>7</entry>

              <entry>Context timer interval</entry>

              <entry><olink targetdoc="wsaajavaDescriptor" targetptr="wsaajava-secdesc-container-context">Container
              descriptor configuration</olink></entry>

              <entry>None.</entry>
            </row>
          </tbody>
        </tgroup>
      </table></para>
  </section>
 </section>
 
</chapter>
