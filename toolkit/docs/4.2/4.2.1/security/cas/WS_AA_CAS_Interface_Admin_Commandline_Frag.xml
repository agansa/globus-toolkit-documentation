<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[

<!ENTITY % xinclude SYSTEM "../../xinclude.mod" >
%xinclude;

]>

  <reference id="cas-developer-commandline-admin" xreflabel="CAS Admin Command Reference">
        <title>CAS Admin Commands</title>
    <!-- FIXME - does this substitute for WS_AA_CAS_Using_Commandlines.xml?  -->
<refentry id="cas-proxy-init">

  <refmeta>

    <refentrytitle>cas-proxy-init</refentrytitle>

    <manvolnum>8</manvolnum>

  </refmeta>

  <refnamediv>

    <refname>cas-proxy-init</refname>

    <refpurpose>Generate a CAS proxy</refpurpose>

  </refnamediv>

  <refsynopsisdiv>

    <cmdsynopsis>

      <command>cas-proxy-init</command> <arg><option><olink targetptr="cas-proxy-inity-common-options">common options</olink></option></arg> <group><arg choice='plain'>-p <replaceable>proxyfile</replaceable></arg><arg choice='plain'>-t <replaceable>tag</replaceable></arg></group>

    </cmdsynopsis>

  </refsynopsisdiv>

  <refsect1 id="cas-proxy-init-description"><title>Tool description</title>

    <para>The <command>cas-proxy-init</command> command contacts a CAS server, obtains an
    assertion for the user, and embeds it in a credential. This
    credential can be used to access CAS-enabled services.</para>

  </refsect1>
  
  <refsect1 id="cas-proxy-init-options"><title>Options</title>
  
  <refsect2><title>Command-specific options</title>
    <!-- need to clarify the overlap between the following command options and the common cas options -->
    <variablelist>

      <varlistentry><term>-b <replaceable>policyFileName</replaceable></term >
        <listitem> <para>Generate a CAS credential that includes only
        those permissions specified in file
        <replaceable>policyFileName</replaceable> (the default is to
        generate a credential with all the user&apos;s
        permissions). Details about the template of the file is
        provided <olink
        targetptr="cas-proxy-init-specific-permissions">here</olink>.</para>
        </listitem>
      </varlistentry>

      
      <varlistentry><term>-u <replaceable>tag</replaceable></term >
        <listitem> <para>Choose a filename in which to store the CAS credential based on the value <replaceable>tag</replaceable>. Cannot be used with the <option>-p</option> option.</para></listitem>
      </varlistentry>
      

      <varlistentry><term>-w <replaceable>generatedCredFile</replaceable> </term >
        <listitem> <para>Specify the file in which to store the CAS credential. Cannot be used with the <option>-t</option> option.</para>
      </varlistentry>
    </variablelist>

  </refsect2>
  
  <refsect2 id="cas-proxy-inity-common-options"><title>Common Options</title>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="WS_AA_CAS_Interface_Commandline_Common_Options_Frag.xml"/>
  </refsect2>
    
  </refsect1>
  
  <refsect1 id="cas-proxy-inity-usage"><title>Usage</title>
<para>The following gets the assertion from the CAS server, generates a proxy with the assertion and writes it out to
"casProxy".</para>
    <screen>cas-proxy-init -p casProxy</screen>

  </refsect1>
  
  
  <refsect1 id="cas-proxy-init-specific-permissions"><title>Requesting specific permissions from the CAS server</title>
    <para>It is possible to request specific permissions from the CAS server
      
      using the <option>-f</option> option. This option causes <command>cas-proxy-init</command>
      
      to read a set of requested rights from a file.</para>
    
    <para>This file should contain one or more resource identifiers:
      
      <screen>Resource: <replaceable>ResourceNamespace</replaceable>|<replaceable>ResourceName </replaceable></screen></para>
    
    <para>For each resource, there should be one or more action identifiers:
      
      <screen><replaceable>serviceType action</replaceable></screen></para>
    
    <para>For example, if the client needed assertions for
      
      &quot;file/read&quot; service/action (permission) on two resources (&quot;ftp://sample1.org&quot; and &quot;ftp://sample3.org&quot;, both
      
      in &quot;FTPNamespace&quot;) but &quot;directory/read&quot; and
      
      &quot;directory/write&quot; permissions on the former resource only,
      
      the policy file should have the following entries:</para>
    
    <screen>Resource: FTPNamespace|ftp://sample1.org
      
      file read
      
      directory read
      
      directory write
      
      Resource: FTPNamespace|ftp://sample3.org
      
      file read</screen>
    
    <para>To indicate any resource, the following wildcard notation should
      
      be used:</para>
    
    <screen>uri:samlResourceWildcard</screen>
    
    <para>To indicate any action, the following wildcard notation for
      
      <replaceable>serviceType</replaceable> and <replaceable>action</replaceable> should be used. Note that this should be the
      
      first (and clearly the only action) in the list of actions
      
      specified. All other actions in the list are ignored and if it is not
      
      the first, it is not treated as a wildcard.</para>
    
    <screen>uri:samlActionNSWildcard uri:samlActionWildcard</screen>
    
    <para>For example, if the client needs assertions for all resources and
      
      all actions, the policy file should look like:
      
      <screen>Resource: uri:samlResourceWildcard
        
        uri:samlActionNSWildcard uri:samlActionWildcard</screen></para>
    
    <para>If the client needs assertions for all actions on resource
      
      &quot;FTPNamespace|ftp://sample1.org&quot;, the policy file should be
      
      as follows:
      
      <screen>Resource: FTPNamespace|ftp://sample1.org
        
        uri:samlActionNSWildcard uri:samlActionWildcard</screen>
      
    </para>
  </refsect1>
  

</refentry>

        <refentry id="cas-wrap">
                <refmeta>
                        <refentrytitle>cas-wrap</refentrytitle>
                        <manvolnum>8</manvolnum>
                </refmeta>
                <refnamediv>
                        <refname>cas-wrap</refname>
                        <refpurpose>Runs program with CAS credentials</refpurpose>
                </refnamediv>
                <refsynopsisdiv><cmdsynopsis>
                  <command>cas-wrap</command> <arg><option><olink targetptr="cas-proxy-inity-common-options">common options</olink></option></arg> <group><arg choice='plain'>-p <replaceable>proxyfile</replaceable></arg><arg choice='plain'>-t <replaceable>tag</replaceable></arg></group>
                        </cmdsynopsis>
                </refsynopsisdiv>
          
          <refsect1 id="cas-wrap-description"><title>Tool description</title>
          
          <para>The <command>cas-wrap</command> command runs a grid-enabled program, causing it
          to use previously-generated CAS credentials.
          </para>
            
            <para>This command invokes the given command with the given argument
              using the specified previously-generated CAS credential. For
              example: </para>
            
            <screen><prompt>casAdmin$</prompt> <command>cas-wrap -t my-community gsincftp myhost.edu</command></screen>
            
            <para>will look for a credential generated by a previous execution of:</para>
            
            <screen><prompt>casAdmin$</prompt> <command>cas-proxy-init -t my-community</command></screen>
            
            <para>and then set the environment to use that credential while
              running the command:</para>
            
            <screen><prompt>casAdmin$</prompt> <command>gsincftp myhost.edu</command></screen>
            
            <para>The second form should be used if <command>cas-proxy-init </command> was
              run with the <option>-p</option> option. For example:</para>
            
            <screen><prompt>casAdmin$</prompt> <command>cas-wrap -p /path/to/my/cas/credential gsincftp myhost.edu</command></screen>
            
            <para>will look for a credential generated by a previous
              execution of:</para>
            
            <screen><prompt>casAdmin$</prompt> <command>cas-proxy-init -p /path/to/my/cas/credential</command> </screen>
            
            <para>and then set the environment to use that credential while
              running the command:</para>
            
            <screen><prompt>casAdmin$</prompt> <command>gsincftp myhost.edu</command></screen>
          </refsect1>

          <refsect1 id="cas-wrap-options"><title>Options</title>
            
            <refsect2 id="cas-wrap-command-specific-options"><title>Command-specific Options</title>
              
            <variablelist>
            <varlistentry><term>-p <replaceable>proxyfile</replaceable> </term >
              <listitem> <para>Specify the file in which to store the CAS credential. Cannot be used with the <option>-t</option> option.</para></listitem>
            </varlistentry>
            
            <varlistentry><term>-t <replaceable>tag</replaceable></term >
              <listitem> <para>Choose a filename in which to store the CAS credential based on the value <replaceable>tag</replaceable>. Cannot be used with the <option>-p</option> option.</para></listitem>
            </varlistentry>
            </variablelist>
            </refsect2>

          
          <refsect2 id="cas-wrap-common-options"><title>Common Options</title>
            <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
              href="WS_AA_CAS_Interface_Commandline_Common_Options_Frag.xml"/>
          </refsect2>
            
          </refsect1>
          
          <refsect1 id="cas-wrap-usage"><title>Usage</title>
            
          <para>Example of using cas-wrap to transfer a file.</para>
            
            <screen>cas-wrap -p casProxy globus-url-copy gsiftp://somehost.edu/some_file_path \
file:///some_file_path</screen>
            

          </refsect1>
          
        </refentry>

        <refentry id="cas-enroll">
                <refmeta>
                        <refentrytitle>cas-enroll</refentrytitle>
                        <manvolnum>8</manvolnum>
                </refmeta>
                <refnamediv>
                        <refname>cas-enroll</refname>
                  <refpurpose>Enroll a CAS Object</refpurpose>
                </refnamediv>
                <refsynopsisdiv>
                  <cmdsynopsis>
                    <command>cas-enroll</command> <arg><option><olink targetptr="cas-enroll-common-options">common options</olink></option></arg> <arg choice="plain">trustAnchor</arg> <arg choice="plain"><replaceable>userGpName</replaceable></arg> <arg choice="plain"><replaceable>nickname</replaceable></arg>  <arg choice="plain"><replaceable>authMethod</replaceable></arg> <arg choice="plain"><replaceable>authData</replaceable></arg> 
                    <command>cas-enroll</command> <arg><option><olink targetptr="cas-enroll-common-options">common options</olink></option></arg> <arg choice="plain">namespace</arg> <arg choice="plain"><replaceable>userGpName</replaceable></arg> <arg choice="plain"><replaceable>nickname</replaceable></arg>  <arg choice="plain"><replaceable>basename</replaceable></arg> <arg choice="plain"><replaceable>comparisonAlg</replaceable></arg>
                    <command>cas-enroll</command> <arg><option><olink targetptr="cas-enroll-common-options">common options</olink></option></arg> <arg choice="plain">object</arg> <arg choice="plain"><replaceable>userGpName</replaceable></arg> <arg choice="plain"><replaceable>objectName</replaceable></arg>  <arg choice="plain"><replaceable>namespaceNick</replaceable></arg>
                    <command>cas-enroll</command> <arg><option><olink targetptr="cas-enroll-common-options">common options</olink></option></arg> <arg choice="plain">serviceType</arg> <arg choice="plain"><replaceable>userGpName</replaceable></arg> <arg choice="plain"><replaceable>serviceTypeName</replaceable></arg>
                  </cmdsynopsis>
                </refsynopsisdiv>

          <refsect1 id="cas-enroll-description"><title>Tool description</title>
                  <para>This command line client is used to enroll a CAS Object, which includes trust anchors, namespaces, objects and service types. </para>
                  
                  <refsect2 id="cas-enroll-trust-anchors"><title>Enrolling Trust Anchors</title>
                    
                    <para>To enroll a trust anchor<indexterm type="cas-howto"><primary>enrolling in CAS</primary> <secondary>trust anchors</secondary></indexterm>, 
                      the user must have cas/enroll_trustAnchor
                      permission on that CAS server object (that is, the user must have permission to
                      perform the enroll_trustAnchor action on the CAS service type).  </para>
                    
                    <para>The enroll operation allows the user to choose a user group to which
                      cas/grantAll permission on the enrolled object should be granted. The
                      nickname should be unique across the CAS database and is used to refer
                      to this trust anchor.</para>
                    
                    <para>To enroll trust anchors:</para>
                    
                    <screen><prompt>casAdmin$</prompt> <command>cas-enroll [<replaceable><olink targetptr="cas-enroll-common-options">common options</olink></replaceable>] trustAnchor <replaceable>userGpName</replaceable> <replaceable>nickname</replaceable> <replaceable>authMethod</replaceable> <replaceable>authData</replaceable></command></screen>
                    
                    <para>where:</para>
                    
                    <variablelist>
                      <varlistentry><term><replaceable>userGpName</replaceable></term >
                        <listitem> <simpara>Indicates the user group to which cas/grantAll permission should be granted on this trust anchor entity.</simpara></listitem>
                      </varlistentry>
                      
                      <varlistentry><term><replaceable>nickname</replaceable></term >
                        <listitem> <simpara> Indicates the trust anchor nickname.</simpara></listitem>
                      </varlistentry>
                      
                      <varlistentry><term><replaceable>authMethod</replaceable></term >
                        <listitem> <simpara>Indicates the authentication method used by the trust anchor.</simpara></listitem>
                      </varlistentry>
                      
                      <varlistentry><term> <replaceable>authData</replaceable></term >
                        <listitem> <simpara>Indicates the data used for authentication, typically the DN.</simpara></listitem>
                      </varlistentry>
                      
                    </variablelist>
                    
                  </refsect2>
                  
                  <refsect2 id="cas-enroll-namespaces"><title>Enrolling Namespaces</title>
                    
                    <para>To enroll a namespace<indexterm type="cas"><primary>enrolling in CAS</primary> <secondary>namespaces</secondary></indexterm>, 
                      the user must have cas/enroll_namespace
                      permission (that is, the user must have permission to perform the
                      enroll_namespace action on the cas service type). </para> 
                    
                    <para>The enroll operation allows the user to choose a userGroup to have cas/grantAll
                      permission on the enrolled object. The comparison algorithm specified
                      should be the name of the Comparison class that needs to be used to
                      compare objects that belong to this namespace. The nickname should be
                      unique across the CAS database and is used to refer to this user.</para>
                    
                    <para> Also, two namespaces are added to the CAS database at boot up time,
                      other than the inherent CAS Namespace:</para>
                    
                    <itemizedlist>
                      <listitem><simpara><filename>FTPDirectoryTree</filename> uses the WildCardComparison Algorithm and has
                        the base URL set to the current directory.</simpara></listitem>
                      <listitem><simpara><filename>FTPExact</filename> uses the ExactComparison Algorithm and has the base
                        URL set to the current directory.</simpara></listitem>
                    </itemizedlist>
                    
                    <para>To enroll namespaces:</para>
                    
                    <screen><prompt>casAdmin$</prompt> <command>cas-enroll [<replaceable><olink targetptr="cas-enroll-common-options">common options</olink></replaceable>] namespace <replaceable>userGpName</replaceable> <replaceable>nickname</replaceable> <replaceable>basename</replaceable> <replaceable>comparisonAlg</replaceable></command></screen>
                    
                    <para>where:</para>
                    
                    <variablelist>
                      <varlistentry><term> <replaceable>userGpName</replaceable></term >
                        <listitem> <simpara>Indicates the user group to which cas/grantAll permission should be
                          granted on this trust anchor entity.</simpara></listitem>
                      </varlistentry>
                      
                      <varlistentry><term><replaceable>nickname</replaceable></term >
                        <listitem> <simpara>Indicates the nickname of the namespace to be unenrolled.</simpara>
                          <simpara>If the trust anchor nickname specified does not exist, an error is
                            <emphasis>not</emphasis> thrown. If the unenroll operation is successful, all
                            policy data on that trust anchor is purged.</simpara>
                        </listitem>
                      </varlistentry>
                      
                      <varlistentry><term><replaceable>basename</replaceable></term >
                        <listitem> <simpara>Indicates the base URL for the namespace.</simpara></listitem>
                      </varlistentry>
                      
                      <varlistentry><term><replaceable>comparisonAlg</replaceable></term >
                        <listitem> <simpara> Indicates the comparison algorithm to be used. Unless the standard
                          comparison algorithms described below are used, the
                          fully qualified name of the class that needs to be used
                          should be given. The class needs to extend from the
                          abstract class
                          <computeroutput>org.globus.cas.impl.service.ObjectComparison</computeroutput>.</simpara>
                          <simpara>        
                            The two comparison classes provided as a part of the distribution are:
                          </simpara>
                          <itemizedlist>
                            <listitem><simpara><computeroutput>ExactComparison</computeroutput>: This class does a case-sensitive exact comparison
                              of the object names. If <replaceable>comparisonAlg</replaceable> in the above method is set to
                              <option>ExactComparison</option>, the class in the distribution is loaded and used.
                            </simpara></listitem>
                            <listitem><simpara><computeroutput>WildcardComparison</computeroutput>: This class does wild card matching as described
                              in <ulink url="http://www.globus.org/toolkit/docs/3.2/cas/CAS_policy_language_0.2.pdf">CAS Simple Policy Language</ulink>.  It assumes
                              that the wild card character is "*" and that the file separator is "/". If
                              <replaceable>comparisonAlg</replaceable> in the above method is set to <option>WildCardComparison</option>, the
                              class in the distribution is loaded and used. </simpara></listitem>
                          </itemizedlist>
                        </listitem>
                      </varlistentry>
                      
                    </variablelist>
                    
                  </refsect2>
                  
                  <refsect2 id="cas-enroll-objects"><title>Enrolling Objects</title>
                    
                    <para>To enroll an object<indexterm type="cas-howto"><primary>enrolling in CAS</primary> <secondary>objects</secondary></indexterm>, 
                      the user must have cas/enroll_object permission
                      (that is, the use must have permission to perform the enroll_object action on
                      the cas service type).  </para>
                    
                    <para>The enroll operation allows the user to choose a
                      userGroup to have cas/grantAll permission on the enrolled object. The
                      name of the object and the namespace this object belongs to
                      identify an object in the database and should be unique across the
                      CAS database.</para>
                    
                    <para>To enroll objects:</para>
                    
                    <screen><prompt>casAdmin$</prompt> <command>cas-enroll [<replaceable><olink targetptr="cas-enroll-common-options">common options</olink></replaceable>] object <replaceable>userGpName</replaceable> <replaceable>objectName</replaceable> <replaceable>namespaceNick</replaceable></command></screen>
                    
                    <para>where:</para>
                    
                    <variablelist>
                      
                      <varlistentry><term><replaceable>userGpName</replaceable></term >
                        <listitem> <simpara>Indicates the user group to which cas/grantAll permission should be granted on this trust anchor entity.</simpara></listitem>
                      </varlistentry>
                      
                      <varlistentry><term><replaceable>objectName</replaceable></term >
                        <listitem> <simpara>Indicates the name of the object.</simpara></listitem>
                      </varlistentry>
                      
                      <varlistentry><term><replaceable>namespaceNick</replaceable></term >
                        <listitem> <simpara>Indicates the nickname of the namespace to which this object belongs.</simpara></listitem>
                      </varlistentry>
                      
                      <varlistentry><term></term >
                        <listitem> <simpara></simpara></listitem>
                      </varlistentry>
                      
                    </variablelist>
                    
                  </refsect2>
                  
                  <refsect2 id="cas-enroll-service-types"><title>Enrolling Service Types</title>
                    
                    <para>To enroll a service type, the user must have cas/enroll_serviceType
                      permission (that is, the user must have permission to perform the
                      enroll_serviceType action on the cas service type). </para>
                    
                    <para>The enroll operation allows the user to choose a userGroup to have cas/grantAll
                      permission on the enrolled service type. The service type name should
                      be unique across the CAS database.</para>
                    
                    <para>To enroll service types:</para>
                    
                    <screen><prompt>casAdmin$</prompt> <command>cas-enroll [<replaceable><olink targetptr="cas-enroll-common-options">common options</olink></replaceable>] serviceType <replaceable>userGpName</replaceable> <replaceable>serviceTypeName</replaceable></command></screen>
                    
                    <para>where:</para>
                    
                    <variablelist>
                      
                      <varlistentry><term><replaceable>userGpName</replaceable></term >
                        <listitem> <simpara>Indicates the user group to which cas/grantAll permission should be granted on this trust anchor entity.</simpara></listitem>
                      </varlistentry>
                      
                      <varlistentry><term><replaceable>serviceTypeName</replaceable></term >
                        <listitem> <simpara>Indicates the service type name.</simpara></listitem>
                      </varlistentry>
                      
                    </variablelist>
                    
                  </refsect2>
                  
                </refsect1>

          <refsect1 id="cas-enroll-common-options"><title>Options</title>
            
            <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
              href="WS_AA_CAS_Interface_Commandline_Common_Options_Frag.xml"/>

          </refsect1>

          <refsect1 id="cas-enroll-usage"><title>Usage</title>
          
          <para>For detailed examples of using this command, see <olink targetdoc="casAdmin" targetptr="cas-admin-example"/>.</para>
          
        </refsect1>
          
        </refentry>
        
        <refentry id="cas-remove">
          <refmeta>
                        <refentrytitle>cas-remove</refentrytitle>
                        <manvolnum>8</manvolnum>
                </refmeta>
                <refnamediv>
                        <refname>cas-remove</refname>
                        <refpurpose>Remove a CAS object from the database</refpurpose>
                </refnamediv>
                <refsynopsisdiv><cmdsynopsis>
                  <command>cas-remove</command> <arg><option><olink targetptr="cas-remove-common-options">common options</olink></option></arg> <arg choice="plain">trustAnchor</arg> <arg choice="plain"><replaceable>nickname</replaceable></arg>
                  <command>cas-remove</command> <arg><option><olink targetptr="cas-remove-common-options">common options</olink></option></arg> <arg choice="plain">namespace</arg> <arg choice="plain"><replaceable>nickname</replaceable></arg>
                  <command>cas-remove</command> <arg><option><olink targetptr="cas-remove-common-options">common options</olink></option></arg> <arg choice="plain">object</arg> <arg choice="plain"><replaceable>objName</replaceable></arg> <arg choice="plain"><replaceable>namespaceNick</replaceable></arg>
                  <command>cas-remove</command> <arg><option><olink targetptr="cas-remove-common-options">common options</olink></option></arg> <arg choice="plain">serviceType</arg> <arg choice="plain"><replaceable>serviceTypeName</replaceable></arg>
                </cmdsynopsis>
                </refsynopsisdiv>
          
          <refsect1 id="cas-remove-description"><title>Tool description</title>
      
            <refsect2 id="cas-remove-trust-anchors"><title>Removing Trust Anchors</title>
              
              <para>To remove a trust anchor<indexterm type="cas-howto"><primary>removing from CAS</primary> <secondary>trust anchors</secondary></indexterm>, the user must have cas/remove permission
                on that trust anchor.  The trust anchor must also be unused (that is, there may not be any users in the database that have this trust
                anchor or it may not be a part of any object group).</para>
              
              <para>To remove trust anchors:</para>
              
              <screen><prompt>casAdmin$</prompt> <command>cas-remove [<replaceable><olink targetptr="cas-remove-common-options">options</olink></replaceable>] trustAnchor <replaceable>nickname</replaceable></command></screen>
              
              <para>where:</para>
              
              <variablelist>
                <varlistentry><term><replaceable>nickname</replaceable></term >
                  <listitem> <simpara>Indicates the nickname of the trust anchor to be unenrolled.</simpara>
                    <simpara>If the trust anchor nickname specified does not exist, an error is
                      <emphasis>not</emphasis> thrown. If the unenroll operation is successful, all
                      policy data on that trust anchor is purged.</simpara>
                  </listitem>
                </varlistentry>
              </variablelist>
              
            </refsect2>
            
            <refsect2 id="cas-remove-namespaces"><title>Removing Namespaces</title>
              
              <para>To remove a namespace, the user must have cas/remove permission on
                that namespace.  The namespace must also be unused &mdash; that is, there may
                not be any object in the database that belongs to this namespace.</para>
              
              <screen><prompt>casAdmin$</prompt> <command>cas-remove [<replaceable><olink targetptr="cas-remove-common-options">options</olink></replaceable>] namespace <replaceable>nickname</replaceable></command></screen>
              
              <para>where:</para>
              
              <variablelist>
                <varlistentry><term><replaceable>nickname</replaceable></term >
                  <listitem> <simpara>Indicates the nickname of the namespace to be unenrolled.</simpara>
                    <simpara>If the namespace nickname specified does not exist, an error is
                      <emphasis>not</emphasis> thrown. If the remove operation is successful, all
                      policy data on that trust anchor is purged.</simpara>
                  </listitem>
                </varlistentry>
                
              </variablelist>
              
            </refsect2>
            
            <refsect2 id="cas-remove-objects"><title>Removing Objects</title>
              
              <para>To remove an object the user must have cas/remove permission on
                that object.  The object must also be unused &mdash; that is, there may not
                be any object group in the database that this object belongs to.</para>
              
              <screen><prompt>casAdmin$</prompt> <command>cas-remove [<replaceable><olink targetptr="cas-remove-common-options">options</olink></replaceable>] object <replaceable>objName</replaceable> <replaceable>namespaceNick</replaceable></command></screen>
              
              <para>where:</para>
              
              <variablelist>
                <varlistentry><term><replaceable>objName</replaceable></term >
                  <listitem> <simpara>Indicates the name of the object to be removed.</simpara></listitem>
                </varlistentry>
                
                <varlistentry><term><replaceable>namespaceNick</replaceable></term >
                  <listitem> <simpara>Indicates the nickname of the namespace to which this object belongs.</simpara>
                    <simpara>If the object specified does not exist, an error is <emphasis>not</emphasis> 
                      thrown. If the remove operation is successful, all policy data on
                      that object is purged.</simpara>
                  </listitem>
                </varlistentry>
                
              </variablelist>
              
            </refsect2>
            
            <refsect2 id="cas-remove-service-types"><title>Removing Service Types</title>
              
              <para>To remove a service type the user must have cas/remove permission
                on that service type.  The service type must also be unused &mdash; that is,
                there may not be any service type to action mapping.</para>
              
              <screen><prompt>casAdmin$</prompt> <command>cas-remove [<replaceable><olink targetptr="cas-remove-common-options">options</olink></replaceable>] serviceType <replaceable>serviceTypeName</replaceable></command></screen>
              
              <para>where:</para>
              
              <variablelist>
                <varlistentry><term><replaceable>serviceTypeName</replaceable></term >
                  <listitem> <simpara>Indicates the service type name.</simpara>
                    <simpara>If the service type specified does not exist, an error is <emphasis>not</emphasis> 
                      thrown. If the remove operation is successful, all policy data on that
                      service type is purged.</simpara>
                  </listitem>
                </varlistentry>
                
              </variablelist>
              
            </refsect2>
            
          </refsect1>

          <refsect1 id="cas-remove-common-options"><title>Options</title>
            <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
              href="WS_AA_CAS_Interface_Commandline_Common_Options_Frag.xml"/>
          </refsect1>
          
          <refsect1 id="cas-remove-usage"><title>Usage</title>
            
            <para>Example of removing trust anchors:</para>
            
            <screen>FIXME</screen>
            
            <para>Example of removing namespaces:</para>
            
            <screen>FIXME</screen>
            
            <para>Example of removing objects:</para>
            
            <screen>FIXME</screen>
            
            <para>Example of removing service types:</para>
            
            <screen>FIXME</screen>
            
          </refsect1>

        </refentry>

  <refentry id="cas-action">
    <refmeta>
      <refentrytitle>cas-action</refentrytitle>
      <manvolnum>8</manvolnum>
    </refmeta>
    <refnamediv>
      <refname>cas-action</refname>
      <refpurpose>Maintains service types</refpurpose>
    </refnamediv>
    <refsynopsisdiv><cmdsynopsis>
      <command>cas-action</command> <arg><option><olink targetptr="cas-action-common-options">common options</olink></option></arg> <group><arg choice="plain">add</arg> <arg choice="plain">remove</arg></group> <arg choice="plain"><replaceable>serviceTypeName</replaceable></arg> <arg choice="plain"><replaceable>actionName</replaceable></arg>
    </cmdsynopsis>
    </refsynopsisdiv>
    
    <refsect1><title>Tool description</title>
      
      <para>Use the <command>cas-action</command> command to add an action mapping to a service type or remove an action mapping from a service type.</para>
      
      
      <para>To add an action mapping to a service type, the user must have
        cas/create_group_entry permission on the service type.</para>
      
      <para>To remove a service type action mapping, the user must have
        cas/delete_group_entry permission on the service type.</para>
      
      <para>If the group member being removed does not exist, an error is
        <emphasis>not</emphasis> thrown.</para>
      
    </refsect1>
    
    <refsect1 id="cas-action-common-options"><title>Options</title>
      
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
        href="WS_AA_CAS_Interface_Commandline_Common_Options_Frag.xml"/>
      
    </refsect1>
    
    <refsect1 id="cas-action-usage"><title>Usage</title>
      
      <para>For an example of using this command, see <olink targetdoc="casAdmin" targetptr="cas-admin-example-action"/>.</para>
      
    </refsect1>
    
</refentry>
    
    <refentry id="cas-group-admin">
      <refmeta>
        <refentrytitle>cas-group-admin</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>cas-group-admin</refname>
        <refpurpose>Maintains user groups, object groups, or serviceAction groups</refpurpose>
      </refnamediv>
      <refsynopsisdiv><cmdsynopsis>
        <command>cas-group-admin</command> <arg><option><olink targetptr="cas-group-admin-common-options">common options</olink></option></arg> <group><arg choice="plain">user</arg> <arg choice="plain">object</arg> <arg choice="plain">serviceAction</arg></group> <arg choice="plain">create</arg> <arg choice="plain"><replaceable>userGpName</replaceable></arg>  <arg choice="plain"><replaceable>groupName</replaceable></arg>
        <command>cas-group-admin</command> <arg><option><olink targetptr="cas-group-admin-common-options">common options</olink></option></arg> <group><arg choice="plain">user</arg> <arg choice="plain">object</arg> <arg choice="plain">serviceAction</arg></group> <arg choice="plain">delete</arg> <arg choice="plain"><replaceable>groupName</replaceable></arg>
      </cmdsynopsis>
      </refsynopsisdiv>
      
      <refsect1 id="cas-group-admin-description"><title>Tool description</title>
        
        <para>Use <command>cas-group-admin</command> to create or delete user groups, object groups, or serviceAction groups. 
          Note: to add or delete entries to these groups, see [olink to other clients].</para> 
        
        
        <refsect2 id="cas-group-admin-adding-user-group"><title>Adding user groups</title>
          
          <para>To create a new user group the user must have cas/create_user_group
            permission (that is, the user must have permission to perform the create_user_group
            action on the cas service type). The user group name should be unique
            across the CAS database. The create operation allows the user to
            choose a user group to have cas/grantAll permission on the created
            user group.  If the user group that is chosen to have cas/grantAll
            permission is the new group created, then the user making this request
            is added to the new group.</para>
          
          <para>To add a user group:</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<replaceable><olink targetptr="cas-group-admin-common-options">common options</olink></replaceable>] user create <replaceable>userGpName</replaceable> <replaceable>groupName</replaceable> </command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term><replaceable>userGpName</replaceable></term >
              <listitem> <simpara>Indicates the user group to which cas/grantAll permission should be
                granted on this trust anchor entity.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term><replaceable>groupName</replaceable></term >
              <listitem> <simpara>Indicates the name of the user group being created.</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
        <refsect2 id="cas-group-admin-deleting-user-group"><title>Deleting user groups</title>
          
          <para>To delete a user group, the user must have cas/delete_user_group entry
            permission on that user group. The group must be empty and also must not be
            referenced from other entities in the database (for example, it should not
            be a member of some object group).</para>
          
          <para>If the user group specified does not exist, an error is <emphasis>not</emphasis> thrown. If the delete operation is successful,  
            all policy data on that user group is purged.</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<replaceable><olink targetptr="cas-group-admin-common-options">common options</olink></replaceable>] user delete <replaceable>groupName</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term><replaceable>groupName</replaceable></term >
              <listitem> <simpara>Indicates the name of the user group to be deleted.</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
        <refsect2 id="cas-group-admin-creating-object-group"><title>Creating An Object Group</title>
          
          <para>To create a new object group, the user must have
            cas/create_object_group permission (that is, the user must have permission to
            perform the create_object_group action on the CAS service type). The object
            group name should be unique across the CAS database. The create
            operation allows the user to choose a user group to have cas/grantAll
            permission on the created object group.</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<replaceable><olink targetptr="cas-group-admin-common-options">common options</olink></replaceable>] object create <replaceable>userGpName</replaceable> <replaceable>groupName</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term><replaceable>userGpName</replaceable></term >
              <listitem> <simpara>Indicates the user group to which cas/grantAll permission should be
                granted on this object group.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term><replaceable>groupName</replaceable></term >
              <listitem> <simpara>Indicates the object group name.</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
        <refsect2 id="cas-group-admin-deleting-object-group"><title>Deleting An Object Group</title>
          
          <para> To delete an object group, the user must have cas/delete_user_group entry
            permission on that object group. The group must be empty.</para>
          
          <para>If the object group specified does not exist, an error is <emphasis>not</emphasis> thrown. If the delete operation is successful, all policy data on that object group is purged.</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<replaceable><olink targetptr="cas-group-admin-common-options">common options</olink></replaceable>] object delete <replaceable>groupName</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term><replaceable>groupName</replaceable></term >
              <listitem> <simpara>The name of the object group to be deleted.</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
        <refsect2 id="cas-group-admin-creating-serviceAction-group"><title>Creating A Service/Action Group</title>
          
          <para>To create a new service/action group, the user must have
            cas/create_serviceAction_group permission (that is, the user must have
            permission to perform the create_serviceAction_group action on the CAS service
            type). The serviceAction group name should be unique across the CAS
            database. The create operation allows the user to choose a user group
            to have cas/grantAll permission on the created serviceAction group.</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<replaceable><olink targetptr="cas-group-admin-common-options">common options</olink></replaceable>] serviceAction create <replaceable>userGpName</replaceable> <replaceable>groupName</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term> <replaceable>userGpName</replaceable></term >
              <listitem> <simpara>Indicates the user group to which cas/grantAll permission should be
                granted on this service/action group.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term><replaceable>groupName</replaceable></term >
              <listitem> <simpara>Indicates the name of the service/action group being created.</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
        <refsect2 id="cas-group-admin-deleting-serviceAction-group"><title>Deleting A Service/Action Group</title>
          
          <para>To delete a service/action group, the user must have cas/delete_user_group
            entry permission on that service/action group. The group must be empty
            and also must not be referenced from any other entity in the
            database. For example, it should not be a member of some object group.</para>
          
          <para>If the service/action group specified does not exist, an error is
            <emphasis>not</emphasis> thrown. If the delete operation is successful, all
            policy data on that service/action group is purged.</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<replaceable><olink targetptr="cas-group-admin-common-options">common options</olink></replaceable>] serviceAction delete <replaceable>groupName</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term> <replaceable>groupName</replaceable></term >
              <listitem> <simpara>Indicates the name of the service/action group to be deleted.</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        

      </refsect1>

      <refsect1 id="cas-group-admin-common-options"><title>Options</title>
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
          href="WS_AA_CAS_Interface_Commandline_Common_Options_Frag.xml"/>
      </refsect1>
      
      <refsect1 id="cas-group-admin-usage"><title>Usage</title>
        <para>For examples of using this command, see <olink targetdoc="casAdmin" targetptr="cas-admin-example"/>.</para>
      </refsect1>
      
    </refentry>
    
    <refentry id="cas-group-add-entry">
      <refmeta>
        <refentrytitle>cas-group-add-entry</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>cas-group-add-entry</refname>
        <refpurpose>Adds CAS objects to CAS groups</refpurpose>
      </refnamediv>
      <refsynopsisdiv><cmdsynopsis>
        <command>cas-group-add-entry</command> <arg><option><olink targetptr="cas-group-admin-common-options">common options</olink></option></arg> <arg choice="plain">user</arg> <arg choice="plain"><replaceable>groupName</replaceable></arg>  <arg choice="plain"><replaceable>nickname</replaceable></arg>
        <command>cas-group-add-entry</command> <arg><option><olink targetptr="cas-group-admin-common-options">common options</olink></option></arg> <arg choice="plain">object</arg> <arg choice="plain"><replaceable>groupName</replaceable></arg>  <arg choice="plain"><replaceable>objectSpecDesc</replaceable></arg> <arg choice="plain"><replaceable>objectSpec</replaceable></arg>
        <command>cas-group-add-entry</command> <arg><option><olink targetptr="cas-group-admin-common-options">common options</olink></option></arg> <arg choice="plain">serviceAction</arg> <arg choice="plain"><replaceable>groupName</replaceable></arg>  <arg choice="plain"><replaceable>serviceTypeName</replaceable></arg> <arg choice="plain"><replaceable>actionName</replaceable></arg>
      </cmdsynopsis>
      </refsynopsisdiv>
      
      <refsect1 id="cas-group-add-entry-description"><title>Tool description</title>
        
        <para>Use <command>cas-group-add-entry</command> to add users to a user group, objects to an object group, or service/actions to service/action groups. 
          Note: to add or delete groups, see [olink to other clients].</para> 
        
        <refsect2 id="cas-group-add-entry-user"><title>Adding Member To A User Group</title>
          
          <para>To add a user to a user group, the user must have
            cas/add_group_entry permission on that particular user group. Only
            user nicknames that exist in the CAS database can be valid members.</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-add-entry [<replaceable><olink targetptr="cas-group-add-entry-common-options">common options</olink></replaceable>] user <replaceable>groupName</replaceable> <replaceable>nickname</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term> <replaceable>groupName</replaceable></term >
              <listitem> <simpara>Indicates the user group name to which the member needs to be added.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>nickname</replaceable></term >
              <listitem> <simpara>Indicates the nickname of the user to be added to this group.</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
        <refsect2 id="cas-group-add-entry-object"><title>Adding Member To An Object Group</title>
          
          <para>To add a member (an object group can have the following CasObjects
            as members: object, user, user group, service type, namespace or trust
            anchor) to an object group, the user must have cas/add_group_entry
            permission on that particular object group.</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-add-entry [<replaceable><olink targetptr="cas-group-add-entry-common-options">common options</olink></replaceable>] object <replaceable>groupName</replaceable> <replaceable>objectSpecDesc</replaceable> <replaceable>objectSpec</replaceable></command></screen>
          
          <para>
            where:
          </para>
          
          <variablelist>
            
            <varlistentry><term> <replaceable>groupName</replaceable></term >
              <listitem> <simpara>Indicates the object group name to which the member needs to be added.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>objectSpecDesc</replaceable></term >
              <listitem> <simpara>Indicates the type of CasObject. Can be one of the following options:</simpara>
                <itemizedlist>
                  <listitem><simpara><option>trustAnchor</option></simpara></listitem>
                  <listitem><simpara><option>user</option></simpara></listitem>
                  <listitem><simpara><option>userGroup</option></simpara></listitem>
                  <listitem><simpara><option>object</option></simpara></listitem>
                  <listitem><simpara><option>namespace</option></simpara></listitem>
                  <listitem><simpara><option>serviceType</option></simpara></listitem>
                </itemizedlist>
              </listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>objectSpec</replaceable></term >
              <listitem> <simpara>Indicates the identifier for the CasObject the user is adding. Can be one of the following:</simpara>
                <itemizedlist>
                  <listitem><simpara><option>nickname</option> if adding a trustAnchor or user</simpara></listitem>
                  <listitem><simpara><option>groupName</option> if adding a userGroup</simpara></listitem>
                  <listitem><simpara><option>objectNamespace</option> objectName if adding an object</simpara></listitem>
                  <listitem><simpara><option>nickname</option> if adding a namespace</simpara></listitem>
                  <listitem><simpara><option>serviceTypeName</option> if adding a serviceType</simpara></listitem>
                </itemizedlist>
              </listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
        <refsect2 id="cas-group-add-entry-serviceAction"><title>Adding Service/Action To A Service/Action Group</title>
          
          <para>To add a service/action to a serviceAction group, the user must have
            cas/add_group_entry permission on that particular serviceAction group
            (that is, the user must have permission to perform add_group_entry action on
            that service action group).</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-add-entry [<replaceable><olink targetptr="cas-group-add-entry-common-options">common options</olink></replaceable>] serviceAction <replaceable>groupName</replaceable> <replaceable>serviceTypeName</replaceable> <replaceable>actionName</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term> <replaceable>groupName</replaceable></term >
              <listitem> <simpara>Indicates the service/action group to which the service/action needs to be added.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>serviceTypeName</replaceable></term >
              <listitem> <simpara>Indicates the service type name part of the mapping to be added to the group.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>actionName</replaceable></term >
              <listitem> <simpara>Indicates the action name part of the mapping to be added to the group.</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
      </refsect1>

      <refsect1  id="cas-group-add-entry-common-options"><title>Options</title>
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
          href="WS_AA_CAS_Interface_Commandline_Common_Options_Frag.xml"/>
      </refsect1>
      
      <refsect1  id="cas-group-add-entry-usage"><title>Usage</title>
        
        <para>For examples of using this command, see <olink targetdoc="casAdmin" targetptr="cas-admin-example"/>.</para>
        
      </refsect1>
      
    </refentry>
    
    <refentry id="cas-group-remove-entry">
      <refmeta>
        <refentrytitle>cas-group-remove-entry</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>cas-group-remove-entry</refname>
        <refpurpose>Removing CAS objects from CAS groups</refpurpose>
      </refnamediv>
      <refsynopsisdiv><cmdsynopsis>
        <command>cas-group-remove-entry</command> <arg><option><olink targetptr="cas-group-remove-entry-common-options">common options</olink></option></arg> <arg choice="plain">user</arg> <arg choice="plain"><replaceable>groupName</replaceable></arg>  <arg choice="plain"><replaceable>nickname</replaceable></arg>
        <command>cas-group-remove-entry</command> <arg><option><olink targetptr="cas-group-remove-entry-common-options">common options</olink></option></arg> <arg choice="plain">object</arg> <arg choice="plain"><replaceable>groupName</replaceable></arg>  <arg choice="plain"><replaceable>objectSpec</replaceable></arg> <arg choice="plain"><replaceable>objectSpecDesc</replaceable></arg>
        <command>cas-group-remove-entry</command> <arg><option><olink targetptr="cas-group-remove-entry-common-options">common options</olink></option></arg> <arg choice="plain">serviceAction</arg> <arg choice="plain"><replaceable>groupName</replaceable></arg>  <arg choice="plain"><replaceable>serviceTypeName</replaceable></arg> <arg choice="plain"><replaceable>actionName</replaceable></arg>
      </cmdsynopsis>
      </refsynopsisdiv>
      
      <refsect1 id="cas-group-remove-entry-description"><title>Tool description</title>
        
        <para>Use <command>cas-group-remove-entry</command> to remove users from a user group, objects from an object group, or service/actions from a service/action group. 
          Note: to add or delete groups, see [olink to other clients].</para> 
        
        <refsect2 id="cas-group-remove-entry-user"><title>Removing User From A User Group</title>
          
          <para>To remove a user from a user group, the user must have
            cas/remove_group_entry permission on that particular user group.</para>
          
          <para>If the group member being removed does not exist, an error is
            <emphasis>not</emphasis> thrown. </para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-remove-entry [<replaceable><olink targetptr="cas-group-remove-entry-common-options">common options</olink></replaceable>] user <replaceable>groupName</replaceable> <replaceable>nickname</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term> <replaceable>groupName</replaceable></term >
              <listitem> <simpara>Indicates the user group name from which the member needs to be removed.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>nickname</replaceable></term >
              <listitem> <simpara>Indicates the nickname of the user to be removed from this group.</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
        <refsect2 id="cas-group-remove-entry-object"><title>Removing Member From An Object Group</title>
          
          <para>To remove an object from an object group the user must have
            cas/remove_group_entry permission on that particular object group:</para>
          
          <para>If the group member being removed does not exist, an error is
            <emphasis>not</emphasis> thrown.</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-remove-entry [<replaceable><olink targetptr="cas-group-remove-entry-common-options">common options</olink></replaceable>] object <replaceable>groupName</replaceable> <replaceable>objectSpec</replaceable> <replaceable>objectSpecDesc</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term> <replaceable>groupName</replaceable></term >
              <listitem> <simpara>Indicates the object group name from which the member needs to be removed.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>objectSpecDesc</replaceable></term >
              <listitem> <simpara>Indicates the type of CasObject. Can be one of the following options:</simpara>
                <itemizedlist>
                  <listitem><simpara><option>trustAnchor</option></simpara></listitem>
                  <listitem><simpara><option>user</option></simpara></listitem>
                  <listitem><simpara><option>userGroup</option></simpara></listitem>
                  <listitem><simpara><option>object</option></simpara></listitem>
                  <listitem><simpara><option>namespace</option></simpara></listitem>
                  <listitem><simpara><option>serviceType</option></simpara></listitem>
                </itemizedlist>
              </listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>objectSpec</replaceable></term >
              <listitem> <simpara>Indicates the identifier for the CasObject the user is adding. Can be one of the following:</simpara>
                <itemizedlist>
                  <listitem><simpara><option>nickname</option> if adding a trustAnchor or user</simpara></listitem>
                  <listitem><simpara><option>groupName</option> if adding a userGroup</simpara></listitem>
                  <listitem><simpara><option>objectNamespace</option> objectName if adding an object</simpara></listitem>
                  <listitem><simpara><option>nickname</option> if adding a namespace</simpara></listitem>
                  <listitem><simpara><option>serviceTypeName</option> if adding a serviceType</simpara></listitem>
                </itemizedlist>
              </listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
        <refsect2 id="cas-group-remove-entry-serviceAction"><title>Removing A Service/Action From A Service/Action Group</title>
          
          <para>To remove a service/action from a service/action group, the user must have
            cas/remove_group_entry permission on that particular service/action group.</para>
          
          <para>        
            If the action being removed does not exist, an error is <emphasis>not</emphasis> thrown.
          </para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-remove-entry [<replaceable><olink targetptr="cas-group-remove-entry-common-options">common options</olink></replaceable>] serviceAction <replaceable>groupName</replaceable> <replaceable>serviceTypeName</replaceable> <replaceable>actionName</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term> <replaceable>groupName</replaceable></term >
              <listitem> <simpara> Indicates the serviceAction group name from which the service/action needs to be removed.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>serviceTypeName</replaceable></term >
              <listitem> <simpara>Indicates the service type name part of the mapping to be removed from the group.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>actionName</replaceable></term >
              <listitem> <simpara>Indicates the action name part of the mapping to be removed from the group.</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
      </refsect1>

      <refsect1  id="cas-group-remove-entry-common-options"><title>Options</title>
        
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
          href="WS_AA_CAS_Interface_Commandline_Common_Options_Frag.xml"/>
        
      </refsect1>
      
      <refsect1 id="cas-group-remove-entry-usage"><title>Usage</title>
        
        <para>Example of removing a user from a user group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of removing a CAS object from an object group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of removing a service/action from a service/action group:</para>
        
        <screen>FIXME</screen>
        
      </refsect1>
      
    </refentry>

    <refentry id="cas-rights-admin">
      <refmeta>
        <refentrytitle>cas-rights-admin</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>cas-rights-admin</refname>
        <refpurpose>Granting or revoking permissions</refpurpose>
      </refnamediv>
      <refsynopsisdiv><cmdsynopsis>
        <command>cas-rights-admin</command> <arg><option><olink targetptr="cas-rights-admin-common-options">common options</olink></option></arg> <group><arg choice="plain">grant</arg> <arg choice="plain">revoke</arg></group> <arg choice="plain"><replaceable>userGroupName</replaceable></arg>  <arg choice="plain"><replaceable>objectSpecDesc</replaceable></arg> <arg choice="plain"><replaceable>objectSpec</replaceable></arg> <arg choice="plain"><replaceable>actionSpecDesc</replaceable></arg> <arg choice="plain"><replaceable>actionSpec</replaceable></arg>
      </cmdsynopsis>
      </refsynopsisdiv>
      
      <refsect1 id="cas-rights-admin-description"><title>Tool description</title>
        
        <para>Use <command>cas-rights-admin</command> to grant or revoke rights.</para> 
        
        <refsect2 id="cas-rights-admin-grant"><title>Granting Permissions To A User Group On An Object/Object Group</title>
          
          <para>The user may grant permissions to a user group on an object or object group to perform a service action or service action group (that is, to
            perform any action that is a member of the service action group to
            which permission is granted), provided the user has both:</para>
          
          <itemizedlist>
            <listitem><simpara>cas/grant permission on the object or object group, and</simpara></listitem>
            <listitem><simpara>permission to perform the service action or service action
              group on the object or object group.</simpara></listitem>
            
          </itemizedlist>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-rights-admin [<replaceable><olink targetptr="cas-rights-admin-common-options">common options</olink></replaceable>] grant <replaceable>userGroupName</replaceable> <replaceable>objectSpecDesc</replaceable> <replaceable>objectSpec</replaceable> <replaceable>actionSpecDesc</replaceable> <replaceable>actionSpec</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term> <replaceable>userGroupName</replaceable></term >
              <listitem> <simpara>Indicates the user group to be granted permission.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>objectSpec</replaceable></term >
              <listitem> <simpara>Indicates the identifier for the object or object group.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>objectSpecDesc</replaceable></term >
              <listitem> <simpara>Indicates the type:</simpara>
                <itemizedlist>
                  <listitem><simpara><option>object</option></simpara></listitem>     
                  <listitem><simpara><option>objectGroup</option></simpara></listitem> 
                </itemizedlist>
              </listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>actionSpec</replaceable></term >
              <listitem> <simpara>Indicates the identifier for action or action group.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>actionSpecDesc</replaceable></term >
              <listitem> <simpara>Indicates the type:</simpara>
                <itemizedlist>
                  <listitem><simpara><option>serviceAction</option></simpara></listitem>     
                  <listitem><simpara><option>serviceActionGp</option></simpara></listitem> 
                </itemizedlist>
              </listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
        <refsect2 id="cas-rights-admin-revoke"><title>Revoking A Policy In The CAS Database</title>
          
          <para>The user may revoke a policy in the CAS database if the user has
            cas/revoke permission on the object or object group on which the policy
            is defined.</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-rights-admin [<replaceable><olink targetptr="cas-rights-admin-common-options">common options</olink></replaceable>] revoke <replaceable>userGroupName</replaceable>  <replaceable>objectSpecDesc</replaceable> <replaceable>objectSpec</replaceable>  <replaceable>actionSpecDesc</replaceable> <replaceable>actionSpec</replaceable></command></screen>
          
          <para>where:</para>
          
          <variablelist>
            
            <varlistentry><term> <replaceable>userGroupName</replaceable></term >
              <listitem> <simpara> Indicates the user group for which you want to grant permission.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>objectSpecDesc</replaceable></term >
              <listitem> <simpara>  Indicates the type of CasObject. Can be one of the following:</simpara>
                <itemizedlist>
                  <listitem><simpara><option>trustAnchor</option></simpara></listitem>
                  <listitem><simpara><option>user</option></simpara></listitem>
                  <listitem><simpara><option>userGroup</option></simpara></listitem>
                  <listitem><simpara><option>object</option></simpara></listitem>
                  <listitem><simpara><option>namespace</option></simpara></listitem>
                  <listitem><simpara><option>serviceType</option></simpara></listitem>
                  <listitem><simpara><option>userGroup</option></simpara></listitem>
                </itemizedlist>
              </listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>objectSpec</replaceable></term >
              <listitem> <simpara>Indicates the identifier for the object or object group.</simpara> </listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>actionSpec</replaceable></term >
              <listitem> <simpara>Indicates the identifier for the action or action group.</simpara></listitem>
            </varlistentry>
            
            <varlistentry><term> <replaceable>actionSpecDesc</replaceable></term >
              <listitem> <simpara>Indicates the type (serviceAction or serviceActionGp).</simpara></listitem>
            </varlistentry>
            
          </variablelist>
          
        </refsect2>
        
      </refsect1>

      <refsect1  id="cas-rights-admin-common-options"><title>Options</title>
        
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
          href="WS_AA_CAS_Interface_Commandline_Common_Options_Frag.xml"/>
        
      </refsect1>

      <refsect1 id="cas-rights-admin-usage"><title>Usage</title>
        
        <para>For an example of using this command, see <olink targetdoc="casAdmin" targetptr="cas-admin-example"/>.</para>
        
      </refsect1>
      
    </refentry>
</reference>