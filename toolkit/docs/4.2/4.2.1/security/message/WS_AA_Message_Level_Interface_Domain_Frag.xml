<?xml version='1.0' encoding='UTF-8'?>
<section>
  <title>Interface introduction</title>
  <para>Client side security is set up by either setting individual
    properties on the javax.xml.rpc.Stub object used for the web service
    method invocation or by setting properties on a client side security
    descriptor object, which in turn is propagated to client side
    security handlers by making it available as a stub object
    property. Here are examples for the two approaches:</para>
  <itemizedlist>
    <listitem>
      <para>Setting property on the stub:

<programlisting>// Create endpoint reference
EndpointReferenceType endpoint = new EndpointReferenceType();
// Set address of service
String counterAddr = 
   &quot;http://localhost:8080/wsrf/services/CounterService&quot;;
// Get handle to port 
CounterPortType port = 
   locator.getCounterPortTypePort(endpoint);
<emphasis>// set client authorization to self ((Stub)port)._setProperty(Constants.AUTHORIZATION, SelfAuthorization.getInstance());</emphasis></programlisting>
</para>
    </listitem>
    <listitem>
      <para>Setting properties  using a client descriptor:
      <screen><emphasis>// Client security descriptor file String CLIENT_DESC = &quot;org/globus/wsrf/samples/counter/client/client-security-config.xml&quot;; </emphasis>// Create endpoint reference
EndpointReferenceType endpoint = new EndpointReferenceType();
// Set address of service
String counterAddr = 
   &quot;http://localhost:8080/wsrf/services/CounterService&quot;;
// Get handle to port 
CounterPortType port = 
   locator.getCounterPortTypePort(endpoint);
<emphasis>//Set descriptor on Stub ((Stub)port)._setProperty(Constants.CLIENT_DESCRIPTOR_FILE, CLIENT_DESC);</emphasis></screen></para>
    </listitem>
  </itemizedlist>
  <para>The descriptor file is defined by the following <ulink url="http://docbook.globus.org/security/authzframe/client_security_descriptor.xsd">Client Security Descriptor Schema</ulink>.</para>

<para><note> If the client needs to use transport security, the following API must be used to register the Axis transport handler for &quot;https&quot;:
<screen>
import org.globus.axis.util.Util;
static {
        Util.registerTransport();
    }
</screen></note></para>
</section>
<section>
  <title>Syntax of the interface</title>
  <para>
  <table>
      <title>Client side security properties</title>
      <tgroup cols="2">
        <colspec colname="c1"/>
        <colspec colname="c2"/>
        <tbody>
          <row>
            <entry namest="c1" nameend="c2" align="center" id="userPass"> WS-Security Username/Password </entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2" align="left">Enable WS-Security username/password authentication. </entry>
          </row>
          <row>
            <entry>Stubs setting</entry>
            <entry>
              <para>Properties: </para>
              <screen>org.globus.wsrf.security.Constants.USERNAME</screen>
              <para>Value equals the username.</para>
              <screen>org.globus.wsrf.security.Constants.PASSWORD</screen>
              <para>Value equals the password.</para>
            </entry>
          </row>
          <row>
            <entry>Descriptor setting</entry>
            <entry>Descriptor settings are currently not available for username/password.</entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2" align="center" id="gsiTransport"> GSI Transport </entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2">Enable GSI Transport with specified message protection level.</entry>
          </row>
          <row>
            <entry>Stubs setting</entry>
            <entry>
              <para>Property: </para>
              <screen>org.globus.gsi.GSIConstants.GSI_TRANSPORT</screen>
              <para>Values equal one of the following: </para>
              <itemizedlist>
                <listitem>
                  <simpara>
                    <constant>Constants.ENCRYPTION</constant>
                  </simpara>
                </listitem>
                <listitem>
                  <simpara>
                    <constant>Constants.SIGNATURE</constant>
                  </simpara>
                </listitem>
              </itemizedlist>
            </entry>
          </row>
          <row>
            <entry>Descriptor setting</entry>
            <entry>
              <para>Signature setting: </para>
              <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;
...
 &lt;GSITransport&gt;
  &lt;integrity/&gt;
 &lt;/GSITransport&gt;
...
&lt;/securityConfig&gt;</screen>
              <para>Encryption setting:</para>
              <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;
...
 &lt;GSITransport&gt;
  &lt;privacy/&gt;
 &lt;/GSITransport&gt;
...
&lt;/securityConfig&gt;</screen>
            </entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2" align="center" id="gsiSecureMessage"> GSI Secure Message </entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2">Enable GSI Secure Message with specified message protection level.</entry>
          </row>
          <row>
            <entry>Stubs setting</entry>
            <entry>
              <para>Property: </para>
              <screen>org.globus.wsrf.security.Constants.GSI_SEC_MSG</screen>
              <para>Values equal one of the following: </para>
              <itemizedlist>
                <listitem>
                  <simpara>
                    <constant>Constants.ENCRYPTION</constant>
                  </simpara>
                </listitem>
                <listitem>
                  <simpara>
                    <constant>Constants.SIGNATURE</constant>
                  </simpara>
                </listitem>
              </itemizedlist>
              <para>You can set the SOAP Actor of the signed message using the <constant>x509Actor</constant> property,
          but we do <emphasis>not</emphasis> recommend this unless you know what you
          are doing.</para>
            </entry>
          </row>
          <row>
            <entry>Descriptor setting</entry>
            <entry>
              <para>Signature setting: </para>
              <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;
... 
 &lt;GSISecureMessage&gt;  
  &lt;integrity/&gt; 
 &lt;/GSISecureMessage&gt; 
...
&lt;/securityConfig&gt;</screen>
              <para>Encryption
          setting:</para>
              <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;
...
 &lt;GSISecureMessage&gt;
  &lt;privacy/&gt;
 &lt;/GSISecureMessage&gt;
...
&lt;/securityConfig&gt;</screen>
            </entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2" align="center" id="gsiSecureConversion"> GSI Secure Conversation</entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2">Enable GSI Secure Conversation with specified message protection level.</entry>
          </row>
          <row>
            <entry>Stubs setting</entry>
            <entry>
              <para>Property: </para>
              <screen>org.globus.wsrf.security.Constants.GSI_SEC_CONV</screen>
              <para>Values equal one of
          the following:     </para>
              <itemizedlist>
                <listitem>
                  <simpara>Constants.ENCRYPTION</simpara>
                </listitem>
                <listitem>
                  <simpara>Constants.SIGNATURE</simpara>
                </listitem>
              </itemizedlist>
              <para>Furthermore, you can set the SOAP Actor of the GSI signed/encrypted
          SOAP message by using the <constant>gssActor</constant> property. We recommend
          that you <emphasis>not</emphasis> do this unless you <emphasis>really</emphasis> know
          what you are doing.</para>
            </entry>
          </row>
          <row>
            <entry>Descriptor setting</entry>
            <entry>
              <itemizedlist>
                <listitem>
                  <para>Signature setting:
            <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;
... 
 &lt;GSISecureConversation&gt;  
  &lt;integrity/&gt; 
 &lt;/GSISecureConveration&gt; 
 ...
&lt;/securityConfig&gt;</screen>
</para>
                </listitem>
                <listitem>
                  <para> Encryption setting:
              <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;
... 
 &lt;GSISecureConversation&gt;  
  &lt;privacy/&gt; 
 &lt;/GSISecureConversation&gt; 
...
&lt;/securityConfig&gt;</screen>
 </para>
                </listitem>
              </itemizedlist>
            </entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2" align="center" id="credentials">Credentials</entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2">Allows for setting credentials for authentication. If not specified, the default user proxy is used. Please see the <ulink url="http://www.globus.org/cog/distribution/1.1/compatibility.html">Security Library Compatibility Document</ulink> for some hints on loading and managing different GSI credentials.</entry>
          </row>
          <row>
            <entry>Stubs setting:</entry>
            <entry>
              <para>Property: </para>
              <screen>org.globus.axis.gsi.GSIConstants.GSI_CREDENTIALS</screen>
              <para>Value equals the Instance of <constant>org.ietf.jgss.GSSCredential</constant>.
        </para>
            </entry>
          </row>
          <row>
            <entry>Descriptor setting</entry>
            <entry><para>The credential can be specified either as: a) the path to a proxy file, or b) the path to a certificate and key file.</para> <para>Example for option (a):
        <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;
... 
 &lt;proxy-file value=&quot;proxyFile&quot;/&gt; 
...
&lt;/securityConfig&gt;</screen>
              </para><para>Example for option (b):
        <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;
... 
 &lt;credential&gt;  
  &lt;key-file value=&quot;keyFile&quot;/&gt;  
  &lt;cert-file value=&quot;certFile&quot;/&gt; 
 &lt;/credential&gt; 
...
&lt;/securityConfig&gt;</screen>
</para></entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2" align="center" id="Delegation">Delegation</entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2">Sets the GSI delegation mode. <emphasis> Used for GSI Secure Conversation only.</emphasis> If limited or full delegation is chosen, then some form of client side authorization needs to be done (i.e client side authorization cannot be set to none).</entry>
          </row>
          <row>
            <entry>Stubs setting</entry>
            <entry>
              <para>Property: </para>
              <screen>org.globus.axis.gsi.GSIConstants.GSI_MODE </screen>
              <para>Value equals one of following:        </para>
              <orderedlist>
                <listitem>
                  <simpara><constant>GSIConstants.GSI_MODE_NO_DELEG</constant>: No delegation is performed.</simpara>
                </listitem>
                <listitem>
                  <simpara><constant>GSIConstants.GSI_MODE_LIMITED_DELEG</constant>: Limited delegation is performed</simpara>
                </listitem>
                <listitem>
                  <simpara><constant>GSIConstants.GSI_MODE_FULL_DELEG</constant>: Full delegation is performed.</simpara>
                </listitem>
              </orderedlist>
            </entry>
          </row>
          <row>
            <entry>Descriptor setting</entry>
            <entry>
              <para>Delegation can be configured
      using the element <emphasis>&lt;delegation value=&quot;value&quot;/&gt;</emphasis>. It needs to be a subelement of
      <emphasis>&lt;GSISecureConveration&gt;</emphasis>. Currently 
          the following values are supported:</para>
              <orderedlist>
                <listitem>
                  <simpara><constant>none</constant>: No delegation is performed.</simpara>
                </listitem>
                <listitem>
                  <simpara><constant>limited</constant>: Limited delegation is performed.</simpara>
                </listitem>
                <listitem>
                  <simpara><constant>full</constant>: Full delegation is performed.</simpara>
                </listitem>
              </orderedlist>
              <para> Example:</para>
              <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;   
...
 &lt;GSISecureConversation&gt;    
  &lt;integrity/&gt;    
  &lt;delegation value=&quot;limited&quot;/&gt;   
  ...
 &lt;/GSISecureConversation&gt;    
...  
&lt;/securityConfig&gt;</screen>
              <para><emphasis>Note:</emphasis> By default, if nothing is specified, no delegation is performed.</para>
            </entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2" align="center" id="anonymousAuthentication">Anonymous authentication</entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2">Enables anonymous authentication. <emphasis> This option only applies to GSI Secure Conversation and GSI Transport.</emphasis></entry>
          </row>
          <row>
            <entry>Stubs setting</entry>
            <entry namest="c1" nameend="c2">
              <para>Property: </para>
              <screen>org.globus.wsrf.security.Constants.GSI_ANONYMOUS </screen>
              <para>Value equals one of following:</para>
              <orderedlist>
                <listitem>
                  <simpara> Boolean.FALSE: Anonymous authentication is disabled.</simpara>
                </listitem>
                <listitem>
                  <simpara> Boolean.TRUE: Anonymous authentication is enabled.</simpara>
                </listitem>
              </orderedlist>
            </entry>
          </row>
          <row>
            <entry>Descriptor setting</entry>
            <entry>
              <para>Anonymous authentication can be configured
          as follows:</para>
              <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;  
... 
 &lt;GSISecureConversation&gt;    
  &lt;integrity/&gt;    
  &lt;anonymous/&gt;    
  ...
 &lt;/GSISecureConversation&gt;   
... 
&lt;/securityConfig&gt;</screen>
            </entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2" align="center" id="peerCredentials">Peer credentials</entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2">Sets the credential that is used to encrypt the message (typically, the recipient&apos;s <glossterm linkend="pub-key">public key</glossterm>).<emphasis> Used for GSI Secure Message only.</emphasis></entry>
          </row>
          <row>
            <entry>Stubs setting</entry>
            <entry>
              <para>Property: </para>
              <screen>org.globus.wsrf.impl.security.authentication.Constants.PEER_SUBJECT        </screen>
              <para>Value equals the instance of <constant>javax.security.auth.Subject</constant>.
        </para>
              <para> The credential object needs to be wrapped in <constant>org.globus.wsrf.impl.security.authentication.encryption</constant> and
          added to the set of public credentials of the <constant>Subject</constant> object.</para>
              <para> For example, if <constant>publicKeyFilename</constant> was the file that had
          the recipient&apos;s public key:</para>
              <screen>Subject subject = new Subject();
X509Certificate serverCert = CertUtil.loadCertificate(publicKeyFilename);
EncryptionCredentials encryptionCreds = new EncryptionCredentials(
          new X509Certificate[] { serverCert });
subject.getPublicCredentials().add(encryptionCreds);
stub._setProperty(Constants.PEER_SUBJECT, subject);</screen>
            </entry>
          </row>
          <row>
            <entry>Descriptor setting</entry>
            <entry>
              <para>Peer credential file name can be configured
          as follows:</para>
              <screen>&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;
...
 &lt;GSISecureMessage&gt;
  &lt;integrity/&gt;    
  &lt;peer-credentials value=&quot;fileName&quot;/&gt;   
  ...
 &lt;/GSISecureMessage&gt;
... 
&lt;/securityConfig&gt;</screen>
              <para> The <emphasis>fileName</emphasis> should be the path to the credential file.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
</para>
</section>
