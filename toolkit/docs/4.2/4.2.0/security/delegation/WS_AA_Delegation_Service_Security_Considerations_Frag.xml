<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="delegation-security-considerations"><title>Delegation Service Security Considerations</title>
<section id="delegation-security-considerations-keyPairReuse">
  <title>Key Pair Reuse</title>
  <para>The current design re-uses the keys associated with the delegation
    service for each of the <glossterm baseform="proxy certificate">proxy certificates</glossterm> delegated to it. During
    a security review it was pointed out that while this was fine from
    a cryptographic standpoint, compromising this single long lived
    key pair may significantly extend the time for which a single
    intrusion (presuming an exploitable security flaw making the
    intrusion possible) is effective. </para>
  <para>This can be remedied by either frequently regenerating the key pair used by the delegation service, which can be accomplished with a simple cron job, or by generating a new key pair for each new delegation. The later of these approaches requires changes to the design and may be adopted in future versions of the toolkit. For the time being we recommend the former approach should this issue concern you.</para>
</section>
<section id="delegation-security-considerations-authzServer">
  <title>Authorizing Server prior to delegation</title>
  <para>The delegation client that is distributed with the toolkit allows for delegation of credentials even when no authorization of the server is done. Also, when using secure message authentication the authorization of the server is done after the completion of the operation. These two scenarios could lead to the delegation of credentials to  a malicious server.</para>
  <para>To prevent this  users should use secure <glossterm baseform="transport-level security">transport</glossterm> (HTTPS) or GSI secure conversation  and appropriate client side authorization.</para>
</section>
</section>