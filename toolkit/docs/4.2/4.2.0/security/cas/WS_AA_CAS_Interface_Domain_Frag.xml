<?xml version='1.0' encoding='UTF-8'?>
<para>Listed below are some helper methods in the client package that
maybe used for writing clients for the CAS service. Refer to code
and/or Java Docs for more information.</para>
<itemizedlist>
  <listitem>
    <para>When getting a handle for the CAS service port type, use
 the org.globus.cas.impl.client.CasClientSetup class.
</para>
    <para>Code:
<itemizedlist>
        <listitem>
          <para>To get a handle to a CAS service with a instance URL,
<replaceable>instanceURL</replaceable> and identity <replaceable>serviceIdentity</replaceable>, 

<screen>CasClientSetup clientSetup = new CasClientSetup();
CommunityAuthorizationServicePortType casPort = 
    clientSetup.getCASPort(instanceURL, serverIdentity);</screen>
</para>
        </listitem>
        <listitem>
          <para>To get a handle to CAS service with a instance URL,
<replaceable>instanceURL</replaceable> and use host authorization, 
<screen>CasClientSetup clientSetup = new CasClientSetup();
CommunityAuthorizationServicePortType casPort = 
    clientSetup.getCASPort(instanceURL);</screen>
    </para>
        </listitem>
      </itemizedlist>
</para>
  </listitem>
  <listitem>
    <para>When generating a proxy with embedded CAS assertions 
the API in the class
<constant>org.globus.cas.impl.client.CasProxyHelper</constant> can be used. To pass in relevant
parameters, the class <constant>org.globus.cas.impl.client.ClientParams</constant>
is used. The datatype
<constant>org.globus.cas.impl.client.ResourceActionsMap</constant> is used to
represent the resource/actions mapping for which assertions are
requested on.</para>
    <para>Listed below are steps to use the
API. <constant>org.globus.cas.impl.client.CasProxyInit</constant> has sample
code that generates a proxy embedded with CAS assertions.</para>
    <para>Code:
<orderedlist>
        <listitem>
          <para>The ClientParams class is used to construct the parameter. If the
default constructor is used and none of the values are set then the requested
assertion lifetime is set to 24 hours, the default proxy file is used and the
proxy  containing the embedded assertions is named with a &quot;.cas&quot;  extension at
the end of proxy file.

<screen>ClientParams clientParams = new ClientParams();</screen></para>
        </listitem>
        <listitem>
          <para>Sets assertion lifetime. If not set, 24 hours is used.
<screen>clientParams.setAssertionLifetime(lifetime);</screen></para>
        </listitem>
        <listitem>
          <para>Sets file name of the proxy to use. If not set then the default credential is used.
<screen>clientParams.setProxyFileName(proxyFilename);</screen></para>
        </listitem>
        <listitem>
          <para>Sets file name  that the proxy with CAS assertions  will be written
to. If not set, original proxy file name is appended with a tag.

<screen>clientParams.setCasProxyFileName(casProxyFilename);</screen></para>
        </listitem>
        <listitem>
          <para>Sets  the extension to append to the original proxy filename. If not set, the
 extension &quot;.cas&quot; is used. The  extension is only used if a filename for CAS proxy is not set.
<screen>clientParams.setCasProxyTag(tag);</screen></para>
        </listitem>
        <listitem>
          <para>Sets the resource/actions for which assertion is requested on. It
uses an array of data type <emphasis>ResourceActionsMap</emphasis> (explained below)

<screen>clientParams.setResourceActionsMap(resActions);</screen></para>
        </listitem>
        <listitem>
          <para>The <constant>ResouceActionsMap</constant> datatype is used to represent the
resource and the actions on the resource for which the permissions are
required. It  uses a String to represent the resource and a vector of strings
to represent the actions.
</para>
          <para>The resource should be of the form,
&quot;<replaceable>objectNamespace</replaceable>|<replaceable>objectName</replaceable>&quot;. The action
should be of the form, &quot;<replaceable>serviceType actionName</replaceable>&quot;
</para>
        </listitem>
        <listitem>
          <para>Instance of Helper class:
<screen>CasProxyHelper casProxyHelper = new CasProxyHelper(instanceURL, serverIdentity);</screen></para>
          <para>Where: 
<itemizedlist>
              <listitem>
                <simpara><replaceable>instanceURL</replaceable> is the URL used to contact CAS service.</simpara>
              </listitem>
              <listitem>
                <simpara><replaceable>serverIdentity</replaceable> is the expected identity of the server. If null, host authorization is used.</simpara>
              </listitem>
            </itemizedlist></para>
        </listitem>
        <listitem>
          <para>Generating proxy with CAS assertions
<screen>String casProxyFilename = casProxyHelper.getCasProxy(clientParams);</screen></para>
          <para>This methods contacts the CAS service, retrieves assertions, embedds assertions in
 a proxy credential and returns the path to the proxy file.
</para>
        </listitem>
      </orderedlist>
</para>
  </listitem>
</itemizedlist>
