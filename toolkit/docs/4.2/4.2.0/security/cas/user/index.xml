<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[

<!ENTITY % xinclude SYSTEM "../../../xinclude.mod" >
%xinclude;

]>
<book id="casUser">
<title>GT <replaceable role="entity">version</replaceable> CAS User&apos;s Guide</title>
<titleabbrev>User&apos;s Guide</titleabbrev>
<bookinfo id="cas-user-introduction">
<abstract>  <title>Introduction</title>
  <para>The CAS User's Guide provides general end user-oriented information.</para>
  <para>Building on the Globus ToolkitÂ® Grid Security Infrastructure (GSI),
    CAS allows resource providers to specify course-grained access control policies
    in terms of communities as a whole, delegating fine-grained access control
    policy management to the community itself. Resource providers maintain ultimate
    authority over their resources but are spared day-to-day policy administration
    tasks (e.g. adding and deleting users, modifying user privileges). </para>
</abstract>
</bookinfo>

<chapter id="cas-user-usagescenarios">
<title>Using CAS</title>

  <section id="cas-user-how-it-works">
    <title>How it works </title>
    <orderedlist>
      <listitem>
        <simpara>A CAS server is initiated for a community: a community representative acquires a GSI credential to represent that community as a whole, and then runs a CAS server using that community identity. </simpara>
      </listitem>
      <listitem>
        <simpara>Resource providers grant privileges to the community. Each resource provider verifies that the holder of the community credential represents that community and that the community&apos;s policies are compatible with the resource provider&apos;s own policies. Once a trust relationship has been established, the resource provider then grants rights to the community identity, using normal local mechanisms (e.g. grid map files and disk quotas, file system permissions, etc).</simpara>
      </listitem>
      <listitem>
        <simpara>Community representatives use the CAS to manage the community&apos;s trust relationships (e.g., to enroll users and resource providers into the community according to the community&apos;s standards) and grant fine-grained access control to resources. The CAS server is also used to manage its own access control policies; for example, community members who have the appropriate privileges may authorize additional community members to manage groups, grant permissions on some or all of the community&apos;s resources, etc. </simpara>
      </listitem>
      <listitem>
        <simpara>When a user wants to access resources served by the CAS, that user makes a request to the CAS server. If the CAS server&apos;s database indicates that the user has the appropriate privileges, the CAS issues the user a GSI restricted <glossterm baseform="proxy credentials">proxy credential</glossterm> with an embedded policy giving the user the right to perform the requested actions. </simpara>
      </listitem>
      <listitem>
        <simpara>The user then uses the credentials from the CAS to connect to the resource with any normal Globus tool (e.g. GridFTP). The resource then applies its local policy to determine the amount of access granted to the community, and further restricts that access based on the policy in the CAS credentials, This serves to limit the user&apos;s privileges to the intersection of those granted by the CAS to the user and those granted by the resource provider to the community. </simpara>
      </listitem>
    </orderedlist></section>
<section id="cas-user-basicprocedure">
  <title>Basic procedure for using CAS</title>
  <para>A typical CAS user will use only two CAS-specific commands: <command>cas-proxy-init</command>,
    which contacts a CAS server and obtains a credential, and <command>cas-wrap</command>,
    which wraps a grid-enabled client program, causing that client program to use
    the credential that was previously generated using <command>cas-proxy-init</command>. For
    example, a day in the life of a CAS user might look something like this: </para>
  <orderedlist>
    <listitem>
      <para>In the morning, the user runs:
<screen>% grid-proxy-init
% cas-proxy-init -t <replaceable>tag</replaceable></screen></para>
      <para>The first line generates a Globus proxy credential; the second uses that
        credential to contact the CAS server and retrieve a CAS credential that includes
        all the permissions granted to the user by the community. The <replaceable>tag</replaceable> argument
        can be any string and is used to assign a name for that credential (<command>cas-wrap</command> uses
        this name to locate the credential). </para>
    </listitem>
    <listitem>
      <para>Several times throughout the day, the user runs commands that look like:
        <screen>% cas-wrap -t <replaceable>tag</replaceable> <command>grid-enabled-program</command> <option>args</option></screen></para>
      <para>This runs the program <command>grid-enabled-program</command> with arguments <option>args</option>,
        using the CAS credential that had been created by and assigned the name <replaceable>tag</replaceable>.
      </para>
      <para>For example: 
        <screen>% cas-wrap -t my-community gsincftp myhost.edu</screen></para>
      <para>looks for a CAS credential with the name &quot;my-community&quot; (e.g., a credential
        that had been created using &quot;cas-proxy-init -t my-community&quot;) and then runs
        the command &quot;gsincftp myhost.edu&quot;, causing the gsincftp program to use that
        CAS credential to authenticate. </para>
    </listitem>
    <listitem>
      <para>At the end of the day, the user runs:
        <screen>% cas-wrap -t <emphasis>tag</emphasis> grid-proxy-destroy</screen> </para>
      <para> to destroy the CAS credential, and: 
        <screen>% grid-proxy-destroy</screen></para>
      <para>to destroy the Globus proxy credential.  Or the user might simply let both
        credentials expire. </para>
    </listitem>
  </orderedlist></section>

<section id="cas-user-authzServiceInterface">
  <title>Using Authorization Service Interface</title>
  <para>The user may access resources that are configured to contact a CAS server using the OGSA-AuthZ service interface. This interface allows the resource to pull down the user's rights from the CAS service and enforce the rights. Refer to <olink targetdoc="casDeveloper" targetptr="cas-developer-authzService"/> for more details.</para>
</section>

</chapter>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../WS_AA_CAS_Interface_Admin_Commandline_Frag.xml"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../WS_AA_CAS_Interface_Query_Commandline_Frag.xml"/>
<!-- n/a 
<chapter id="cas-user-gui">
  <title>Graphical user interfaces</title>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../WS_AA_CAS_Interface_GUI_Frag.xml"/>
</chapter>
-->

  <chapter id="cas-user-troubleshooting">
    <title>Troubleshooting</title>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
  href="../../Credential_Troubleshooting_Frag.xml"/>
    <xi:include href="../../../common/javawscore/Java_WS_Core_Logging_Frag.xml"
        xmlns:xi="http://www.w3.org/2001/XInclude" />
</chapter>
<chapter id="cas-user-licensing">
  <title>Information Regarding CAS Licensing</title>

  <para>This version of CAS uses the OASIS Security Assertion Markup
Language (SAML) standard. Users should be aware that RSA Security has
identified four patents it believes could be relevant to implementing
certain operational modes of the SAML specifications.  Previously, RSA
required that users would execute a royalty-free reciprocal license to
the RSA patents, and the Globus Alliance had established a license
agreement with RSA covering usage of SAML in the Globus
Toolkit.</para>

<para>On May 11, 2006, however, RSA issued the following statement:
<screen>
RSA Intellectual Property Rights Statement

    In previous correspondence dated December 6, 2004, January 20, 2003
    and April 22, 2002, RSA Security Inc. ("RSA") disclosed that it is
    the assignee of U.S. Patent Nos. 6,085,320 and 6,189,098, both
    entitled "Client/Server Protocol for Proving Authenticity" and U.S.
    Patent Nos. 5,922,074 and 6,249,873, both entitled "Method of and
    Apparatus for Providing Secure Distributed Directory Services and
    Public Key Infrastructure" (collectively, the "RSA Patents"). At
    that time, RSA believed that these four patents could be relevant to
    practicing certain operational modes of the OASIS Security Assertion
    Markup Language ("SAML") specifications. In the correspondence, RSA
    offered to grant non-exclusive, royalty-free licenses on a
    non-discriminatory basis for the RSA Patents.

    In the interest of encouraging deployment of SAML-based
    technologies, RSA hereby covenants, free of any royalty, that it
    will not assert any claims in the RSA Patents which may be essential
    to the SAML standard v1.0, 1.1 and 2.0 (hereinafter "NECESSARY
    CLAIMS") against any other entity with respect to any implementation
    conforming to the SAML standard v1.0, 1.1 and/or 2.0. This covenant
    shall become null and void with respect to any entity that asserts,
    either directly or indirectly (e.g., through an affiliate), any
    patent claims or threatens or initiates any patent infringement suit
    against RSA and/or its subsidiaries or affiliates. The revocation of
    the covenant shall extend to all prior use by the entity asserting
    the claim.

    RSA will continue to honor existing license agreements for the RSA
    Patents and will continue to offer as an option to interested third
    parties the same licensing arrangement described in our previous
    correspondence. (The license agreement, along with instructions for
    obtaining and completing the license, are available on RSA's website
    www.rsasecurity.com)
</screen>

Please refer to <ulink url="http://xml.coverpages.org/RSA-SAML-NonAssert.html#statement">published statement</ulink>

</para>
 
<important>
<para>
Users should always check with their legal counsel about the interpretation of the statement, but the statement may indicate that for most SAML-users no execution of any license will be required.
</para>
</important>

</chapter>
  <glossary role="auto" id="glossary-casUser">
    <remark>some terms not in the docs but wanted in glossary: 
      <glossterm>scheduler</glossterm>
    </remark>
    <glossdiv><title>A</title>
      <glossentry>
        <glossterm>Dummy term</glossterm>
        <glossdef>
          <para>This is a dummy entry for the automatic glossary database. Do not edit.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
  </glossary>
</book>