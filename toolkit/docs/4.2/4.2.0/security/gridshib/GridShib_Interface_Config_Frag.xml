<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

  <chapter id="gridshib-configuring" xreflabel="Configuring GridShib">
    <title>Configuring </title>
    <para>
      GridShib provides the <varname>GridShibPDP</varname> interceptor, and configuring GridShib involves placing this PDP into the authorization interceptor chain of the container or service you wish to protect. For details of configuring security interceptors, see the <olink targetdoc="wsaajava" targetptr="wsaajava-secdesc">Java WS Security Descriptor Framework documentation</olink>>, specifically the <olink targetdoc="wsaajava" targetptr="wsaajava-secdesc-configAuthz">Configuring authorization mechanisms section</olink>.
    </para>

    <section id="gridshib-configuring-server-config">
      <title>GridShib Configuration Options</title>
      <para>
	GridShib supports the following configuration options. These should appear as <varname>parameter</varname> elements for the <varname>interceptor</varname> element as shown in the following example. The Interceptor column shows what specific low-level interceptors utilize each configuration option; if you are using the high-level GridShibPDP option, you may safely ignore this column.
      </para>
      <para>
	<informaltable>
	  <tgroup cols="2">
	    <thead>
	      <row>
		<entry>Variable</entry>
		<entry>Usage</entry>
		<entry>Interceptor(s)</entry>
	      </row>
	    </thead>
	    <tbody>
	      <row>
		<entry>metadataPath</entry>
		<entry>Specify the path to the <link linkend="gridshib-configuring-metadata-directory">metadata directory</link>. This directory contains any number of trusted entity mapping files.</entry>
		<entry>SAMLQueryPIPImpl, SAMLAssertionPushPIPImpl</entry>
	      </row>
	      <row>
		<entry>enableBlacklisting</entry>
		<entry>Enables <link linkend="gridshib-configuring-ip-addr-blacklisting">blacklisting</link>. Should be <literal>true</literal> or <literal>false</literal>.</entry>
		<entry>SAMLBlacklistPDPImpl</entry>
	      </row>
	      <row>
		<entry>blacklistIPAddressFile</entry>
		<entry>Path to file containing <link linkend="gridshib-configuring-ip-addr-blacklisting">blacklisted IP addresses</link>. (XXX Add link)</entry>
		<entry>SAMLBlacklistPDPImpl</entry>
	      </row>
	      <row>
		<entry>consultDefaultGridmap</entry>
		<entry>Setting this to <literal>true</literal> directs GridShib to use the default grid-mapfile for identity based authorization. If the caller's DN is in this file, GridShib stops processing and returns a PERMIT decision. No attributes are collected, which saves time. If the grid-mapfile can not be read or found, the authorization module will log the error and continue.</entry>
		<entry>XXX</entry>
	      </row>
	      <row>
		<entry>gridshibAuthzPolicyFile</entry>
		<entry>Path to <link linkend="gridshib-configuring-authz-policy">authorization policy file</link>.</entry>
		<entry>GridShibPullPDPImpl, SAMLAttributePDPImpl, SAMLMapPIPImpl</entry>
	       </row>
	       <row>
		 <entry>samlMapPolicy</entry>
		 <entry>This lists the path to a username mappings file used for attribute based authorization. If this is not configured, the SAMLMapPIP will use the file in the shibAuthzAttrFile configuration. This configuration will let you keep access policy and username mappings separate if you so desire. It also allows the SAMLMapPIP to be used on its in conjunction with other PDP implementations.
		 * See the shibAuthzMapFile configuration example.
		 * For more information about username mapping, see: Username mappings
		 (???)</entry>
		 <entry>XXX</entry>
	       </row>
	       <row>
		 <entry>enableAttributeQuery</entry>
		 <entry>This option enables attribute query or pull mode. Should be <literal>true</literal> or <literal>false</literal>.</entry>
		 <entry>SAMLQueryPIPImpl</entry>
	       </row>
	       <row>
		 <entry>requireAttributeMapping</entry>
		 <entry>This triggers GridShib to require at least one username mapping for a successful authorization. It is <literal>False</literal> by default. (XXX link to Username mappings)</entry>
		 <entry>GridShibPullPDPImpl, GridShibPushPullPDPImpl</entry>
	       </row>
	       <row>
		 <entry>cacheAttributes</entry>
		 <entry>A value of <literal>true</literal> directs the PDP to cache received attributes and consult these attributes on subsequent operation invocations by the same client. <link linkend="gridshib-configuring-attribute-caching"/></entry>
		 <entry>SAMLQueryPIPImpl, SAMLMapPIPImpl, GridShibPullPDPImpl</entry>
	       </row>
	       <row>
		 <entry>defaultIDPEntityID</entry>
		 <entry>This value is used for two (related) purposes:
		 <orderedlist>
		   <listitem><para>
		     It is included in the attribute query as the value of the NameQualifier attribute of the <literal>NameIdentifer</literal> element of the SAML <literal>AttributeQuery</literal> element.
		   </para></listitem>
		   <listitem><para>
		     If the response returned from the Shib AA contains an assertion, the issuer attribute of the SAML <literal>Assertion</literal> element must be equal to this value in order for the assertion to be considered valid.
		     </para></listitem>
		 </orderedlist>
		 XXX See the IdPproviderId configuration example.
		 <para>Note: This configuration can not be used at the same time as the metadata-dir configuration. XXX See conflict-handling-note.</para>>
	       </entry>
		 <entry>SAMLQueryPIPImpl</entry>
	       </row>
	       <row>
		 <entry>trustedSAMLAuthoritiesFile</entry>
		 <entry>XXX (note: this config parameter will be removed in a later version of GridShib for GT)</entry>
		 <entry>(AttributeAcceptancePIPImpl)</entry>
	       </row>
	       <row>
		 <entry>gridshibAuthzPolicyFile</entry>
		 <entry>XXX</entry>
		 <entry>GridShibPullPDPImpl, SAMLAttributePDPImpl, SAMLMapPIPImpl</entry>
	       </row>
	       <row>
		 <entry>gridshibAuthzMapFile</entry>
		 <entry>XXX</entry>
		 <entry>SAMLMapPIPImpl</entry>
	       </row>
	       <row>
		 <entry>gridshibPDPPolicy</entry>
		 <entry>XXX</entry>
		 <entry>GridShibPullPDPImpl, SAMLAttributePDPImpl, SAMLMapPIPImpl</entry>
	       </row>
	       <row>
		 <entry>defaultGridmap</entry>
		 <entry>XXX</entry>
		 <entry>BasePDP, GridShibPushPDPImpl, GridShibPullPDPImpl</entry>
	       </row>
	       <row>
		 <entry>respectMDAttributes</entry>
		 <entry>XXX</entry>
		 <entry>GridShibPullPDPImpl, GridShibPushPullPDPImpl</entry>
	       </row>
	       <row>
		 <entry>gridSPEntityID</entry>
		 <entry>XXX</entry>
		 <entry>SAMLQueryPIPImpl</entry>
	       </row>
	     </tbody>
	   </tgroup>
	 </informaltable>
       </para>
       <para>
	 <example>
	   <title>Example GridShib Container Configuration (XXX This needs to be verified)</title>
	   <screen>
<![CDATA[
<containerSecurityConfig xmlns="http://www.globus.org/security/descriptor/container" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://www.globus.org/security/descriptor 
  name_value_type.xsd"
  xmlns:param="http://www.globus.org/security/descriptor">
  <authzChain>
    <pdps>
      <interceptor name="gridshib:org.globus.gridshib.GridShibPDP">
	<parameter>
	  <param:nameValueParam>
	    <param:parameter name="metadataPath" 
			     value="/etc/grid-security/metadata"/>
	  </param:nameValueParam>
	</parameter>
	<parameter>
	  <param:nameValueParam>
	    <param:parameter name="enableBlacklisting"
			     value="true"/>
	  </param:nameValueParam>
	</parameter>
	<parameter>
	  <param:nameValueParam>
	    <param:parameter name="blacklistIPAddressesFile"
			     value="/etc/grid-security/blacklists/blacklist-ip-addresses.txt"/>
	  </param:nameValueParam>
	</parameter>
	<parameter>
	  <param:nameValueParam>
	    <param:parameter name="consultDefaultGridmap"
			     value="false"/>
	  </param:nameValueParam>
	</parameter>
	<parameter>
	  <param:nameValueParam>
	    <param:parameter name="gridshibAuthzPolicyFile"
			     value="/etc/grid-security/policy/core-authz-policy.xml"/>
	  </param:nameValueParam>
	</parameter>
      </interceptor>
    </pdps>
  </authzChain>
</containerSecurityConfig>
	     ]]>
	   </screen>
	 </example>
       </para>
     </section>
     <section id="gridshib-configuring-metadata-directory">
       <title>The Metadata Directory</title>
       <para>The metadata directory currently contains one or more trusted entity mapping files, which contain information about trusted attribute authorities.  Each line of this file contains an entityID followed by a DN, separated by one or more whitespace characters.  If the DN contains whitespace, it must be quoted.  (A URI must not contain whitespace characters, so it need not be quoted.) (XXX Names of files? XXX)</para>
       <para>The suggested path for this directory is <filename>/etc/grid-security/metadata/</filename>.</para>
       <para>
	 <example>
	   <title>Example Trusted Authorities Entity Map File</title>
	   <screen>
# GridShib CA:
https://test-sp.ncsa.uiuc.edu/shibboleth "CN=GridShib CA,O=Certificate Authority,DC=computer,DC=ncsa,DC=uiuc,DC=edu"

# Community Test Account:
https://gridshib.example.org/idp "CN=AAA Testbed Community User,O=National Center for Supercomputing Applications,C=US"
	   </screen>
	 </example>
       </para>
     </section>
     <section id="gridshib-configuring-authz-policy">
       <title>The Authorization Policy File</title>
       <para>(??? What does this do ???)</para>
       <para>
	 <example>
	   <title>Example Authorization Policy File</title>
	   <screen>
	     <![CDATA[
<AttributePolicy
   xmlns="http://gridshib.globus.org/namespaces/2005/08/policy"
   xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion">
   <!-- empty policy -->
</AttributePolicy>
	     ]]>
	   </screen>
	 </example>
       </para>
     </section>
     <section id="gridshib-configuring-ip-addr-blacklisting">
       <title>IP Address Blacklist File</title>
       <para>
	 The IP address blacklist file contains a list of IP addresses, one per line, which should be denied access.
       </para>
       <para>
	 <example>
	   <title>Example Blacklisted IP Address Files</title>
	   <screen>
# Blacklist of IP addresses
#
# This file contains a list of IP addresses, one per line.
111.111.111.111
	   </screen>
	 </example>
       </para>
     </section>
     <section id="gridshib-configuring-attribute-caching">
       <title>Attribute Caching</title>
       <para>
	 The PDP can optionally store received attributes from call to call, which allows many operations to be performed by the same client without the need for a remote callout to an attribute authority for each operation invocation (only the first).
       </para>
       <note><para>This feature is turned OFF by default</para></note>
       <para>
	 The attributes themselves are stored, not the authorization decision. If caching is enabled, the attributes are stored until the same expiration time as the SAML time conditions on the attribute assertion dictate.
       </para>
       <note><para>Attributes are only relevant within the scope of the PDP. For example, a PDP instance "P1" authorizing invocations on a service "S1" would not see any attributes stored by a PDP instance "P2" protecting service "S2".</para></note>
       <para>
	 The steps of authorization algorithm with caching can be viewed here. XXX
       </para>
       <para>
	 To enable caching, set the relevant configuration parameter to "true": cacheAttr
       </para>
       <para>
	 Performance
	 <itemizedlist>
	   <listitem><para>
	     We compared caching performance to non-caching performance of the GridShib authorization module with a localhost IdP using around 20 invocations with each type (it was not an exhaustive or automated study).
	   </para></listitem>
	   <listitem><para>
	     An authorization decision including SAML attribute exchange to the localhost IdP averaged 110ms. An authorization decision based on a cached attribute averaged 7-10ms. For reference, if a decision is based on DN only (bypassing attribute processing altogether), the average is close to 4ms.
	   </para></listitem>
	   <listitem><para>
	     Statistical rigor aside, this shows that using attribute caching in subsequent operation invocations results in an order of magnitude time savings over the first operation invocation (and this comparison is not even including any additional latency in the first operation that would be incurred by using a non-localhost IdP).
	     </para></listitem>
	 </itemizedlist>
       </para>
       <para>
	 Caveat: in a forthcoming version, when multiple Attribute Authorities in the SAML2 metadata may be queried based on an SAML authentication assertion in the caller's proxy certificate, the contacted Attribute Authority must be considered as part of the cache lookup key. We have not fully considered our strategy on combining attributes in the cache from an AA formerly used by the caller when the same caller invokes the service pointing to a new AA (probably a rare event anyhow). Policy on this will likely be configurable by the administrator. 
       </para>
     </section>
  </chapter>
