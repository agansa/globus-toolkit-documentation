<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="security-credential-troubleshooting"><title> Credential Troubleshooting</title>
<section id="security-credential-errors"><title>Credential Errors</title>
  <para>The following are some common problems that may cause clients or servers
to report that credentials are invalid:
  </para>
  
  <section><title>Your proxy credential may have expired</title>
    <para>Use <command>grid-proxy-info</command> to check whether the <glossterm baseform="proxy credentials">proxy credential</glossterm> has actually
expired.  If it has, generate a new proxy with <command>grid-proxy-init</command>.
</para>
  </section>
  
  <section><title>The system clock on either the local or remote system is wrong</title>
    <para>This may cause the server or client to conclude that a credential has
expired.
</para>
  </section>
  
  <section><title>Your <glossterm baseform="user certificate">end-user certificate</glossterm> may have expired</title>
    <para>Use <command>grid-cert-info</command> to check your certificate&apos;s expiration
date.  If it has expired, follow your CA&apos;s procedures to get a new one.</para>
  </section>
  
  <section><title>The permissions may be wrong on your proxy file</title>
    <para>If the permissions on your proxy file are too lax (for example, if others
can read your proxy file), Globus Toolkit clients will not use that file
to authenticate.  You can &quot;fix&quot; this problem by changing the permissions
on the file or by destroying it (with <command>grid-proxy-destroy</command>) and creating a new one (with <command>grid-proxy-init</command>).  However, it is still
possible that someone else has made a copy of that file during the time
that the permissions were wrong.  In that case, they will be able to
impersonate you until the proxy file expires or your permissions or
end-user certificate are revoked, whichever happens first.</para>
  </section>
  
  <section><title>The permissions may be wrong on your private key file</title>
    <para>If the permissions on your end user certificate <glossterm>private key</glossterm> file are too lax
(for example, if others can read the file), <command>grid-proxy-init</command> will
      refuse to create a <glossterm>proxy certificate</glossterm>.  You can &quot;fix&quot; this by changing the
permissions on the private key file; however, you will still have a much
more serious problem:  it&apos;s possible that someone has made a copy of
your private key file.  Although this file is encrypted, it is possible
that someone will be able to decrypt the private key, at which point they
will be able to impersonate you as long as your end user certificate is valid.
You should contact your CA to have your end-user certificate revoked and
get a new one.</para>
  </section>
  
  <section><title>The remote system may not trust your CA</title>
    <para>Verify that the remote system is configured to trust the CA that issued
      your end-entity certificate.  See the <olink targetdoc="gtadmin" /> for
details.</para>
  </section>
  
  <section><title>You may not trust the remote system&apos;s CA</title>
    <para>Verify that your system is configured to trust the remote CA (or that
      your environment is set up to trust the remote CA).  See the <olink targetdoc="gtadmin" /> for details.
</para>
  </section>
  
  <section><title>There may be something wrong with the remote service&apos;s credentials</title>
    <para>It is sometimes difficult to distinguish between errors reported by the
remote service regarding your credentials and errors reported by the
client interface regarding the remote service&apos;s credentials.  If you
can&apos;t find anything wrong with your credentials, check for the same
conditions (or ask a remote administrator to do so) on the remote system.
</para>
  </section>
  
</section>

<section id="security-credential-troubleshooting-tools"> <title>Some tools to validate certificate setup </title>
  
  <section><title>Check that the user certificate is valid</title>

<screen>openssl verify -CApath /etc/grid-security/certificates
  -purpose sslclient ~/.globus/usercert.pem</screen>
  </section>

<section><title>Connect to the server using s_clien</title>

<screen>openssl s_client -ssl3 -cert ~/.globus/usercert.pem -key 
  ~/.globus/userkey.pem -CApath /etc/grid-security/certificates 
  -connect &lt;host:port&gt;</screen> 

<para>Here &lt;host:port&gt; denotes the server and port you connect to.</para>

<para>If it prints an error and puts you back at the command prompt,
then it typically means that the <emphasis>server</emphasis> has closed the connection,
i.e. that the server was not happy with the client's certificate and
verification.  Check the SSL log on the server.  </para>

<para>If the command "hangs" then it has actually opened a telnet
style (but secure) socket, and you can "talk" to the server.</para>

<para>You should be able to scroll up and see the subject names of the server's 
  verification chain:</para>
  <screen>
depth=2 /DC=net/DC=ES/O=ESnet/OU=Certificate Authorities/CN=ESnet Root CA 1
verify return:1
depth=1 /DC=org/DC=DOEGrids/OU=Certificate Authorities/CN=DOEGrids CA 1
verify return:1
depth=0 /DC=org/DC=doegrids/OU=Services/CN=wiggum.mcs.anl.gov
verify return:1
    </screen>
<para>In this case there were no errors.  Errors would give you an extra line next to 
the subject name of the certificate that caused the error</para>
</section>

<section><title>Check that the server certificate is valid</title>
  <para> Requires root login on server. </para>
  <screen>
    openssl verify -CApath /etc/grid-security/certificates -purpose sslserver 
     /etc/grid-security/hostcert.pem</screen>
</section>
  
</section>
</section>