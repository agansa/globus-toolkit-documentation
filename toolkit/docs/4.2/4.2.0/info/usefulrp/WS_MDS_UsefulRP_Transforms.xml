<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
  
<chapter id="usefulrp-transforms">
    <title>Transforms</title>
    <para>[FIXME list and fully describe _each_ transform for rppprovider]</para>
    <para>Transforms allow for post processing of the XML to be stored in the Index service. </para>
    <para>[FIXME It was apparent that we'd need this step for the GLUE data, since a requirement became a
        complete re-organization of the data, based on site admin configurations. - this is
        'historical' information and not necessary for people to know now?]</para>
    <para>This [FIXME refer to it by actual name] particular transform involves parsing the GLUE XML
        document and bubbling up some elements to the SubCluster level, as well as re-organizing all
        of the Host elements into specified SubClusters. </para>
    <para>Rather than demanding that all GLUE based information providers (i.e. Hawkeye, Ganglia,
        CluMon, etc) be able to do this organization, this post processing step can handle it
        regardless of what the input GLUE data looks like. </para>
    <para>This is significant and allows site administrators to have more control than ever before
        on how to visualize their Cluster and SubClusters into meaningful groupings.</para>
    <para>Architecturally, this involved adding a step in the UsefulRP package that routed all GLUE
        data to a post-processing phase, should it be configured for use. </para>
    <para>By default, there is no post-processing that occurs for the compute element side of the
        data, however, we always post process the scheduler element data (to be consistent with the
        legacy code that converts the batch provider schema to the GLUE schema).</para>
    <para>Finally, aside from GLUE specific data and transforms, there is a transform that exists
        that can optionally post process any arbitrary XML data with an XSLT transform. This allows
        for a natural and flexible post-processing step for any RP. Again, this is disabled by
        default, but can be configured for use if desired. </para>
</chapter>
