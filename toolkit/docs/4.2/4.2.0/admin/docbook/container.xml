<chapter id="c-container">
	<title>Webservices container</title>

	<para>
		The Webservices components of the Toolkit run inside
		of a hosting environment, also known as a container.
		This chapter covers the startup and configuration of
		that container.
	</para>
	<para>
		Prerequisites to this chapter are setting up the
		<filename>containercert.pem</filename> and <filename>
			containerkey.pem</filename>, as outlined
		in the <xref linkend="s-basic-containercert"/>.
	</para>

	<section id="s-container-start">
		<title>Starting the container</title>
		<para>
			As the globus user, run:
			<screen>
<prompt>$ </prompt> <command>$<envar>GLOBUS_LOCATION</envar>/bin/globus-start-container</command>
Starting SOAP server at: https://140.221.57.104:8443/wsrf/services/ 
With the following services:
[1]: https://140.221.57.104:8443/wsrf/services/IndexFactoryService
[2]: https://140.221.57.104:8443/wsrf/services/TriggerFactoryService
[... <emphasis>more services listed</emphasis> ...]
[47]: https://140.221.57.104:8443/wsrf/services/ManagedJobFactoryService
[48]: https://140.221.57.104:8443/wsrf/services/TestServiceRequest</screen>
		</para>

		<note><para>Please make sure to have the 
			<ulink url="http://java.sun.com/products/jaas/index-10.html">JAAS</ulink>
			library installed if running with J2SE 1.3.1.
		</para>
		</note>
		<para><command>globus-start-container</command> supports the
			following options:</para>

<table>
<title>globus-start-container options</title>
<tgroup cols="2">
<tbody>
<row>
 <entry>-help</entry>
 <entry>Displays help information about the command.</entry>
</row>

<row>
 <entry>-p <replaceable>port</replaceable></entry>
 <entry>Sets the port number for the container.</entry>
</row>

<row>
 <entry>-quiet</entry>

 <entry>Does not show a list of services at startup.</entry>
</row>

<row>
 <entry>-nosec</entry>
 <entry>Starts a non secure (HTTP) container.</entry>
</row>

<row>
 <entry>-containerDesc <replaceable>file</replaceable></entry>

 <entry>Specifies a container security descriptor file.</entry>
</row>

<row>
 <entry>-profile <replaceable>name</replaceable></entry>
 <entry>Specifies a configuration profile name for the container.
	 See <xref linkend="s-container-profiles"/> for more details.</entry>
</row>
</tbody>
</tgroup>
</table>
	</section>
	<section id="s-container-servconfigure">
		<title>Service configuration overview</title>
		<para>
			Java WS Core provides per-service configuration and supports
			configuration profiles. The configuration information of a service is
			mainly encapsulated in three separate configuration files: 
		</para>

		<table>
			<title>Webservice configuration files</title>
			<tgroup cols="2">
				<thead><row>
						<entry>Filename</entry>
						<entry>Description</entry>
				</row></thead>
				<tbody>
					<row>
						<entry> <filename>server-config.wsdd</filename></entry>
						<entry>(Web Service Deployment Descriptor) - 
							contains information about the web service.</entry>
					</row>
					<row>
						<entry><filename>jndi-config.xml</filename></entry>
						<entry>(JNDI configuration file) - 
							contains information about the resource 
							management. </entry>
					</row>
					<row>
						<entry><filename>security-config.xml</filename></entry>
						<entry>(security deployment descriptor) -
						Please see WEBSERVICES AUTHENTICATION AND AUTHZ for details.
						This file is optional.</entry>
					</row>
				</tbody>
			</tgroup>
		</table>

		<para>All these configuration files are dropped into the 
			<filename>$<envar>GLOBUS_LOCATION</envar>/etc/<replaceable>service_name
			</replaceable>/</filename> directory during the deployment 
			process.
		</para>
		<para>That is the general overview of service configuration.  Specific
			service configuration will be left for later chapters.
		</para>
	</section>
	<section id="s-container-configure">
		<title>Container configuration</title>

		<para>The container itself has configuration files in
			<filename class="directory">
				$<envar>GLOBUS_LOCATION</envar>/etc/globus_wsrf_core
			</filename>.  The general syntax is
			<screen>
&lt;parameter name="<replaceable>name</replaceable>" value="<replaceable>value</replaceable>"/&gt;</screen>
		</para>

		<table>
			<title>Container configuration parameters</title>
			<tgroup cols="3">
				<thead>
					<row><entry>Name</entry>
						<entry>Value</entry>
						<entry>Description</entry>
				</row></thead>
				<tbody>
					<row>
						<entry>logicalHost</entry>
						<entry><replaceable>hostname</replaceable></entry>
						<entry>
							This parameter specifies the hostname to use instead of the default local host. 
							It is equivalent to setting the <envar>GLOBUS_HOSTNAME</envar> environment property. 
							Can be FQDN or just hostname. 

						</entry>
					</row>

					<row>
						<entry>disableDNS</entry>
						<entry><replaceable>boolean</replaceable></entry>
						<entry>
							This parameter specifies whether to perform DNS lookup on the logicalHost parameter.
							By default "false" is assumed, meaning a DNS lookup is performed.
						</entry>
					</row>

					<row>
						<entry>domainName</entry>
						<entry><replaceable>domanin name</replaceable></entry>
						<entry>
							This parameter specifies the domain name to append to the host name if the host name 
							is not qualified by a domain.
						</entry>
					</row>

					<row>
						<entry>publishHostName</entry>
						<entry><replaceable>boolean</replaceable></entry>
						<entry>
							This parameter specifies whether to publish the hostname or the ip address.
							It is only used when DNS lookups are enabled (disableDNS is false).
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>

		<para>
			Suppose your container usually published the following information:
<screen>[1]: https://140.221.36.14:8443/wsrf/services/TriggerFactoryService</screen>
</para>
<para>If you want it to publish the hostname for that IP address, you could set the following:
<screen>
&lt;parameter name="logicalHost" value="mayed.mcs.anl.gov"/&gt;
&lt;parameter name="publishHostName" value="true"/&gt;</screen>
Starting the container would then show:
<screen>[1]: https://mayed.mcs.anl.gov:8443/wsrf/services/TriggerFactoryService</screen>
</para>
	</section>
	<section id="s-container-profiles">
		<title>Configuration Profiles</title>

		<para>
			Configuration profiles allow for the same Java WS Core installation to
			have multiple configurations. That is, the same installation can be used
			to run different containers each with different configuration.  
		</para>

		<para>
			You can create a copy of the configuration files with a profile name
			prefix (like <filename><replaceable>profile.name</replaceable>-server-config.wsdd
			</filename>).
			Then you can start the container with the <command>-profile 
				<replaceable>name</replaceable></command> option, and the profile's
			configuration files will be used.
		</para>

		<note><para>
			Each configuration profile should duplicate the contents of 
			<filename>$GLOBUS_LOCATION/etc/globus_wsrf_core/server-config.wsdd</filename> and 
			<filename>$GLOBUS_LOCATION/etc/globus_wsrf_core/jndi-config.xml</filename> in order
			to make the basic functionality to work properly.
		</para></note>
	</section>
</chapter>

