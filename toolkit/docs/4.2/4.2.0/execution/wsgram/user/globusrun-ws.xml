<refentry id="globusrun-ws">
<refmeta>
<refentrytitle>globusrun-ws</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>globusrun-ws</refname>
<refpurpose>The official job submission client for WS GRAM</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
    <command>globusrun-ws -submit</command>
    <arg>-batch</arg>
    <arg>-quiet</arg>
    <arg>-no-cleanup</arg>
    <arg>-streaming</arg>
    <arg>-streaming-out <replaceable>filename</replaceable></arg>
    <arg>-streaming-err <replaceable>filename</replaceable></arg>
    <arg>-host-authz</arg>
    <arg>-self-authz</arg>
    <arg>-subject-authz <replaceable>subject name</replaceable></arg>
    <arg>-private</arg>
    <arg>-http-timeout <replaceable>milliseconds</replaceable></arg>
    <arg>-debug</arg>
    <arg>-allow-ipv6</arg>
    <arg>-passive</arg>
    <arg>-nodcau</arg>
    <group>
        <arg>-factory-epr-file <replaceable>filename</replaceable></arg>
        <group>
        <arg>-factory <replaceable>contact</replaceable></arg>
        <arg>-factory-type <replaceable>type</replaceable></arg>
        </group>
    </group>
    <group>
        <arg>-submission-id <replaceable>uuid</replaceable></arg>
        <arg>-submission-id-file <replaceable>filename</replaceable></arg>
    </group>
    <arg>-submission-id-output-file <replaceable>filename</replaceable></arg>
    <arg>-job-epr-output-file <replaceable>filename</replaceable></arg>
    <arg>-job-delegate</arg>
    <arg>-staging-delegate</arg>
    <arg>-job-credential-file <replaceable>filename</replaceable></arg>
    <arg>-staging-credential-file <replaceable>filename</replaceable></arg>
    <arg>-transfer-credential-file <replaceable>filename</replaceable></arg>
    <arg>-termination
        <group>
            <replaceable>+HH:MM</replaceable>
            <replaceable>mm/dd/yyyy HH:MM</replaceable>
        </group>
    </arg>
    <group>
        <arg>-job-description-file <replaceable>filename</replaceable></arg>
        <arg>-job-command <option>--</option> <replaceable>program arg ...</replaceable></arg>
    </group>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1 id="description"><title>Description</title>
<para>
globusrun-ws (WS GRAMclient) is a program for submitting and
managing jobs to a local or remote job host. WS GRAMprovides secure
job submission to many types of job scheduler for users who have the
right to access a job hosting resource in a Grid environment. All
WS GRAMsubmission options are supported transparently through the
embedded request document input. <computeroutput>globusrun-ws</computeroutput> offers
additional features to fetch job output files incrementally during the
run as well as to automatically delegate credentials needed for
certain optional WS GRAMfeatures. Online and batch submission modes
are supported with reattachment (recovery) for jobs whether they were
started with this client or another WS GRAMclient application.
</para>
</refsect1>

<refsect1 id="synopsis"><title>Synopsis</title>

<variablelist>

<varlistentry><term>globusrun-ws <emphasis role="bold">-submit</emphasis></term><listitem>
The -submit command submits (or <emphasis>resubmits</emphasis>) a job to a
job host in one of three output modes: batch, interactive, or
interactive-streaming.
</para>
</listitem></varlistentry>
<varlistentry><term>globusrun-ws <emphasis role="bold">-validate</emphasis></term><listitem><para>
&nbsp;&nbsp;&nbsp;&nbsp;-job-description-file <emphasis role="underline">filename</emphasis></para>
<para>
The -validate command checks the job description for syntax errors and a
subset of semantic errors without making any service requests.
</para>
</listitem></varlistentry>

<varlistentry><term>
globusrun-ws <emphasis role="bold">-monitor</emphasis></term><listitem>
<literallayout>&nbsp;&nbsp;&nbsp;&nbsp;-job-epr-file <emphasis role="underline">filename</emphasis>
&nbsp;&nbsp;&nbsp;&nbsp;[-quiet] [-no-cleanup]
&nbsp;&nbsp;&nbsp;&nbsp;[-streaming [-streaming-out <emphasis role="underline">filename</emphasis>] [-streaming-err <emphasis role="underline">filename</emphasis>]]
&nbsp;&nbsp;&nbsp;&nbsp;[-host-authz | -self-authz | -subject-authz <emphasis role="underline">subject name</emphasis>]
&nbsp;&nbsp;&nbsp;&nbsp;[-private] [-http-timeout <emphasis role="underline">milliseconds</emphasis>] [-debug]
&nbsp;&nbsp;&nbsp;&nbsp;[-allow-ipv6] [-passive] [-nodcau]
</literallayout>
<para>
The -monitor command attaches to an existing job in interactive or
interactive-streaming output modes.
</para>
</listitem></varlistentry>

<varlistentry><term>
globusrun-ws <emphasis role="bold">-status</emphasis></term><listitem>
<literallayout>&nbsp;&nbsp;&nbsp;&nbsp;-job-epr-file <emphasis role="underline">filename</emphasis>
&nbsp;&nbsp;&nbsp;&nbsp;[-host-authz | -self-authz | -subject-authz <emphasis role="underline">subject name</emphasis>]
&nbsp;&nbsp;&nbsp;&nbsp;[-private] [-http-timeout <emphasis role="underline">milliseconds</emphasis>] [-debug]
</literallayout>
<para>
The -status command reports the current state of the job and exits.
</para>
</listitem></varlistentry>

<varlistentry><term>
globusrun-ws <emphasis role="bold">-kill</emphasis></term><listitem>
<literallayout>&nbsp;&nbsp;&nbsp;&nbsp;-job-epr-file <emphasis role="underline">filename</emphasis>
&nbsp;&nbsp;&nbsp;&nbsp;[-host-authz | -self-authz | -subject-authz <emphasis role="underline">subject name</emphasis>]
&nbsp;&nbsp;&nbsp;&nbsp;[-private] [-http-timeout <emphasis role="underline">milliseconds</emphasis>] [-debug]
</literallayout>
<para>
The -kill command requests the immediate cancellation of the job and exits.
</para>
</listitem></varlistentry>

<varlistentry><term>globusrun-ws <emphasis role="bold">-help</emphasis></term>
<listitem>
<para>
Outputs an overview of the commands and features of the command.
</para>
</listitem></varlistentry>

<varlistentry><term>globusrun-ws <emphasis role="bold">-usage</emphasis></term>
<listitem>
<para> [-validate | -submit | -monitor | -status | -kill]</para>
<para>
Outputs brief usage information for the command.
</para>
</listitem></varlistentry>

<varlistentry><term>globusrun-ws <emphasis role="bold">-version(s)</emphasis></term><listitem>

<para>
Outputs version information for the command.
</para>
</listitem></varlistentry>

</variablelist>

</refsect1>
<refsect1 id="commandoptions"><title>Command options</title>

<refsect2><title>Quiet mode</title>

<para>
A variety of protocol status messages, warning messages, and output
data may be printed to standard output and error under multiple
command modes. The <emphasis>quiet mode</emphasis> suppresses all but fatal standard
error messages in order to have clean outputs for use in scripting or
with the <emphasis>streaming output mode</emphasis> where application output is
retrieved and output.
</para>

<variablelist>

<varlistentry><term>-q, -quiet</term><listitem>

<para>
If supplied, all non-fatal status and protocol-related messages are
suppressed.
</para>
</listitem></varlistentry>

</variablelist>


</refsect2><refsect2><title>Debug mode</title>

<variablelist>
<varlistentry><term>-dbg, -debug</term><listitem>

<para>
If supplied, all soap messages and ftp control messages will be displayed on stderr.
</para>
</listitem></varlistentry>

</variablelist>

</refsect2><refsect2><title>Protocol Options</title>

<refsect3><title>Service authorization</title>

<para>
Usually, secure communication includes mutual authentication. In
addition to the service authorizing the client for the requested
operation(s), an authorization decision is made by the client to
determine whether the remote service is the one intended.
</para>

<variablelist>

<varlistentry><term>-host, -host-authz</term><listitem>

<para>
The GSI "host authorization" rule is used to verify that the service
is using a host credential appropriate for the underlying service
address information. This is the default.
</para>
</listitem></varlistentry>

<varlistentry><term>-self, -self-authz</term><listitem>

<para>
The GSI "self authorization" rule is used to verify that the service
is using a (proxy) credential derived from the same identity as the
client's.
</para>
</listitem></varlistentry>

<varlistentry><term>-subject, -subject-authz <emphasis role="underline">subject name</emphasis></term><listitem>

<para>
The service must be using a credential with the exact subject name
provided by this option.
</para>
</listitem></varlistentry>

</variablelist>

</refsect3><refsect3><title>Security Protocol</title>

<para>
The client uses secure transport for all https enpoints and secure message
for http.  Secure conversation is currently unsupported.
</para>
<variablelist>
<varlistentry><term>-p, -private</term><listitem>

<para>
If supplied, privacy-protection is enabled between globusrun-ws and
WS GRAMor GridFTP services. It is a fatal error to select privacy
protection if it is not available due to build options or other
security settings.

<emphasis role="bold">Note:</emphasis> Currently only supported with https endpoints.
</para>
</listitem></varlistentry>

</variablelist>

</refsect3><refsect3><title>Timeouts</title>

<variablelist>

<varlistentry><term>-T, -http-timeout <emphasis role="underline">milliseconds</emphasis></term><listitem>

<para>
Set timeout for HTTP socket, in milliseconds, for all Web services
interactions. The default value is 120000 (2 minutes).
</para>
</listitem></varlistentry>

</variablelist>
</refsect3>
</refsect2>

<refsect2><title>Signal hanvariablelisting</title>

<variablelist>

<varlistentry><term>-n, -no-cleanup</term><listitem>

<para>
If supplied, the default behavior of trapping interrupts (SIG_INTR)
and cancelling the job is disabled. Instead, the interrupt simply
causes the tool to exit without affecting the ManagedJob resource.
</para>
</listitem></varlistentry>

</variablelist>



</refsect2><refsect2><title>Submit options</title>

<refsect3><title>Output Mode</title>

<para>
The user can select several tool behaviors following submission. In
<emphasis>batch mode</emphasis>, the tool prints the resulting ManagedJob EPR as the
sole standard output (unless in <emphasis>quiet mode</emphasis>) and exits. In
<emphasis>interactive mode</emphasis>, the tool keeps running in order to monitor
job status. Interactive mode is qualitatively equivalent to a
batch-mode submission immediately followed a second invocation of
globusrun-ws using the -monitor command. In interactive mode, an
optional <emphasis>streaming mode</emphasis> where job output files are fetched and
output from globusrun-ws.
</para>

<variablelist>

<varlistentry><term>-b, -batch</term><listitem>

<para>
If supplied, the batch mode is enabled. The default is interactive mode.
The tool prints the resulting ManagedJob EPR as
the sole standard output (unless in quiet mode) and exits.
</para>
</listitem></varlistentry>

<varlistentry><term>-s, -streaming</term><listitem>

<para>
The standard output and standard error files of the job are monitored
and data is written to the corresponding output of globusrun-ws. The
standard output will contain ONLY job output data, while the standard
error may be a mixture of job error output as well as globusrun-ws
messages, unless the <emphasis>quiet mode</emphasis> is also enabled.
</para>

<para>
Streaming output depends on the ability to access job outputs via
GridFTP. If -streaming mode is selected and the job description does not
already specify output file redirection for the job host, then
globusrun-ws adds unique output file name redirections and automatic
cleanup directives to the job description.
</para>

<para>
If you are using -batch mode, but intend to use -streaming with -monitor,
you may want to still include -streaming.  -streaming always introduces
a 'CleanUp Hold' state which ensures that all the data is streamed before the
files are destroyed.  If you do use -streaming with -batch, you <emphasis role="bold">must</emphasis>
come back with -monitor so the hold can be released.
</para>
<para>
This option implies -staging-delegate if the stdout and stderr entries are not specified in the job description.
</para>
</listitem></varlistentry>

<varlistentry><term>-so, -stdout-file <emphasis role="underline">filename</emphasis></term><listitem>

<para>
append stdout out stream to the specified file instead of to stdout.
</para>
</listitem></varlistentry>

<varlistentry><term>-se, -stderr-file <emphasis role="underline">filename</emphasis></term><listitem>

<para>
append stderr out stream to the specified file instead of to stderr.
</para>
</listitem></varlistentry>
</variablelist>

</refsect3><refsect3><title>Streaming Options</title>

<para>Streaming makes use of GridFTP client calls to retrieve user data.  The
following options apply to such transfers.
</para>

<variablelist>
<varlistentry><term>-ipv6, -allow-ipv6</term><listitem>

<para>
Allow streaming transfers to use IPV6.
</para>
</listitem></varlistentry>

<varlistentry><term>-passive</term><listitem>

<para>
Force streaming transfers to use MODE S to allow for passive mode
       transfers. (Useful if you're behind a firewall, but expensive
       because there is no connection caching).
</para>
</listitem></varlistentry>

<varlistentry><term>-nodcau</term><listitem>

<para>
Disable data channel authentication on streaming transfers
</para>
</listitem></varlistentry>

</variablelist>


</refsect3><refsect3><title>Factory information</title>

<para>
Addressing information for the ManagedJobFactory target of this
submission must be provided. If neither option is specified, and no
EPR is supplied in the job description, then "-factory localhost
-factory-type fork" is assumed.
</para>

<variablelist>

<varlistentry><term>-Ff, -factory-epr-file <emphasis role="underline">filename</emphasis></term><listitem>

<para>
If supplied, this option causes the EPR for the ManagedJobFactory to
be read from the given file. This EPR is used as the service endpoint
for submission of the job.
</para>
</listitem></varlistentry>

<varlistentry><term>-F, -factory <emphasis role="underline">contact</emphasis></term><listitem>

<para>
If supplied, this option causes an EPR to be constructed using ad-hoc
methods that depend on GT implementation details.  For
interoperability to other implementations of WS_GRAM, the
-factory-epr-file option should be used instead.
</para>

<blockquote><para>
[<emphasis role="underline">protocol</emphasis>://]{<emphasis role="underline">hostname</emphasis>|<emphasis role="underline">hostaddr</emphasis>}[:<emphasis role="underline">port</emphasis>][/<emphasis role="underline">service</emphasis>]
</para></blockquote>

<para>
Default values form the following contact information if not overridden:
</para>

<blockquote><para>https://localhost:8443/wsrf/services/ManagedJobFactoryService</para></blockquote>

</listitem></varlistentry>

<varlistentry><term>-Ft, -factory-type <emphasis role="underline">type</emphasis></term><listitem>

<para>
In the absence of -factory-epr-file, this option refines the behavior of the
-factory option to select a specific type of scheduler. The default is "Fork"
for single jobs and "Multi" for multijobs.
</para>
</listitem></varlistentry>

</variablelist>

</refsect3><refsect3><title>Job description</title>

<para>
A description of the job to be submitted must be provided with the
-submit command, either using the WS GRAMXML description syntax or a
simpler Unix command and argument list.
</para>

<variablelist>

<varlistentry><term>-f, -job-description-file <emphasis role="underline">filename</emphasis></term><listitem>

<para>
If supplied, this option causes the job description to be read from
the given file.  This description is modified according to the other
options and passed in the WS GRAMsubmission messages.  The root element of
this file must be 'job' for a single job or 'multiJob' for a multijob.
</para>
</listitem></varlistentry>

<varlistentry><term>-c, -job-command [--] <emphasis role="underline">prog</emphasis> [<emphasis role="underline">arg</emphasis> ...]</term><listitem>

<para>
If supplied, this option take all remaining globusrun-ws arguments as
its arguments; therefore it must appear last among globusrun-ws
options. This option causes globusrun-ws to generate a simple job
description with the named program and arguments.
</para>
</listitem>
</varlistentry>
</variablelist>

</refsect3><refsect3><title>Submission ID</title>

<para>
A submission ID may be used in the WS GRAMprotocol for robust
reliability in the face of message faults or other transient errors to
ensure that at most one instance of a job is executed, i.e. to prevent
accidental duplication of jobs under rare circumstances with client
retry on failure. The globusrun-ws tool always uses this feature,
requiring either a submission ID to be passed in as input or a new
unique ID to be created by the tool itself. If a new ID is created, it
should be captured by the user who wishes to exploit this reliability
interface. The ID in use, whether created or passed as input, will be
written to the optional output file when provided, as well as to the
standard error output unless the <emphasis>quiet mode</emphasis> is in
effect.
</para>

<para>
If a user is unsure whether a job was submitted successfully, he
should resubmit using the same ID as was used for the previous
attempt.
</para>

<variablelist>

<varlistentry><term>-I, -submission-id <emphasis role="underline">ID</emphasis></term><listitem>

<para>
If supplied, this option causes the job to be submitted using the
given ID in the reliability protocol.
</para>
</listitem></varlistentry>

<varlistentry><term>-If, -submission-id-file <emphasis role="underline">filename</emphasis></term><listitem>

<para>
If supplied, this option causes the ID to be read from the given
file. It is an error to use both mechanisms to provide an input ID.
</para>
</listitem></varlistentry>

<varlistentry><term>-Io, -submission-id-output-file <emphasis role="underline">filename</emphasis></term><listitem>

<para>
If supplied, the ID in use is written to the given file, whether this
ID was provided by the user or given by one of the above input
options.
</para>
</listitem></varlistentry>

</variablelist>

</refsect3><refsect3><title>Job EPR output</title>

<para>
A successful submission will create a new ManagedJob resource with its
own unique EPR for messaging. The globusrun-ws tool will output this
EPR to a file when requested and as the sole standard output when
running in batch mode. When running in streaming output mode, it is
possible that the EPR will not be output and the user's only recourse
is to submit again with the same submission ID and job request in
order to reattach to the existing job.
</para>

<variablelist>

<varlistentry><term>-o, -job-epr-output-file <emphasis role="underline">filename</emphasis></term><listitem>

<para>
If supplied, the created ManagedJob EPR will be written to the given
file following successful submission. The file will not be written if
the submission fails.
</para>
</listitem></varlistentry>

</variablelist>

</refsect3><refsect3><title>Delegation</title>

<para>
The job description supports the optional identification of delegated
credentials for use by the WS GRAMservices.  These features are
passed through globusrun-ws without modification. However,
globusrun-ws can also perform delegation and construct these optional
request elements before submitting it to the service. The only delegation
performed by default (if an endpoint does not already exist) is the multijob
level jobCredential.
</para>

<variablelist>

<varlistentry><term>-J, -job-delegate</term><listitem>

<para>
If supplied AND the job description does not already provide a jobCredential
 element, globusrun-ws will delegate
the client credential to WS GRAMand introduce the corresponding
element to the submission input.
</para>
</listitem></varlistentry>

<varlistentry><term>-S, -staging-delegate</term><listitem>

<para>
If supplied AND the job description does include staging or cleanup
directives AND the job description does not already provide the
necessary stagingCredential or 
transferCredential element(s),
globusrun-ws will delegate the client credential to WS GRAM and RFT, and
introduce the corresponding elements to the submission input.
</para>

<para>This option is implied by -streaming</para>
</listitem></varlistentry>

<varlistentry><term>-Jf, -job-credential-file <emphasis role="underline">filename</emphasis>:</term><listitem>

<para>
If supplied AND the job description does not already provide a
jobCredential element, globusrun-ws will copy the supplied epr into
the job description.  This should be an epr returned from the
DelegationFactoryService intended for use by the job (or, in the
case of a multijob, for authenticating to the subjobs).
</para>
<para>
<emphasis role="bold">note</emphasis>: for multijob descriptions, only the top level jobCredential
will be copied into.
</para>
</listitem></varlistentry>

<varlistentry><term>-Sf, -staging-credential-file <emphasis role="underline">filename</emphasis>:</term><listitem>

<para>
If supplied AND the job description does not already provide a
stagingCredential element, globusrun-ws will copy the supplied epr
into the job description.  This should be an epr returned from the
DelegationFactoryService intended for use with the RFT service
associated with the ManagedJobService.
</para>
<para>
<emphasis role="bold">note</emphasis>: this option is ignored for multijobs.
</para>
</listitem></varlistentry>

<varlistentry><term>-Tf, -transfer-credential-file <emphasis role="underline">filename</emphasis>:</term><listitem>

<para>
If supplied, globusrun-ws will copy the epr into each of the
stage in, stage out, and cleanup elements that do not already
contain a transferCredential element.  This should be an epr
returned from the DelegationFactoryService intended for use by
RFT to authenticate with the target gridftp server.
</para>
<para>
<emphasis role="bold">note</emphasis>: this option is ignored for multijobs.
</para>
</listitem></varlistentry>

</variablelist>

</refsect3><refsect3><title>Lifetime</title>

<para>
The ManagedJob resource supports lifetime management in the form of a
scheduled destruction. The default lifetime requested by the client is
infinite, subject to server policies.
</para>

<variablelist>

<varlistentry><term>-term, -termination <emphasis role="underline">mm/dd/yyyy HH:MM</emphasis></term><listitem>

<para>
Set an absolute termination time.
</para>
</listitem></varlistentry>

<varlistentry><term>-term, -termination +<emphasis role="underline">HH:MM</emphasis></term><listitem>

<para>
Set a termination time relative to the successful creation of the
job. The default is +24:00
</para>
</listitem></varlistentry>

</variablelist>
</refsect3>
</refsect2>


<refsect2><title>Validate options</title>

<refsect3><title>Job description</title>

<variablelist>

<varlistentry><term>-f, -job-description-file <emphasis role="underline">filename</emphasis></term><listitem>

<para>
This option causes the job description to be read from the given file.
This description is checked for validity.
</para>
</listitem></varlistentry>

</variablelist>
</refsect3>
</refsect2>

<refsect2><title>Monitor options</title>

<refsect3><title>Job</title>

<para>
Addressing information for the ManagedJob target of this command
must be provided.
</para>

<variablelist>

<varlistentry><term>-j, -job-epr-file <emphasis role="underline">filename</emphasis></term><listitem>

<para>
If supplied, this option causes the EPR for the ManagedJob to be read
from the given file. This EPR is used as the endpoint for service
requests.
</para>
</listitem></varlistentry>

</variablelist>

</refsect3><refsect3><title>Output mode</title>

<para>
In the default <emphasis>interactive mode</emphasis>, the tool keeps running in
order to monitor job status.  In the optional <emphasis>interactive-streaming
mode</emphasis>, the job output files are fetched and output from
globusrun-ws as well.
</para>

<variablelist>

<varlistentry><term>-s, -streaming</term><listitem>

<para>
See Output mode under Submit Options above for details on streaming.
</para>
</listitem></varlistentry>
</variablelist>
</refsect3>
</refsect2>

<refsect2><title>Status options</title>

<para>
See the Job options for the -monitor command.
</para>

</refsect2><refsect2><title>Kill options</title>

<para>
See the Job options of the -monitor command.
</para>
</refsect2>
</refsect1>

<refsect1 id="jobhandling"><title>Job Handling</title>

<para>
For every job that globusrun-ws delegates a credential, globusrun will augment
the user's job description, adding annotations that will later tell
globusrun-ws to destroy the credential after the job has been destroyed.
Below are 2 job annotation examples.

globusrun-ws only delegated the job cred...
<screen>
   &lt;extensions&gt;
      &lt;globusrunAnnotation&gt;
         &lt;automaticJobDelegation&gt;true&lt;/automaticJobDelegation&gt;
         &lt;automaticStagingDelegation&gt;false&lt;/automaticStagingDelegation&gt;
         &lt;automaticStageInDelegation&gt;false&lt;/automaticStageInDelegation&gt;
         &lt;automaticStageOutDelegation&gt;false&lt;/automaticStageOutDelegation&gt;
         &lt;automaticCleanUpDelegation&gt;false&lt;/automaticCleanUpDelegation&gt;
      &lt;/globusrunAnnotation&gt;
   &lt;/extensions&gt;
</screen>

globusrun-ws delegated the job, staging and stage in cred...
<screen>
   &lt;extensions&gt;
      &lt;globusrunAnnotation&gt;
         &lt;automaticJobDelegation&gt;true&lt;/automaticJobDelegation&gt;
         &lt;automaticStagingDelegation&gt;true&lt;/automaticStagingDelegation&gt;
         &lt;automaticStageInDelegation&gt;true&lt;/automaticStageInDelegation&gt;
         &lt;automaticStageOutDelegation&gt;false&lt;/automaticStageOutDelegation&gt;
         &lt;automaticCleanUpDelegation&gt;false&lt;/automaticCleanUpDelegation&gt;
      &lt;/globusrunAnnotation&gt;
   &lt;/extensions&gt;
</screen>
</para>
</refsect1>
<refsect1 id="environment"><title>Environment</title>

<variablelist>

<varlistentry><term>X509_USER_PROXY</term><listitem>

<para>
Overrides the default selection of user credentials when using GSI security.
</para>
</listitem></varlistentry>

</variablelist>

</refsect1>

<refsect1 id="exitcodes"><title>Exit Codes</title>

<para>
The client returns negative error codes for client errors, 0 for success,
and postive error codes from the submitted job (where possible)
</para>
</refsect1>
</refentry>

