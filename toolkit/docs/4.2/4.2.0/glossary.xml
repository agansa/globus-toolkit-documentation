
      <title>Globus Toolkit 4.0 Glossary</title>
      <glossdiv>
            <title>GT 4.0 General</title>
            <!-- includes glossary excerpts from all the standards definitions in the WS-ServiceGroup specification 
            see "Terminology and Concepts" in "http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-02.pdf".  
              -->
            <glossentry id="ant">
                  <glossterm>Ant</glossterm>
                  <glossdef>
                        <para>Apache Open Source Java based build tool.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="apache-commons">
                  <glossterm>Apache Commons</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://jakarta.apache.org/commons/"
                                    >http://jakarta.apache.org/commons/</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="autoconf">
                  <glossterm>autoconf</glossterm>
                  <glossdef>
                        <para>GNU Open Source package to automatically configure source code
                              package.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="automake">
                  <glossterm>automake</glossterm>
                  <glossdef>
                        <para>GNU Open Source to automatically generate Makefile.in files.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="axis-c">
                  <glossterm>Axis C++</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://ws.apache.org/axis/cpp"
                                    >http://ws.apache.org/axis/cpp</ulink> Open Source SOAP
                              implementation used by C-Hosting.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="bouncy-castle">
                  <glossterm>Bouncy Castle Crypto APIs</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.bouncycastle.org"
                              >http://www.bouncycastle.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="condor">
                  <glossterm>Condor</glossterm>
                  <glossdef>
                        <para> Supported MJS scheduler mechanism.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="cryptix">
                  <glossterm>Cryptix</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="https://www.cryptix.org">https://www.cryptix.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="cvs">
                  <glossterm>Concurrent Version System</glossterm>
                  <acronym>CVS</acronym>
                  <glossdef>
                        <para>Source code repository used by the Globus Toolkit.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="exolab">
                  <glossterm>Exolab Core</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.exolab.org/">http://www.exolab.org/</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="flavor">
                  <glossterm>flavor</glossterm>
                  <glossdef>
                        <para>Pre-OGSI Globus description term that uniquely encompasses Machine
                              Architecture, OS, Compiler and other attributes into a single term,
                              for example: gcc32dbgpthr for a threaded Linux debug
                        distribution.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="fork">
                  <glossterm>fork</glossterm>
                  <glossdef>
                        <para>Terms used to refer to a Unix fork, supported MJS scheduler
                        mechanism.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="hosting-env">
                  <glossterm>hosting environment</glossterm>
                  <glossdef>
                        <para>[definition] Also see, container.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="javadocs">
                  <glossterm>javadocs</glossterm>
                  <glossdef>
                        <para>Java generated documentation files. Globus Toolkit uses this tool to
                              automatically generate API documentation from the code itself.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="jax-rpc">
                  <glossterm>JAX-RPC</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="junit">
                  <glossterm>JUnit</glossterm>
                  <glossdef>
                        <para>Java testing framework.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="jvm">
                  <glossterm>Java Virtual Machine</glossterm>
                  <acronym>JVM</acronym>
                  <glossdef>
                        <para>The Java Runtime under which OGSI modules run. (is this relevant for
                              GT4?)</para>
                  </glossdef>
            </glossentry>
            <glossentry id="libtool">
                  <glossterm>Libtool</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.gnu.org/software/libtool"
                                    >http://www.gnu.org/software/libtool</ulink> GNU library support
                              script that abstracts shared library interface. Used by GSI/Sysconfig.
                              Libtool hides the complexity of using shared libraries behind a
                              portable interface.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="log4j">
                  <glossterm>Log4J</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="lsf">
                  <glossterm>LSF</glossterm>
                  <glossdef>
                        <para>Supported MJS scheduler mechanism.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="mpi">
                  <glossterm>Message Passing Interface</glossterm>
                  <acronym>MPI</acronym>
                  <glossdef>
                        <para>[definition]</para>
                  </glossdef>
            </glossentry>
            <glossentry id="nfs">
                  <glossterm>Network File System</glossterm>
                  <acronym>NFS</acronym>
                  <glossdef>
                        <para>[definition]</para>
                  </glossdef>
            </glossentry>
            <glossentry id="openjms">
                  <glossterm>OpenJMS</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.exolab.org/">http://www.exolab.org/</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="openldap">
                  <glossterm>OpenLDAP</glossterm>
                  <glossdef>
                        <para>
                              <ulink url=" http://www.openldap.org"> http://www.openldap.org</ulink>
                              Open Source Lightweight Directory Access Protocol in the C
                        Language.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="openssl">
                  <glossterm>OpenSSL</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.openssl.org">http://www.openssl.org</ulink> SSL
                              implementation used by GSI. Open Source Secure Sockets Layer
                              Distribution in the C Language.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="pbs">
                  <glossterm>Portable Batch System</glossterm>
                  <acronym>PBS</acronym>
                  <glossdef>
                        <para>(OpenPBS.org) Supported MJS scheduler mechanism.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="puretls">
                  <glossterm>PureTLS</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.rtfm.com/puretls/"
                              >http://www.rtfm.com/puretls/</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="rp">
                  <glossterm>resource properties</glossterm>
                  <glossdef>
                        <para>
                             [FIXME]
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="saaj">
                  <glossterm>SAAJ</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="sasl">
                  <glossterm>SASL</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://asg.web.cmu.edu/sasl"
                              >http://asg.web.cmu.edu/sasl</ulink> Utilized by GSI. Open Source
                              Simple Authentication and Security Layer in the C Language.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="servlet">
                  <glossterm>servlet</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="standalone">
                  <glossterm>standalone container</glossterm>
                  <glossdef>
                        <para>A simple HTTP server that passes requests to the SOAP engine and it
                              can only serve .wsdl and .xsd files. Included with a standard
                              installation of the Globus Toolkit (which versions) for use as the
                              build environment for testing or extremely basic deployments. </para>
                  </glossdef>
            </glossentry>
            <glossentry id="wsdl4j">
                  <glossterm>WSDL4j</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www-136.ibm.com/developerworks/opensource"
                                    >http://www-136.ibm.com/developerworks/opensource</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="wsif">
                  <glossterm>WSIF</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="wsrf">
                  <glossterm>Web Services Resource Framework</glossterm>
                  <acronym>WSRF</acronym>
                  <glossdef>
                        <para>[definition]</para>
                  </glossdef>
            </glossentry>
            <glossentry id="xalan">
                  <glossterm>Xalan</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="xerces">
                  <glossterm>Xerces</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="xindice">
                  <glossterm>Xindice</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="xml-db">
                  <glossterm>XML::DB</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.xmldb.org">http://www.xmldb.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="xml-apis">
                  <glossterm>XML-APIs</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="xml-rpc">
                  <glossterm>XML-RPC</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="xmlsec">
                  <glossterm>XMLSec</glossterm>
                  <glossdef>
                        <para>
                              <ulink url="http://www.apache.org">http://www.apache.org</ulink>
                        </para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>GT 4.0 Common Runtime Components</title>
            <glossentry id="fixme">
                  <glossterm>fixme</glossterm>
                  <glossdef>
                        <para>fixme</para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>GT 4.0 Security</title>
            <glossentry id="ca">
                  <glossterm> Certificate Authority</glossterm>
                  <acronym> CA </acronym>
                  <glossdef>
                        <para> An entity that issues certificates.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="ca-cert">
                  <glossterm> CA Certificate</glossterm>
                  <glossdef>
                        <para> The CA's certificate. This certificate is used to verify signature on
                              certificates issued by the CA. GSI typically stores a given CA
                              certificate in
                                          <filename>/etc/grid-security/certificates/<replaceable>&lt;hash&gt;</replaceable>.0</filename>,
                              where &lt;hash&gt; is the hash code of the CA identity.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="ca-sign">
                  <glossterm> CA Signing Policy</glossterm>
                  <glossdef>
                        <para> The CA signing policy is used to place constraints on the information
                              you trust a given CA to bind to public keys. Specifically it
                              constrains the identities a CA is trusted to assert in a certificate.
                              In GSI the signing policy for a given CA can typically be found in
                                          <filename>/etc/grid-security/certificates/<replaceable>&lt;hash&gt;</replaceable>.signing_policy</filename>,
                              where &lt;hash&gt; is the hash code of the CA identity. For
                              more information see [add link].</para>
                  </glossdef>
            </glossentry>
            <glossentry id="cert">
                  <glossterm> certificate</glossterm>
                  <glossdef>
                        <para> A public key and information about the certificate owner bound
                              together by the digital signature of a CA. In the case of a CA
                              certificate the certificate is self signed, i.e. it was signed using
                              its own private key.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="crl">
                  <glossterm> Certificate Revocation List</glossterm>
                  <acronym>CRL</acronym>
                  <glossdef>
                        <para> A list of revoked certificates generated by the CA that originally
                              issued them. When using GSI this list is typically found in
                                          <filename>/etc/grid-security/certificates/<replaceable>&lt;hash&gt;</replaceable>.r0</filename>,
                              where &lt;hash&gt; is the hash code of the CA identity.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="cert-subject">
                  <glossterm> certificate subject</glossterm>
                  <glossdef>
                        <para> A identifier for the certificate owner, e.g.
                              "/DC=org/DC=doegrids/OU=People/CN=John Doe 123456". The subject is
                              part of the information the CA binds to a public key when creating a
                              certificate.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="cred">
                  <glossterm> credentials</glossterm>
                  <glossdef>
                        <para> The combination of a certificate and the matching private key.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="eec">
                  <glossterm> End Entity Certificate</glossterm>
                  <acronym>EEC</acronym>
                  <glossdef>
                        <para> A certificate belonging to a non-CA entity, e.g. you, me or the
                              computer on your desk.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="gaa-config">
                  <glossterm> GAA Configuration File</glossterm>
                  <glossdef>
                        <para> A file that configures the Generic Authorization and Access control
                                    <acronym>GAA</acronym> libraries. When using GSI this file is
                              typically found in
                              <filename>/etc/grid-security/gsi-gaa.conf</filename>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="grid-map-file">
                  <glossterm> grid map file</glossterm>
                  <glossdef>
                        <para> A file containing entries mapping certificate subjects to local user
                              names. This file can also serve as a access control list for GSI
                              enabled services and is typically found in
                                    <filename>/etc/grid-security/grid-mapfile</filename>. For more
                              information see the <ulink
                                    url="http://www-unix.globus.org/toolkit/docs/3.2/gsi/admin/configuration.html#GridmapFileSearchRules"
                                    >Gridmap File Search Rules</ulink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="grid-sec-dir">
                  <glossterm>grid security directory</glossterm>
                  <glossdef>
                        <para> The directory containing GSI configuration files such as the GSI
                              authorization callout configuration and GAA configuration files.
                              Typically this directory is <filename>/etc/grid-security</filename>.
                              For more information see <ulink
                                    url="http://www-unix.globus.org/toolkit/docs/3.2/gsi/admin/configuration.html#GSIDirectories"
                                    >GSI Directories</ulink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="gsi-authz-config">
                  <glossterm> GSI authorization callout configuration file</glossterm>
                  <glossdef>
                        <para> A file that configures authorization callouts to be used for mapping
                              and authorization in GSI enabled services. When using GSI this file is
                              typically found in
                              <filename>/etc/grid-security/gsi-authz.conf</filename>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="host-cert">
                  <glossterm> host certificate</glossterm>
                  <glossdef>
                        <para> An <glossterm linkend="eec">EEC</glossterm> belonging to a host. When
                              using GSI this certificate is typically stored in
                                    <filename>/etc/grid-security/hostcert.pem</filename>. For more
                              information on possible host certificate locations see the <ulink
                                    url="http://www-unix.globus.org/toolkit/docs/3.2/gsi/admin/configuration.html#CredentialAcquisitionRules"
                                    >Credential Acquisition Rules.</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="host-cred">
                  <glossterm> host credentials</glossterm>
                  <glossdef>
                        <para> The combination of a <glossterm linkend="host-cert">host
                              certificate</glossterm> and its corresponding <glossterm
                                    linkend="priv-key">private key.</glossterm>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="priv-key">
                  <glossterm> private key</glossterm>
                  <glossdef>
                        <para> The private part of a key pair. Depending on the type of <glossterm
                                    linkend="cert">certificate</glossterm> the key corresponds to it
                              may typically be found in
                              <filename>$HOME/.globus/userkey.pem</filename> (for <glossterm
                                    linkend="user-cert">user certificates</glossterm>),
                                    <filename>/etc/grid-security/hostkey.pem</filename> (for
                                    <glossterm linkend="host-cert">host certificates</glossterm>) or
                                          <filename>/etc/grid-security/<replaceable>&lt;service&gt;</replaceable>/<replaceable>&lt;service&gt;</replaceable>key.pem</filename>
                              (for <glossterm linkend="svc-cert">service certificates</glossterm>).
                              For more information on possible private key locations see the <ulink
                                    url="http://www-unix.globus.org/toolkit/docs/3.2/gsi/admin/configuration.html#CredentialAcquisitionRules"
                                    >Credential Acquisition Rules</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="proxy-cert">
                  <glossterm> proxy certificate</glossterm>
                  <glossdef>
                        <para> A short lived <glossterm linkend="cert">certificate</glossterm>
                              issued using a <glossterm linkend="eec">EEC</glossterm>. A proxy
                              certificate typically has the same effective subject as the <glossterm
                                    linkend="eec">EEC</glossterm> that issued it and can thus be
                              used in its stead. GSI uses proxy certificates for single sign on and
                              delegation of rights to other entities.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="proxy-cred">
                  <glossterm> proxy credentials</glossterm>
                  <glossdef>
                        <para> The combination of a <glossterm linkend="proxy-cert">proxy
                                    certificate</glossterm> and its corresponding <glossterm
                                    linkend="priv-key">private key</glossterm>. GSI typically stores
                              proxy credentials in
                                          <filename>/tmp/x509up_u<replaceable>&lt;uid&gt;</replaceable>
                              </filename>, where &lt;uid&gt; is the user id of the proxy
                              owner.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="pub-key">
                  <glossterm> public key</glossterm>
                  <glossdef>
                        <para> The public part of a key pair used for cryptographic operations (e.g.
                              signing, encrypting).</para>
                  </glossdef>
            </glossentry>
            <glossentry id="svc-cert">
                  <glossterm> service certificate</glossterm>
                  <glossdef>
                        <para> A <glossterm linkend="eec">EEC</glossterm> for a specific service
                              (e.g. FTP or LDAP). When using GSI this <glossterm linkend="cert"
                                    >certificate</glossterm> is typically stored in
                                          <filename>/etc/grid-security/<replaceable>&lt;service&gt;</replaceable>/<replaceable>&lt;service&gt;</replaceable>cert.pem</filename>.
                              For more information on possible service certificate locations see the
                                    <ulink
                                    url="http://www-unix.globus.org/toolkit/docs/3.2/gsi/admin/configuration.html#CredentialAcquisitionRules"
                                    >Credential Acquisition Rules</ulink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="svc-cred">
                  <glossterm> service credentials</glossterm>
                  <glossdef>
                        <para> The combination of a <glossterm linkend="svc-cert">service
                                    certificate</glossterm> and its corresponding <glossterm
                                    linkend="priv-key">private key</glossterm>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="transport-level-security">
                  <glossterm>transport-level security</glossterm>
                  <glossdef>[FIXME]</glossdef>
            </glossentry>
      
            <glossentry id="trusted-ca-dir">
                  <glossterm> trusted CAs directory</glossterm>
                  <glossdef>
                        <para> The directory containing the <glossterm linkend="ca-cert">CA
                                    certificates</glossterm> and <glossterm linkend="ca-sign"
                                    >signing policy files</glossterm> of the <glossterm linkend="ca"
                                    >CAs</glossterm> trusted by GSI. Typically this directory is
                                    <filename>/etc/grid-security/certificates</filename>. For more
                              information see <ulink
                                    url="../admin/configuration.html#GSIDirectories">GSI
                              Directories</ulink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="user-cert">
                  <glossterm> user certificate</glossterm>
                  <glossdef>
                        <para> A <glossterm linkend="eec">EEC</glossterm> belonging to a user. When
                              using GSI this <glossterm linkend="cert">certificate</glossterm> is
                              typically stored in <filename>$HOME/.globus/usercert.pem</filename>.
                              For more information on possible user certificate locations see the
                                    <ulink
                                    url="http://www-unix.globus.org/toolkit/docs/3.2/gsi/admin/configuration.html#CredentialAcquisitionRules"
                                    >Credential Acquisition Rules</ulink>.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="user-cred">
                  <glossterm> user credentials</glossterm>
                  <glossdef>
                        <para> The combination of a <glossterm linkend="user-cert">user
                              certificate</glossterm> and its corresponding <glossterm
                                    linkend="priv-key">private key</glossterm>.</para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>GT 4.0 Data Management</title>
            <glossentry id="bloom-filter">
                  <glossterm> Bloom filter</glossterm>
                  <glossdef>
                        <para> Compression scheme used by the Replica Location Service (RLS) that is
                              intended to reduce the size of soft state updates between Local
                              Replica Catalogs (LRCs) and Replica Location Index (RLI) servers. A
                              Bloom filter is a bit map that summarizes the contents of a Local
                              Replica Catalog (LRC). An LRC constructs the bit map by applying a
                              series of hash functions to each logical name registered in the LRC
                              and setting the corresponding bits. (RLS) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="client">
                  <glossterm>client</glossterm>
                  <glossdef>
                        <para> As noted above, FTP is a command/response protocol. The defining
                              characteristic of a client is that it is the process sending the
                              commands and receiving the responses. It may or may not take part in
                              the actual movement of data (see client/server and third party
                              transfers below). (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="client-server-transfer">
                  <glossterm>client/server transfer</glossterm>
                  <glossdef>
                        <para> In a client/server transfer, there are only two entities involved in
                              the transfer, the client entity and the server entity. We use the term
                              entity here rather than process because in the implementation provide
                              in GT4, the server entity may actually run as two or more separate
                              processes. The client will either move data from or to, his local
                              host. The client will decide whether or not he wishes to connect to
                              the server to establish the data channel or the server should connect
                              to him (MODE E described below, dictates who must connect). If he
                              wishes to connect to the server, he will send the PASV (passive)
                              command. The server will start listening on an ephemeral (random,
                              non-privileged) port and will return the IP and port as a response to
                              the command. The client will then connect to that IP/Port. If the
                              client wishes to have the server connect to him, the client would
                              start listening on an ephemeral port, and would then send the PORT
                              command which includes the IP/Port as part of the command to the
                              server and the server would initiate the TCP connect. Note that this
                              decision has an impact on traversing firewalls. For instance, the
                              clients host may be behind a firewall and the server may not be able
                              to connect. Finally, now that the data channel is established, the
                              client will send either the RETR “filename” command to transfer a file
                              from the server to the client (GET), or the STOR “filename” command to
                              transfer a file from the client to the server (PUT). (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="command-response">
                  <glossterm>command/response</glossterm>
                  <glossdef>
                        <para> Both FTP and GridFTP are command/response protocols. What this means
                              is that once a client sends a command to the server, it can only
                              accept responses from the server until it receives a response
                              indicating that the server is finished with that command. For most
                              commands this is not a big deal. For instance, setting the type of the
                              file transfer to binary (called I for image in the protocol), simply
                              consists of the client sending TYPE I and the server responding with
                              220 OK. Type set to I. However, the SEND and RETR commands (which
                              actually initiate the movement of data) can run for a long time. Once
                              the command is sent, the client’s only options are to wait until it
                              receives the completion reply, or kill the transfer. (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="concurrency">
                  <glossterm>concurrency</glossterm>
                  <glossdef>
                        <para> When speaking of GridFTP transfers, concurrency refers to having
                              multiple files in transit at the same time. They may all be on the
                              same host or across multiple hosts. This is the equivalent to starting
                              up “n” different clients for “n” different files, and having them all
                              running at the same time. This can be effective if you have many small
                              files to move. The Reliable File Transfer (RFT) service utilizes
                              concurrency to improve its performance. (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="dual-channel-protocol">
                  <glossterm>dual channel protocol</glossterm>
                  <glossdef>
                        <para> GridFTP uses two channels. One of the channels, called the control
                              channel, is used for sending commands and responses. It is low
                              bandwidth, and is encrypted for security reasons. The second channel
                              is known as the data channel. Its sole purpose is to transfer the
                              data. It is high bandwidth and uses an efficient protocol. By default,
                              the data channel is authenticated at connection time, but no integrity
                              checking or encryption is performed due to performance reasons.
                              Integrity checking and encryption are both available via the client
                              and libraries. Note that in GridFTP (not FTP) the data channel may
                              actually consist of several TCP streams from multiple hosts. See the
                              description of parallelism and striping below for more details.
                              (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="extended-block-mode">
                  <glossterm>extended block mode (MODE E)</glossterm>
                  <glossdef>
                        <para> MODE E is a critical GridFTP components because it allows for out of
                              order reception of data. This in turn, means we can send the data down
                              multiple paths, and don’t have to worry if one of the paths is slower
                              than the others and the data arrives out of order. This enables
                              parallelism and striping within GridFTP. In MODE E, a series of
                              “blocks” are sent over the data channel. Each block consists of an 8
                              bit flag field, a 64 bit field indicating the offset in the transfer,
                              and a 64 bit field indicating the length of the payload, followed by
                              length bytes of payload. Note that since the offset and length are
                              included in the block, out of order reception is possible, as long as
                              the receiving side can handle it, either via something like a seek on
                              a file, or via some application level buffering and ordering logic
                              that will wait for the out of order blocks. [INSERT PICTURE HERE]
                              (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="improved-extended-block-mode">
                  <glossterm>improved extended block mode (MODE X)</glossterm>
                  <glossdef>
                        <para> This protocol is still under development. It is intended to address a
                              number of the deficiencies found in MODE E. For instance, it will have
                              explicit negotiation for use of a data channel, thus removing the race
                              condition and the requirement for the sender to be the connector. This
                              will help with firewall traversal. A method will be added to allow the
                              filename to be provided prior to the data channel connection being
                              established to help large data farms better allocate resources. Other
                              additions under consideration include block checksumming, resends of
                              blocks that fail checksums, and inclusion of a transfer ID to allow
                              pipelining and de-multiplexing of commands. (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="lrc">
                  <glossterm>Local Replica Catalog (LRC)</glossterm>
                  <glossdef>
                        <para> Stores mappings between logical names for data items and the target
                              names (often the physical locations) of replicas of those items.
                              Clients query the LRC to discover replicas associated with a logical
                              name. Also may associate attributes with logical or target names. Each
                              LRC periodically sends information about its logical name mappings to
                              one or more RLIs. (RLS) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="logical-file-name">
                  <glossterm>logical file name</glossterm>
                  <glossdef>
                        <para> A unique identifier for the contents of a file. (RLS) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="logical-name">
                  <glossterm>logical name</glossterm>
                  <glossdef>
                        <para> A unique identifier for the contents of a data item. (RLS) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="mode-command">
                  <glossterm>mode command</glossterm>
                  <glossdef>
                        <para> In reality, GridFTP is not “a” protocol, but a collection of several
                              protocols. There is a protocol used on the control channel, but there
                              is a range of protocols available for use on the data channel. Which
                              protocol is used is selected by the MODE command. Four modes are
                              defined: STREAM (S), BLOCK (B), and COMPRESSED (C) in RFC 959 for FTP,
                              and EXTENDED BLOCK (E) in GFD.020 for GridFTP. There is also a new
                              data channel protocol, or mode, being defined in the GGF GridFTP
                              Working group, which for lack of a better name at this point, is
                              called MODE X. (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="network-end-points">
                  <glossterm>network end points</glossterm>
                  <glossdef>
                        <para> A network endpoint is generally something that has an IP address (a
                              network interface card). It is a point of access to the network for
                              transmission or reception of data. Note that a single host could have
                              multiple network end points if it had multiple NICs installed
                              (multi-homed). This definition is necessary to differentiate between
                              parallelism and striping, described below. (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="parallelism">
                  <glossterm>parallelism</glossterm>
                  <glossdef>
                        <para> When speaking about GridFTP transfers parallelism refers to having
                              multiple TCP connections between a single pair of network endpoints.
                              This is used to improve performance of transfers on connections with
                              light to moderate packet loss. (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="physical-file-name">
                  <glossterm>physical file name</glossterm>
                  <glossdef>
                        <para> The address or the location of a copy of a file on a storage system.
                              (RLS) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="rli">
                  <glossterm>Replica Location Index (RLI)</glossterm>
                  <glossdef>
                        <para> Collects information about the logical name mappings stored in one or
                              more Local Replica Catalogs (LRCs) and answers queries about those
                              mappings. Each RLI periodically receives updates from one or more LRCs
                              that summarize their contents. (RLS) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="rls">
                  <glossterm>Replica Location Service (RLS)</glossterm>
                  <glossdef>
                        <para> A distributed registry that keeps track of where replicas exist on
                              physical storage systems. The job of the RLS is to maintain
                              associations, or mappings, between logical names for data objects and
                              one or more target or physical names for replicas. Users or services
                              register data items in the RLS and query RLS servers to find replicas.
                              (RLS) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="rls-attribute">
                  <glossterm>RLS attribute</glossterm>
                  <glossdef>
                        <para> Descriptive information that may be associated with a logical or
                              target name mapping registered in a Local Replica Catalog (LRC).
                              Clients can query the LRC to discover logical names or target names
                              that have specified RLS attributes. (RLS) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="server">
                  <glossterm>server</glossterm>
                  <glossdef>
                        <para> The compliment to the client is the server. Its defining
                              characteristic is that it receives commands and sends responses to
                              those commands. Since it is a server or service, and it receives
                              commands, it must be listening on a port somewhere to receive the
                              commands. Both FTP and GridFTP have IANA registered ports. For FTP it
                              is port 21, for GridFTP it is port 2811. This is normally handled via
                              inetd or xinetd on Unix variants. However, it is also possible to
                              implement a daemon that listens on the specified port. This is
                              described more fully in the operation overview section below.
                              (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <!-- Where does this go?
      Operation Overview
      GridFTP represents a service that a host is providing. Therefore, the service must be listening on a port waiting for clients to request access to that service. 
      This is generally handled one of two ways. Either an application daemon is running listening for connections or inetd / xinetd is used. These services listen for 
      connections, and then when a connection is received on a “well known” port such as 2811 for GridFTP, inetd does a fork/exec to start up a GridFTP server process 
      and then does a Switch User (SU) so that the server is running in a user account rather than as root for security reasons. At this point, the client has established 
      a control channel to the server. The client will then send a series of commands to configure or describe the transfer that it wants to take place. There are basically 
      four important components of the exchange. The first is security. You have to authenticate, and for GridFTP, you must establish encryption on the control channel. 
      The control channel is encrypted by default, though it can be switched off (see the security section for more detail). The second is setup and informational exchanges. 
      The client may specify the type of the file (Binary or ASCII), the MODE of the transfer (see mode below), he might request the size of a file before transferring it, etc.. 
      Third, the information and negotiation for the data channel must be done. How this is handled, depends on whether you are doing a client / server or 3rd party 
      transfer, described below, and finally, a store (STOR), retrieve (RETR), extended store (ESTO) or extended retrieve (ERET) to indicate direction of the transfer and to 
      start data moving.. (GridFTP)
      -->
            <glossentry id="stream-mode">
                  <glossterm>stream mode (MODE S)</glossterm>
                  <glossdef>
                        <para> The only mode normally implemented for FTP is MODE S. This is simply
                              sending each byte, one after another over the socket in order, with no
                              application level framing of any kind. This is the default and is what
                              a standard FTP server will use. This is also the default for GridFTP.
                              (GridFTP) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="striping">
                  <glossterm>striping</glossterm>
                  <glossdef>
                        <para> When speaking about GridFTP transfers striping refers to having
                              multiple network endpoints at the source, destination, or both,
                              participating in the transfer of the same file. This is normally
                              accomplished by having a cluster with a parallel shared file system.
                              Each node in the cluster reads a section of the file and sends it over
                              the network. This mode of transfer is necessary if you wish to
                              transfer a single file faster than a single host is capable of. This
                              also tends to only be effective for large files, though how large
                              depends on how many hosts and how fast the end to end transfer is.
                              Note that while it is theoretically possible to use NFS for the shared
                              file system, your performance will be poor, and would make using
                              striping pointless. </para>
                  </glossdef>
            </glossentry>
            <glossentry id="target-name">
                  <glossterm>target name</glossterm>
                  <glossdef>
                        <para> The address or location of a copy of a data item on a storage system.
                              (RLS) </para>
                  </glossdef>
            </glossentry>
            <glossentry id="third-party-transfers">
                  <glossterm>third party transfers</glossterm>
                  <glossdef>
                        <para> In a third party transfer, there are three entities involved. The
                              client, who will only orchestrate, but not actually take place in the
                              data transfer, and two servers one of which will be sending data to
                              the other. This scenario is common in Grid applications where you may
                              wish to stage data from a data store somewhere to a supercomputer you
                              have reserved. The commands are quite similar to the client/server
                              transfer described above. However, now the client must establish two
                              control channels, one to each server. He will then choose one to
                              listen, and send it the PASV command. When it responds with the
                              IP/port it is listening on, the client will send that IP/port as part
                              of the PORT command to the other server. This will cause the second
                              server to connect to the first server, rather than the client. To
                              initiate the actual movement of the data, the client then sends the
                              RETR “filename” command to the server that will read from disk and
                              write to the network (the “sending” server) and will send the STOR
                              “filename” command to the other server which will read from the
                              network and write to the disk (the “receiving” server). (GridFTP)
                        </para>
                  </glossdef>
            </glossentry>
      </glossdiv>
      <glossdiv>
            <title>GT 4.0 Execution Management</title>
             
            <glossentry id="batch-scheduler">
                  <glossterm>batch scheduler </glossterm>
                  <glosssee>scheduler</glosssee>
            </glossentry>
            
            <glossentry id="condor">
                  <glossterm>Condor</glossterm>
            <glossdef><para>A job scheduler mechanism supported by GRAM.</para>
                  <ulink url="http://www.cs.wisc.edu/condor/">http://www.cs.wisc.edu/condor/</ulink>
          </glossdef>
            </glossentry>
                                    
            <glossentry id="globusrun-ws">
                  <glossterm>globusrun-ws</glossterm>
           <glossdef> <para>A command line program used to submit jobs to a WS GRAM service. [add link to ref page]</para></glossdef>
            </glossentry>
            
           <glossentry id="gram">
                 <glossterm>Grid Resource allocation and Management</glossterm>
                 <acronym>GRAM</acronym>
                 <glossdef><para>[FIXME]</para></glossdef>
           </glossentry>
            
           <glossentry id="job-description"> 
                 <glossterm>job description</glossterm>
            <glossdef><para>Term used to describe a WS GRAM job for GT4.</para></glossdef>
           </glossentry>
            
            <glossentry id="job-scheduler">
                  <glossterm>job scheduler </glossterm>
                  <glosssee>scheduler</glosssee>
            </glossentry>

            <glossentry id="lsf"><glossterm>LSF</glossterm>
            <glossdef> <para>A job scheduler mechanism supported by GRAM.</para>
                  <ulink url="http://www.platform.com/products/LSF/">http://www.platform.com/products/LSF/</ulink></glossdef>
            </glossentry>
                        
            <glossentry id="meta-scheduler"><glossterm>meta-scheduler</glossterm>
            <glossdef><para>A program that typically operates at a higher level than a job scheduler (typically, above the GRAM level).  
                  It schedules and submits jobs to GRAM services.</para></glossdef>
            </glossentry>
            
            <glossentry id="mejs">
                  <glossterm>Managed Executable Job Service</glossterm>
                  <acronym>MEJS</acronym>
                  <glossdef><para>[FIXME]</para></glossdef>
            </glossentry>
            
            <glossentry id="mjfs">
                  <glossterm>Managed Job Factory Service</glossterm>
                  <acronym>MJFS</acronym>
                  <glossdef><para>[FIXME]</para></glossdef>
            </glossentry>
            
            <glossentry>
                  <glossterm>Managed Multi Job Service</glossterm>
                  <acronym>MMJS</acronym>
                  <glossdef><para>[FIXME]</para></glossdef>
            </glossentry>
            
            <glossentry id="mmjs-subjob">
                  <glossterm>MMJS subjob</glossterm>
                  <glossdef><para>One of the executable jobs in a multijob rendezvous.</para></glossdef>
            </glossentry>
            
            <glossentry id="multijob">
                  <glossterm>multijob</glossterm>
                  <glossdef><para>A job that is itself composed of several executable jobs; these are processed by the MMJS subjob.</para></glossdef>
            </glossentry>
            
            <glossentry id="multijob-rendezvous">
                  <glossterm>multijob rendezvous</glossterm>
                  <glossdef><para>A mechanism used by GRAM to synchronize between job processes in a multiprocess job and between.</para></glossdef>
            </glossentry> 

            <glossentry id="pbs">
                  <glossterm>Portable Batch System</glossterm>
                  <acronym>PBS</acronym>
                  <glossdef><para>A job scheduler mechanism supported by GRAM. http://www.openpbs.org</para></glossdef>
            </glossentry>
            
            <glossentry id="rsl">
                  <glossterm>Resource Specification Language</glossterm>
                  <acronym>RSL</acronym>
                  <glossdef><para>Term used to describe a GRAM job for GT2 and GT3 (note: not the same as RLS - the Replica Location Service) </para></glossdef>  
            </glossentry>                                 
            
            <glossentry id="scheduler">
                  <glossterm>scheduler</glossterm>
                  <glossdef><para>Term used to describe a job scheduler mechanism to which GRAM interfaces. 
            It is a networked system for submitting, controlling, and
            monitoring the workload of batch jobs in one or more computers. The
            jobs or tasks are scheduled for execution at a time chosen by the
            subsystem according to an available policy and availability of
            resources. Popular job schedulers include Portable Batch System (PBS),
                        Platform LSF, and IBM LoadLeveler.</para></glossdef>
            </glossentry>
            
            <glossentry id="scheduler-adapter">
                  <glossterm>scheduler adapter</glossterm>
                  <glossdef><para>The interface used by GRAM to communicate/interact with a job scheduler mechanism.  
            In GT4 this is both the perl submission scripts and the SEG program.</para></glossdef>
            </glossentry>
            
            <glossentry id="seg">
                  <glossterm>Scheduler Event Generator</glossterm>
                  <acronym>SEG</acronym>
                  <glossdef><para>[FIXME]</para></glossdef>
            </glossentry>
            
            <glossentry id="sudo">
                  <glossterm>superuser do</glossterm>
                  <abbrev>sudo</abbrev>
                  <glossdef><para>Allows a system administrator to give certain users (or groups of users) the ability to run some 
                        (or all) commands as root or another user while logging the commands and arguments.  </para>
                        <ulink url="http://www.courtesan.com/sudo/">http://www.courtesan.com/sudo/</ulink></glossdef>
            </glossentry>
            
            <glossentry id="uuid">
                  <glossterm>Universally Unique Identifier</glossterm>
                  <acronym>UUID</acronym>
                  <glossdef><para>Immutable and unique across time and space.</para></glossdef>
            </glossentry>
            
            
      </glossdiv>
      <glossdiv>
            <title>GT 4.0 Information Services/MDS</title>
            <glossentry id="aggregator-framework">
                  <glossterm>Aggregator Framework</glossterm>
                  <glossdef>
                        <para>A software framework used to build services that collect and aggregate
                              data. MDS4 Services (such as the Index and Trigger services) are built
                              on the Aggregator Framework, and are sometimes called Aggregator
                              Services.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="aggregator-services">
                  <glossterm>aggregator services</glossterm>
                  <glossdef>
                        <para> Services that are built on the Aggregator Framework, such as the MDS4
                              Index Service.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="aggregator-source">
                  <glossterm>aggregator source</glossterm>
                  <glossdef>
                        <para> A Java class that implements an interface (defined as part of the
                              Aggregator Framework) to collect XML-formatted data. MDS4 contains
                              three aggregator sources: the query aggregator source, the
                              subscription aggregator source, and the execution aggregator
                        source.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="execution-aggregator-source">
                  <glossterm>execution aggregator source</glossterm>
                  <glossdef>
                        <para> An Aggregator Source (included in MDS4) that executes an
                              administrator-supplied program to collect information and make it
                              available to an Aggregator Service such as the Index Service.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="index-service">
                  <glossterm>Index Service</glossterm>
                  <glossdef>
                        <para>A registry similar to UDDI, but much more flexible. Indexes collect
                              information and publish that information as WSRF resource
                        properties.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="information-provider">
                  <glossterm>information provider</glossterm>
                  <glossdef>
                        <para>A "helper" software component that collects or formats resource
                              information, for use by an aggregator source or by a WSRF service when
                              creating resource properties.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="Ganglia">
                  <glossterm>Ganglia</glossterm>
                  <glossdef>
                        <para>A cluster monitoring tool. <ulink url="http://ganglia.sourceforge.net"
                                    >http://ganglia.sourceforge.net</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="Hawkeye">
                  <glossterm>Hawkeye</glossterm>
                  <glossdef>
                        <para>A monitoring service for Condor Pools. <ulink
                                    url=" http://www.cs.wisc.edu/condor/hawkeye/">
                                    http://www.cs.wisc.edu/condor/hawkeye/</ulink>
                        </para>
                  </glossdef>
            </glossentry>
            <glossentry id="query-aggregator-source">
                  <glossterm>query aggregator source</glossterm>
                  <glossdef>
                        <para>An aggregator source (included in MDS4) that polls a WSRF service for
                              resource property information.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="subscription-aggregator-source">
                  <glossterm>subscription aggregator source</glossterm>
                  <glossdef>
                        <para>An aggregator source (included in MDS4) that collects data from a WSRF
                              service via WSRF subscription/notification.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="trigger-service">
                  <glossterm>Trigger Service</glossterm>
                  <glossdef>
                        <para>A service that collects information and compares that data against a
                              set of conditions defined in a configuration file. When a condition is
                              met, or triggered, an action takes place, such as emailing a system
                              administrator when the disk space on a server reaches a
                        threshold.</para>
                  </glossdef>
            </glossentry>
            <glossentry id="webmds">
                  <glossterm>WebMDS</glossterm>
                  <glossdef>
                        <para>A web-based interface to WS-RF resource property information that can
                              be used as a user-friendly front-end to the Index Service or other
                              WS-RF services.</para>
                  </glossdef>
            </glossentry>
      </glossdiv>

