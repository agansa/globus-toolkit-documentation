<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[

<!ENTITY % xinclude SYSTEM "../../../xinclude.mod" >
%xinclude;

]>
<book id="javacogAdmin">
<title>GT <replaceable role="entity">version</replaceable> Java CoG Kit: System Administrator's Guide</title>
<titleabbrev>System Administrator's Guide</titleabbrev> 

<bookinfo><abstract><title>Introduction</title>
<para>This guide contains
  installation and configuration information for system administrators installing
  the Java CoG Kit. It explains how to install, configure and test the installation. </para>
<para>    <important>
        <simpara> This information is in addition to the basic Globus Toolkit prerequisite, 
          overview, installation, security configuration instructions in the <olink targetdoc="gtadmin"/>.  
          Read through this guide before continuing!</simpara>  
    </important></para>
</abstract></bookinfo>
<chapter id="javacog-admin-installing"><title>Building and installing</title>

  <para>Java CoG Kit is distributed as part of a default GT <replaceable role="entity">version</replaceable> installation.
        For basic installation instructions, see the <olink targetdoc="gtadmin"/>. No extra installation steps are required for this component.</para>
  <para>The following are optional instructions for more advanced types of installations.
  These are for those advanced users who want to build the latest code from CVS or are just interested in the Java CoG Kit.</para>
  <section id="javacog-admin-buildfromsource">
    <title>Building from source</title>
    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row valign="top">
            <entry>1.</entry>
            <entry>
              <para>
Obtain the source code for Java CoG Kit:
</para>
              <formalpara>
                <title>From CVS</title>
                <para>
<orderedlist>
                    <listitem>
                      <para>
  To get the latest source from CVS execute:
 <screen> cvs -d :pserver:anonymous@cvs.globus.org:/home/dsl/cog/CVS \
     checkout jglobus</screen>
 </para>
                    </listitem>
                    <listitem>
                      <para>
  Change into the <computeroutput>jglobus</computeroutput> directory.
 <screen> cd jglobus</screen>
 </para>
                    </listitem>
                  </orderedlist></para>
              </formalpara>
              <formalpara>
                <title>From source distribution</title>
                <para><orderedlist>
                    <listitem>
                      <para>
   Untar or unzip the distribution archive.
   <screen> tar xvfz cog-XXX-src.tar.gz</screen>
 </para>
                    </listitem>
                    <listitem>
                      <para>
  Change into the unpacked distribution directory.
   <screen> cd cog-XXX</screen>
 </para>
                    </listitem>
                  </orderedlist></para>
              </formalpara>
            </entry>
          </row>
          <row valign="top">
            <entry>2.</entry>
            <entry>
              <para>Run:
 <screen> ant all</screen>
 </para>
              <para></para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
  <section id="javacog-admin-installcoreonlybinary">
    <title>Installing binary distribution</title>
    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row valign="top">
            <entry>1.</entry>
            <entry>Untar or unzip the distribution archive. <screen> tar xvfz cog-XXX-tar.gz</screen></entry>
          </row>
          <row valign="top">
            <entry>2.</entry>
            <entry>Change into the unpacked distribution directory. <screen> cd cog-XXX</screen></entry>
          </row>
          <row valign="top">
            <entry>3.</entry>
            <entry>Set the <computeroutput>COG_INSTALL_PATH</computeroutput> environment variable to the unpacked distribution directory. <para>On Windows:
<screen> set COG_INSTALL_PATH=c:\cog-1.2</screen>
</para><para>On Unix/Linux:
<screen> setenv COG_INSTALL_PATH /soft/cog-1.2/</screen> or <screen> export COG_INSTALL_PATH=/soft/cog-1.2/</screen>
</para></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
    <para></para>
  </section>
</chapter>

<chapter id="javacog-admin-configuring"><title>Configuring</title>

<para>
In general no extra configuration is required to use Java CoG Kit. However, in certain cases additional configuration might be required. The Java CoG Kit configuration file is placed in <computeroutput>$HOME/.globus/cog.properties</computeroutput> on Unix/Linux machines or <computeroutput>%USERPROFILE%\.globus\cog.properties</computeroutput> on Windows machines.
</para>

  <section id="javacog-admin-configuring-trusted-certs">
      <title>Trusted Certificates Location</title>

      <para> Trusted certificates can be configured as described below
      and are loaded in the specified order:

      <orderedlist>

      <listitem><para>
      Property <constant>cacerts</constant> in configuration file
      cog.properties file can be used to set the trusted certificates.
      The value of the property is a list of comma-separated CA
      certificates or directories of certificates. Example:</para>

        <screen>
	  cacert = /home/gawor/MyCaCert.pem, /etc/grid-security/certificates/
         </screen>
        <para>If a directory is specified in the list, all certificate
        files within that directory with .&lt;digit&gt; extension will be
        loaded.</para>
        </listitem>

      <listitem><para>
      The system property <constant>X509_CERT_DIR</constant> can be
      used to configured trusted certificates. It is used if the
      cog.properties file is not found or the
      <constant>cacert</constant> property is not set
      </para></listitem>

      <listitem><para>
      Trusted certificates can be placed in
      <filename>${user.home}/.globus/certificates</filename>
      directory. If system property is not set, this location is
      checked.
      </para></listitem>

      <listitem><para>
      The certificates can be placed in
      <filename>/etc/grid-security/certificates</filename>
      directory. This directory is checked on Unix/Linux machines if
      certificates are not found as described in previous steps.
      </para></listitem>
           
      </orderedlist>

        If one of the above directories with certificates is
        found, all the certificates in that directory will be loaded
        and used. If no directory is found, the Java CoG will not
        work.</para>

  </section>

  <section id="javacog-admin-configuring-user-certificate">
      <title>User Certificate Location</title>

      <para> User certificate can be configured as described below
      and an attempt is made to find the file in the order specified:

      <orderedlist>

      <listitem><para>
      Location of the file can be specified as value of property
      <constant>usercert</constant> in configuration file
      cog.properties
      </para></listitem>

      <listitem><para>
      Location of the user certificate can be set as value of
      environment variable <constant>X509_USER_CERT</constant>. This
      property is used if cog.properties file is not configured or the
      <constant>usercert</constant> property is not specified in the
      file.
      </para></listitem>

      <listitem><para>
      The certificate can be placed in default location
      <filename>${user.home}/.globus/usercert.pem</filename>. If none
      of the above configuration is found, the library defaults to
      this location.
      </para></listitem>
      </orderedlist>
     </para>
  </section>

  <section id="javacog-admin-configuring-user-key">
      <title>User Private Key Location</title>

      <para> User private key can be configured as described below
      and an attempt is made to find the file in the order specified:

      <orderedlist>

      <listitem><para>
      Location of the file can be specified as value of property
      <constant>userkey</constant> in configuration file
      cog.properties
      </para></listitem>

      <listitem><para>
      Location of the user private key can be set as value of
      environment variable <constant>X509_USER_KEY</constant>. This
      property is used if cog.properties file is not configured or the
      <constant>userkey</constant> property is not specified in the
      file.
      </para></listitem>

      <listitem><para>
      The private key can be placed in default location
      <filename>${user.home}/.globus/userkey.pem</filename>. If none
      of the above configuration is found, the library defaults to
      this location.
      </para></listitem>
      </orderedlist>
     </para>
  </section>

  <section id="javacog-admin-configuring-proxy">
    <title>Proxy file Location</title>

      <para> Proxy file can be configured as described below
      and an attempt is made to find the file in the order specified:

      <orderedlist>

      <listitem><para>
      Location of the file can be specified as value of property
      <constant>proxy</constant> in configuration file
      cog.properties
      </para></listitem>

      <listitem><para>
      Location of the proxy can be set as value of
      environment variable <constant>X509_USER_PROXY</constant>. This
      property is used if cog.properties file is not configured or the
      <constant>proxy</constant> property is not specified in the
      file.
      </para></listitem>

      <listitem><para>
      If the above configuration is not used, then the library looks for proxy in default location using the following rules:
      <itemizedlist>
      
      <listitem><para>
      If a UID system property is set, and running on a Unix/Linux
      machine it returns /tmp/x509up_u${UID}.
      </para></listitem>

      <listitem><para>
      If on any other machine than Unix/Linux,it returns
      ${tempdir}/x509up_u${UID}, where tempdir is a platform-specific
      temporary directory as indicated by the java.io.tmpdir system
      property.
      </para></listitem>

      <listitem><para>
      If a UID system property is not set, the username will be used instead
      of the UID. That is, it returns ${tempdir}/x509up_u_${username}
      </para></listitem>

      </itemizedlist>
      </para></listitem>
      </orderedlist>
  
 </para>      
    
    <!-- FIXME -->
    <!-- para>By default Java CoG Kit will try to use the same proxy file as used by the C tools. However, in certain cases Java CoG Kit might fail to determine the right proxy file location. In these cases a proxy file location might need to be specified in the configuration file. To set a specific proxy file location just add the following line to the configuration file:
   </para>


   <screen>proxy=&lt;proxy location&gt;</screen> 
   <para>This has the same effect as setting the <computeroutput>X509_USER_PROXY</computeroutput> environment property or Java system property.</para -->

  </section>

  <section id="javacog-admin-configuring-ip">
    <title>Public IP address</title>
    <para>Sometimes, especially on machines with DHCP enabled, the local IP
          address of the machine might be incorrectly detected by Java or the wrong
          non-public IP address might be used if behind a NAT router or on VPN.
          To configure the public IP 
          address used by Java CoG Kit, add the following line to the 
          configuration file:</para>
    <screen>ip=&lt;current ip&gt;</screen>
    <para>This has the same effect as setting the <computeroutput>GLOBUS_HOSTNAME</computeroutput> environment property or Java system property.</para>
  </section>

  <section id="javacog-admin-configuring-portrange">
    <title>TCP Port Range</title>
    <para>Sometimes it is necessary to restrict the listening port numbers 
           that Java CoG Toolkit will use. To set the port range in the
           configuration file, just add the following line:</para>
    <screen>tcp.port.range=&lt;min&gt;,&lt;max&gt;</screen>
    <para>This has the same effect as setting the <computeroutput>GLOBUS_TCP_PORT_RANGE</computeroutput> environment property or Java system property.</para>
  </section>


</chapter>

<chapter id="javacog-admin-deploying"><title>Deploying</title>
<para>This section does not apply to the Java CoG Kit.</para>
</chapter>

<chapter id="javacog-admin-testing"><title>Testing</title>
<para>There are no tests to test the Java CoG installation. However, the unit tests are available with the source distribution. Since some of the unit tests rely on GT2 services to be running, first make sure that they are running ok. Also, you will need to configure the tests (look for various <computeroutput>test.properties</computeroutput> files) in the source distribution with the appropriate information (for example the right service port, hostname, etc.). Finally, to run the tests do:</para>
<screen>ant test</screen>
</chapter>

<chapter id="javacog-admin-security_considerations"><title>Security considerations</title>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../JavaCoG_Security_Considerations_Frag.xml"/>
</chapter>

<chapter id="javacog-admin-troubleshooting"><title>Troubleshooting</title>
<para>
  Please see the <ulink url="http://www.globus.org/cog/distribution/1.2/FAQ.TXT">FAQ</ulink> and the <ulink url="http://www.globus.org/cog/java/">web page</ulink> for any problems concerning Java CoG Kit. Also, you can send email describing your problem to the <ulink url="mailto:java@globus.org">java@globus.org</ulink> mailing list (<ulink url="http://www.globus.org/subscriptions.php">must subscribe first</ulink>) or search for the problem in the <ulink url="http://www.globus.org/mail_archive/java/threads.html">archives</ulink>.
</para>
</chapter>




</book>