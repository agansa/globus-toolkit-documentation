<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[

<!ENTITY % xinclude SYSTEM "../../xinclude.mod" >
%xinclude;

]>
<reference id="cwscore-cmd"><title>C WS Core Commands</title>

<refentry id="globus-wsc-container">
  <indexterm type="cwscore-howto"><primary>containers</primary><secondary>starting C standalone container</secondary></indexterm>
  <indexterm type="cwscore"><primary>containers</primary><secondary>globus-wsc-container</secondary></indexterm>
<refmeta>
<refentrytitle>globus-wsc-container</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>

<refnamediv>
<refname>globus-wsc-container</refname>
<refpurpose>Host C web services</refpurpose>
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command>globus-wsc-container</command>
<arg choice="opt">-help</arg>
<arg choice="opt">-usage</arg>
<arg choice="opt">-version</arg>
<sbr/>
<arg choice="opt">-bg</arg>
<arg choice="opt">-pidfile <replaceable>PID</replaceable></arg>
<sbr/>
<arg choice="opt">-max <replaceable>MAX-SESSIONS</replaceable></arg>
<sbr/>
<arg choice="opt">-port <replaceable>PORT</replaceable></arg>
<sbr/>
<arg choice="opt">-log <replaceable>LOGPATH</replaceable></arg>
<sbr/>
<arg choice="opt">-nosec</arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>
The <command>globus-wsc-container</command> is a stand-alone
<glossterm>SOAP</glossterm> service hosting container. It listens for SOAP /
HTTP operation requests on a network
port and dispatches those to dynamically loaded service modules. By default,
<command>globus-wsc-container</command> will process SOAP messages until it
receives a SIGINT or SIGTERM signal. In interactive usage, it typically runs
until the user enters <keycombo action="simul">
<keycap>Ctrl</keycap><keycap>C</keycap></keycombo> on the keyboard.
</para>

<para>The full set of command-line options to <command>globus-wsc-container</command> are:

<informaltable colsep="0" rowsep="0">
    <tgroup cols="2">
    <tbody>
        <row>
            <entry>-help</entry>
            <entry>Display a help message and exit</entry>
        </row>
        <row>
            <entry>-usage</entry>
            <entry>Display a short usage message and exit</entry>
        </row>
        <row>
            <entry>-version</entry>
            <entry>Display the program version and exit</entry>
        </row>
        <row>
            <entry>-bg</entry>
            <entry>Run the program as a daemon</entry>
        </row>
        <row>
            <entry>-pid <replaceable>PIDFILE</replaceable></entry>
            <entry>Write the process ID of the program to <replaceable>PIDFILE</replaceable></entry>
        </row>
        <row>
            <entry>-max <replaceable>MAX-SESSIONS</replaceable></entry>
            <entry>Allow at most <replaceable>MAX-SESSIONS</replaceable> concurrent sessions to be processed by the program</entry>
        </row>
        <row>
            <entry>-port <replaceable>PORT</replaceable></entry>
            <entry>Listen for SOAP/HTTP(s) connections on TCP port <replaceable>PORT</replaceable></entry>
        </row>
        <row>
            <entry>-log <replaceable>LOGPATH</replaceable></entry>
            <entry>Log container information to <replaceable>LOGPATH</replaceable></entry>
        </row>
        <row>
            <entry>-nosec</entry>
            <entry>Disable TLS</entry>
        </row>
    </tbody>
    </tgroup>
</informaltable>
</para>

<para>
By default, the <command>globus-wsc-container</command> program picks an
anonymous TCP port within values specified by the GLOBUS_TCP_PORT_RANGE
environment variable, if present. To choose a specific port to listen on,
pass the option <option>-port PORT</option> on the command-line of the process.
</para>


<para>
The <command>globus-wsc-container</command> program can also be run
in the background as a daemon. This is done by passing the <option>-bg</option>
command-line option. This can be combined with the <option>-pidfile PID</option>
option to run in the background and record the PID of the process in a file,
so that the daemon can be easily terminated.
</para>

<para>
By default, the container uses
<glossterm baseform="transport-level security">TLS</glossterm> for SOAP
requests over https. This can be disabled to use unprotected http by passing
the <option>-nosec</option> command-line option to this program. Message-level
security may be enabled on a per-service basis if this is used.
</para>

<para>
To enable CEDPs "best practices" logging, pass the <option>-log LOGPATH</option>
option to the container. The log file will contain name=value pairs for all
events that the container processes.
</para>


<para>
By default the container will accept as many SOAP connections as the operating
system will allow. To throttle the number of outstanding connections that can
be processed in parallel, use the <option>-max MAX-SESSIONS</option>
command-line option.
</para>

</refsect1>

<refsect1><title>Services</title>

<para>
The container looks for services in dynamic modules located in the 
<filename><envar>$GLOBUS_LOCATION</envar>/lib/globus_service_modules</filename> directory.
The Globus Toolkit ships with a number of sample services, test services, and
implementations of the core
<glossterm baseform="Web Services Resource Framework">WSRF</glossterm> services
for implementing Resource Properties, Resource Lifetime, Service Groups, and
Notifications. The <command><olink
targetptr="globus-wsrf-cgen">globus-wsrf-cgen</olink></command> command
parses <glossterm baseform="Web Services Description Language">WSDL</glossterm>
schemas and generates service skeletons which can be used to implement
additional web services.
</para>

</refsect1>

<refsect1><title>Examples</title>
<para>
Start a container in the foreground on port 8443:

<screen>
<prompt>% </prompt><command>globus-wsc-container</command> <option>-port 8443</option>

<computeroutput>Contact: https://grid.example.org:8443/</computeroutput>

</screen>
</para>

<para>
Star a container as a daemon on an anonymous port, with a maximum of 64
parallel sessions, recording the port number to a file and logging to another
file.

<screen>
<prompt>% </prompt><command>globus-wsc-container</command> \
    <option>-bg</option> \
    <option>-pidfile <filename><envar>$GLOBUS_LOCATION</envar>/var/globus-wsc-container.pid</filename></option> \
    <option>-log <filename><envar>$GLOBUS_LOCATION</envar>/var/globus-wsc-container.log</filename></option> \
    <option>-max 64</option>
    > <filename><envar>$GLOBUS_LOCATION</envar>/var/globus-wsc-container.contact</filename>


<prompt>% </prompt><command>cat</command> <filename><envar>$GLOBUS_LOCATION</envar>/var/globus-wsc-container.contact</filename>

<computeroutput>Contact: https://grid.example.org:18332/</computeroutput>

<prompt>% </prompt><command>cat</command> <filename><envar>$GLOBUS_LOCATION</envar>/var/globus-wsc-container.log</filename>

<computeroutput>
ts=2008-06-19T22:43:21.645807Z id=21475 event=globus_service_engine.start engine_id=40235 contact=https://grid.example.org:18332/
</computeroutput>

</screen>
</para>

</refsect1>

</refentry>


<refentry id="globus-wsrf-cgen">
  <indexterm type="cwscore-howto"><primary>stubs</primary><secondary>generating C bindings from WSDL schema files</secondary></indexterm>
  <indexterm type="cwscore"><primary>stubs</primary><secondary>globus-wsrf-cgen</secondary></indexterm>

<refmeta>
<refentrytitle>globus-wsrf-cgen</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>

<refnamediv>
<refname>globus-wsrf-cgen</refname>
<refpurpose>Generate Stubs/Skeletons in C</refpurpose>
</refnamediv>

<refsynopsisdiv><cmdsynopsis>
<command>globus-wsrf-cgen</command>
<arg>-help</arg>
<arg>-dr</arg>
<sbr/>
<arg>-s <replaceable>PACKAGE-NAME</replaceable></arg>
<arg>-sn <replaceable>SERVICE-NAME</replaceable></arg>
<arg>-d DIRECTORY</arg>
<arg>-flavor <replaceable>FLAVOR</replaceable></arg>
<arg>-lang <group><arg choice="plain">c</arg><arg choice="plain">cpp</arg></group></arg>
<sbr/>
<arg>-p <replaceable>PREFIX-MAP-FILE</replaceable></arg>
<arg>-P <replaceable>NAMESPACE=PREFIX</replaceable></arg>
<sbr/>
<arg>-n <replaceable>NAMESPACE-FILE</replaceable></arg>
<arg>-N <replaceable>NAMESPACE</replaceable></arg>
<sbr/>
<arg>-g <replaceable>NAMESPACE-FILE</replaceable></arg>
<arg>-G <replaceable>NAMESPACE</replaceable></arg>
<arg>-gg</arg>
<sbr/>
<arg>-np</arg>
<arg>-nb</arg>
<arg>-nk</arg>
<arg>-ns</arg>
<arg>-nc</arg>
<arg>-no-sources</arg>
<arg>-nt</arg>
<arg>-nf <replaceable>FUNCTION</replaceable></arg>
<sbr/>
<arg>-extra-cppflags <replaceable>CPPFLAGS</replaceable></arg>
<arg>-extra-ldflags <replaceable>LDFLAGS</replaceable></arg>
<arg>-extra-libs <replaceable>LIBS</replaceable></arg>
<sbr/>
<arg choice="plain" rep="repeat"><replaceable>SCHEMA-FILENAME</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1><title>Description</title>
<para>
The <command>globus-wsrf-cgen</command> tool generates C-language bindings from
WSDL and XML Schema files. The input <replaceable>SCHEMA-FILENAME</replaceable>
value should be either a WSDL document containing a service description or an
XML schema file containing type definitions.
</para>

<para>
If a WSDL Schema file is specified as input,
<command>globus-wsrf-cgen</command>
generates a GPT source package containing client stubs, service skeleton and
stubs, and type bindings for included schema types. If an XML Schema file is
specified as input, it generates a GPT source package containing type bindings.
A full description of the generated files is part of the 
<olink targetdoc="cwscoreDeveloper" targetptr="cwscore-developer-bindings">WSDL
to C mapping document</olink>.
</para>

<para>
The full set of command-line options to <command>globus-wsrf-cgen</command>
are:
<informaltable colsep="0" rowsep="0">
    <tgroup cols="2">
    <tbody>
        <row>
            <entry>-help</entry>
            <entry>Display a help message and exit</entry>
        </row>
        <row>
            <entry>-dr</entry>
            <entry>Dry-run: parse the command-line options and display the
            command-line arguments to the
            <command>globus-wsdl-parser</command> program.
            </entry>
        </row>
        <row>
            <entry>-s <replaceable>PACKAGE-NAME</replaceable></entry>
            <entry>Use <replaceable>PACKAGE-NAME</replaceable>_bindings as
            the name for the generated GPT package</entry>
        </row>
        <row>
            <entry>-sn <replaceable>SERVICE-NAME</replaceable></entry>
            <entry>Use <replaceable>SERVICE-NAME</replaceable> as the
            name of the service instead of the name in the WSDL schema
            document.</entry>
        </row>
        <row>
            <entry>-d <replaceable>DIRECTORY</replaceable></entry>
            <entry>Generate the GPT source package in
            <replaceable>DIRECTORY</replaceable>, creating it if does not
            exist.</entry>
        </row>
        <row>
            <entry>-flavor <replaceable>FLAVOR</replaceable></entry>
            <entry>Build the package using the <replaceable>FLAVOR</replaceable>
            GPT <glossterm>flavor</glossterm></entry>
        </row>
        <row>
            <entry>-lang <replaceable>LANG</replaceable></entry>
            <entry>Create the service implementation file with the extension
            matching <replaceable>LANG</replaceable>, either "c" or "cpp".
            See the <olink
            targetptr="globus-wsrf-cgen-limitations">limitations</olink> section
            for more details.</entry>
        </row>
        <row>
            <entry>-p <replaceable>PREFIX-MAP-FILE</replaceable></entry>
            <entry>Use the contents of
            <replaceable>PREFIX-MAP-FILE</replaceable> to define the
            set of strings to prepend to elements, attributes, and types
            in various XML namespaces.
            See the <olink targetptr="globus-wsrf-cgen-namespaces">
            namespace handling</olink> section of this document for more
            details.</entry>
        </row>
        <row>
            <entry>-P <replaceable>NAMESPACE=PREFIX</replaceable></entry>
            <entry>Prepend element, attribute, and type names in the XML
            namespace <replaceable>NAMESPACE</replaceable> 
            with the string <replaceable>PREFIX</replaceable>.
            See the <olink targetptr="globus-wsrf-cgen-namespaces">
            namespace handling</olink> section of this document for more
            details.</entry>
        </row>
        <row>
            <entry>-n <replaceable>NAMESPACE-FILE</replaceable></entry>
            <entry>Generate bindings for schemas in the XML namespaces
            contained in the <replaceable>NAMESPACE-FILE</replaceable>.
            See the <olink targetptr="globus-wsrf-cgen-namespaces">
            namespace handling</olink> section of this document for more
            details.</entry>
        </row>
        <row>
            <entry>-N <replaceable>NAMESPACE</replaceable></entry>
            <entry>Generate bindings for schemas in the XML namespace
            <replaceable>NAMESPACE</replaceable>.
            See the <olink targetptr="globus-wsrf-cgen-namespaces">
            namespace handling</olink> section of this document for more
            details.</entry>
        </row>
        <row>
            <entry>-g <replaceable>NAMESPACE-FILE</replaceable></entry>
            <entry>Do not generate bindings for schemas in the XML namespaces
            contained in the <replaceable>NAMESPACE-FILE</replaceable>.
            See the <olink targetptr="globus-wsrf-cgen-namespaces">
            namespace handling</olink> section of this document for more
            details.</entry>
        </row>
        <row>
            <entry>-G <replaceable>NAMESPACE</replaceable></entry>
            <entry>Do not generate bindings for schemas in the XML namespace
            <replaceable>NAMESPACE</replaceable>.
            See the <olink targetptr="globus-wsrf-cgen-namespaces">
            namespace handling</olink> section of this document for more
            details.</entry>
        </row>
        <row>
            <entry>-gg</entry>
            <entry>Do not generate bindings for core WSRF namespaces. (Used internally only)</entry>
        </row>
        <row>
            <entry>-np</entry>
            <entry>Do not generate a GPT package. Only create source files from
            the schemas. Implies -nb.</entry>
        </row>
        <row>
            <entry>-nb</entry>
            <entry>Do not attempt to run <command>configure</command> and
            <command>make dist</command> on the generated GPT
            source package. </entry>
        </row>
        <row>
            <entry>-nk</entry>
            <entry>Do not generate a skeleton service implementation. Used
            in Makefiles for packages that want to generate the types at build
            time, but already contain a full implementation of the service.
            </entry>
        </row>
        <row>
            <entry>-ns</entry>
            <entry>Do not generate service bindings and skeletons. Useful
            for creating types- or client-only packages.
            </entry>
        </row>
        <row>
            <entry>-nc</entry>
            <entry>Do not generate client bindings. Useful
            for creating types- or service-only packages.
            </entry>
        </row>
        <row>
            <entry>-nt</entry>
            <entry>Do not generate type bindings. Useful for creating 
            separate service or client bindings that depend on a common
            types package.</entry>
        </row>
        <row>
            <entry>-no-sources</entry>
            <entry>Delay generating C source files until the package is built.
            By default the package Makefile contains a list of
            source files. This option delays the creation of the files and
            the list until build time. This can be used to avoid storing
            dynamic files in a version control system.
            </entry>
        </row>
        <row>
            <entry>-nf <replaceable>FUNCTION</replaceable></entry>
            <entry>Do not generate an implementation of
            <replaceable>FUNCTION</replaceable>. This is useful if extra
            semantic information is needed to serialize or deserialize
            a particular data type (for example, the wsnt:TopicExpressionType
            requires different processing based on the value of the Dialect
            </entry>
        </row>
        <row>
            <entry>-extra-cppflags <replaceable>CPPFLAGS</replaceable></entry>
            <entry>Add <replaceable>CPPFLAGS</replaceable> to the preprocessor
            command-line for this package.</entry>
        </row>
        <row>
            <entry>-extra-ldflags <replaceable>LDFLAGS</replaceable></entry>
            <entry>Add <replaceable>LDFLAGS</replaceable> to the linker
            command-line for this package.</entry>
        </row>
        <row>
            <entry>-extra-libs <replaceable>LIBS</replaceable></entry>
            <entry>Add <replaceable>LIBS</replaceable> to the libraries to
            link with this package.</entry>
        </row>
    </tbody>
    </tgroup>
</informaltable>
</para>

<refsect2 id="globus-wsrf-cgen-namespaces">
    <title>Namespace Handling</title>
    <para>
    XML and WSDL schemas generally contain a
    <varname>targetNamespace</varname> attribute which distinguishes
    operations, elements, attributes, type, etc from others with the same name.
    The C language does not define namespaces.
    <command>globus-wsrf-cgen</command> instead uses prefixes to distinguish
    similarly-named data types and functions. There are two ways to define
    a namespace prefix with <command>globus-wsrf-cgen</command>. The
    <option>-P</option> command-line option defines a single namespace prefix,
    and the <option>-p</option> command-line option instructs
    <command>globus-wsrf-cgen</command> to load a set of prefix definitions
    from a file (one per line).
    </para>

    <para>
    For example, consider the namepace <literal>http://counter.com</literal>
    from the sample CounterService. In the schema for that service, there is 
    an element named <literal>Value</literal>. the command-line option
    <option>-P http://counter.com=counter_</option> will cause
    <command>globus-wsrf-cgen</command> to generate bindings for that element
    with the name <literal>counter_Value</literal>.
    </para>

    <para>
    If a service is built from several namespaces it might make sense
    instead to use the <option>-P</option> parameter instead. Using the same
    service as the previous example, we could instead create a file containing
    <screen>
http://counter.com=counter_
http://another.counter.com=another_counter_
</screen>
    to generate C prefixes for multiple namespaces.
    </para>

    <para>A service may be composed of operations and data types from multiple
    namespaces.  By default <command>globus-wsrf-cgen</command> generates
    bindings for all namespaces except those used by the core WSRF
    specifications. These are (along with their C prefixes):

    <table id="cwscore-wsrf-namespaces-and-prefixes" colsep="0" rowsep="0">
        <title>WSRF Core Namespaces and C Prefixes</title>
        <tgroup cols="2">
        <tbody>
            <row>
                <entry>http://www.w3.org/XML/1998/namespace</entry>
                <entry>xml_</entry>
            </row>
            <row>
                <entry>http://www.w3.org/2001/XMLSchema</entry>
                <entry>xsd_</entry>
            </row>
            <row>
                <entry>http://www.w3.org/2005/08/addressing</entry>
                <entry>wsa_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsrf/r-2</entry>
                <entry>wsr_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsrf/rw-2</entry>
                <entry>wsrw_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsrf/bf-2</entry>
                <entry>wsbf_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsrf/rp-2</entry>
                <entry>wsrp_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsrf/rpw-2</entry>
                <entry>wsrpw_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsrf/rl-2</entry>
                <entry>wsrl_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsrf/rlw-2</entry>
                <entry>wsrlw_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsrf/sg-2</entry>
                <entry>wssg_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsrf/sgw-2</entry>
                <entry>wssgw_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsn/b-2</entry>
                <entry>wsnt_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsn/bw-2</entry>
                <entry>wsntw_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wsn/t-1</entry>
                <entry>wstop_</entry>
            </row>
            <row>
                <entry>http://schemas.xmlsoap.org/ws/2002/12/policy</entry>
                <entry>wsp_</entry>
            </row>
            <row>
                <entry>http://schemas.xmlsoap.org/ws/2002/07/utility</entry>
                <entry>wsu_</entry>
            </row>
            <row>
                <entry>http://schemas.xmlsoap.org/ws/2004/04/trust</entry>
                <entry>wst_</entry>
            </row>
            <row>
                <entry>http://www.w3.org/2000/09/xmldsig#</entry>
                <entry>ds_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd</entry>
                <entry>wsse_</entry>
            </row>
            <row>
                <entry>http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd</entry>
                <entry>wsseu_</entry>
            </row>
            <row>
                <entry>http://schemas.xmlsoap.org/ws/2004/04/sc</entry>
                <entry>wsc_</entry>
            </row>
            <row>
                <entry>http://schemas.xmlsoap.org/ws/2004/09/enumeration</entry>
                <entry>wsen_</entry>
            </row>
        </tbody>
        </tgroup>
    </table>
    </para>

    <para>
    Often it is enough for a package to contain bindings for 
    the namespaces unique to the service and compile against other packages
    which contain the bindings for the other namespaces. This control can
    be done positively via the <option>-N</option> and
    <option>-n</option> command-line options.
    </para>

    <para>
    For example, to generate bindings for the
    <literal>http://counter.com</literal> namespace <emphasis>only</emphasis>,  
    pass the command-line option <option>-N http://counter.com</option>. To
    generate for both the <literal>http://counter.com</literal> nd
    <literal>http://another.counter.com</literal> namespaces, either pass
    multiple <option>-N</option> options with one namespace each, or create
    a file containing:
    <screen>
http://counter.com
http://another.counter.com
</screen>
    and pass the name of the file to globus-wsrf-cgen as the parameter to the
    <option>-n</option> command-line option.
    </para>


</refsect2>

</refsect1>

<refsect1 id="globus-wsrf-cgen-examples"><title>Examples</title>
    <para>
    Here is a brief example of the <command>globus-wsrf-cgen</command>
    command. For more details, see the <olink targetdoc="cwscoreDeveloper" targetptr="cwscore-developer-tutorials">
    tutorials in the C WS Core developer documentation</olink>.
    </para>

    <para>Create bindings for a service in the http://counter.com namespace:

    <screen>
<prompt>% </prompt><command>globus-wsrf-cgen</command> <option>-d counter</option> \
    <option>-N http://counter.com</option> \
    <option>-s counter</option> \
    <option>-P http://counter.com=counter_</option> \
    <filename><envar>$GLOBUS_LOCATION</envar>/share/schemas/core/samples/counter_service.wsdl</filename>
<computeroutput>
<![CDATA[













Creating Bindings Package

A new package has been created at /home/griduser/counter/counter_bindings-1.2.tar.gz
To install, use the following command:

$GLOBUS_LOCATION/sbin/gpt-build /Users/bester/tmp/foo/counter/counter_bindings-1.2.tar.gz <flavor>]]>
</computeroutput>
<prompt>% </prompt>
    </screen>
    </para>
</refsect1>

<refsect1 id="globus-wsrf-cgen-limitations"><title>Limitations</title>
<para>
  <itemizedlist>
    <listitem>
    <simpara>
      This program only generates bindings from document/literal style WSDL
      schemas.
      IBM developerworks has <ulink url="http://www.ibm.com/developerworks/webservices/library/ws-whichwsdl/">an article describing the different WSDL schema
      styles</ulink>.
       </simpara></listitem>
    <listitem>
        <simpara>
            The bindings generated when <option>-lang cpp</option> is used
            are ANSI-C. However, all C++ keywords are avoided and no constructs
            that differ between C and C++ are used. This command-line option
            merely creates a makefile which compiles the service implementation
            with the C++ compiler.
        </simpara>
    </listitem>
    <listitem>
        <simpara>
            Not all XML Schema constructs are supported. In particular,
            abstract types, substitution groups, and nested sequences are not
            implemented.
        </simpara>
    </listitem>
  </itemizedlist>
</para>
</refsect1>
</refentry>

<refentry id="globus-wsrf-destroy">
  <indexterm type="cwscore-howto"><primary>resource</primary><secondary>destroying</secondary></indexterm>
  <indexterm type="cwscore"><primary>resource</primary><secondary>globus-wsrf-destroy</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsrf-destroy</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsrf-destroy</refname>
    <refpurpose>Set the scheduled termination time for a WSRF resource.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsrf-destroy [OPTIONS]... SERVICE-SPECIFIER</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Set the scheduled termination time for a WSRF resource.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen>globus-wsrf-destroy [OPTIONS]... SERVICE-SPECIFIER</screen>
    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>
       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>

       <para><emphasis>Examples:</emphasis></para>
       <screen><prompt>% </prompt><command>globus-wsrf-destroy</screen> <option>-e widget.epr</option>
<computeroutput>Resource destroyed</computeroutput> </screen>

       <simpara>Contents of <emphasis>widget.epr</emphasis>:</simpara>
       <screen>
<![CDATA[<ns01:EndpointReference xmlns:ns01="http://schemas.xmlsoap.org/ws/2004/03/addressing">
  <ns01:Address>http://globus.my.org:8080/wsrf/services/WidgetService</ns01:Address>
  <ns01:ReferenceProperties>
    <ResourceID xmlns:ns02="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns03="http://www.w3.org/2001/XMLSchema" ns02:type="ns03:string">7f554f7c-efd9-11da-97a5-00096b86f788</ResourceID>
  </ns01:ReferenceProperties>
</ns01:EndpointReference>]]>
       </screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
          If the resource is destroyed successfull, the string
          <computeroutput>Resource destroyed</computeroutput>
          will be displayed to <emphasis>stdout</emphasis> and the program will
          terminate with exit code 0.  In the case of an error, the
          type of error will be displayed to <emphasis>stderr</emphasis> and
          the program will terminate with a non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsrf-set-termination-time">
  <indexterm type="cwscore-howto"><primary>resource</primary><secondary>setting the scheduled termination time</secondary></indexterm>
  <indexterm type="cwscore"><primary>resource</primary><secondary>globus-wsrf-set-termination-time</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsrf-set-termination-time</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsrf-set-termination-time</refname>
    <refpurpose>Set the scheduled termination time for a WSRF resource.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsrf-set-termination-time [OPTIONS]... SERVICE-SPECIFIER TERMINATION-TIME</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Set the scheduled termination time for a WSRF resource.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen>globus-wsrf-set-termination-time [OPTIONS]... SERVICE-SPECIFIER TERMINATION-TIME</screen>

    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>

       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>
       <para>
           TERMINATION-TERMINATION: [SECONDS | 'infinity']
       </para>

       <para><emphasis>Examples:</emphasis></para>
       <screen>
           <prompt>% </prompt><command>globus-wsrf-set-termination-time -e widget.epr `expr 24 \* 60 \* 60`</command>
           <computeroutput>Termination time set to 2006-05-31T20:18:43Z</computeroutput>
       </screen>

       <simpara>Contents of <emphasis>widget.epr</emphasis>:</simpara>
       <screen>
&lt;ns01:EndpointReference xmlns:ns01="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
  &lt;ns01:Address&gt;http://globus.my.org:8080/wsrf/services/WidgetService&lt;/ns01:Address&gt;
  &lt;ns01:ReferenceProperties&gt;
    &lt;ResourceID xmlns:ns02="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns03="http://www.w3.org/2001/XMLSchema" ns02:type="ns03:string"&gt;7f554f7c-efd9-11da-97a5-00096b86f788&lt;/ResourceID&gt;
  &lt;/ns01:ReferenceProperties&gt;
&lt;/ns01:EndpointReference&gt;
       </screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
          If the termination time is set successfully, the string
          <computeroutput>Termination time set to YYYY-MM-DD-THH:MM:SS[.MSEC]Z</computeroutput>
          will be displayed to <emphasis>stdout</emphasis> and the program will
          terminate with exit code 0.  In the case of an error, the
          type of error will be displayed to <emphasis>stderr</emphasis> and
          the program will terminate with a non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsrf-query">
  <indexterm type="cwscore-howto"><primary>resource</primary><secondary>querying resource properties</secondary></indexterm>
  <indexterm type="cwscore-howto"><primary>resource properties</primary><secondary>querying</secondary></indexterm>
  <indexterm type="cwscore"><primary>resource</primary><secondary>globus-wsrf-query</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsrf-query</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsrf-query</refname>
    <refpurpose>Query a WSRF resource's Resource Property document</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsrf-query [OPTIONS]... SERVICE-SPECIFIER QUERY-EXPRESSION</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Perform an XPATH query on a resource property document.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen>globus-wsrf-query [OPTIONS]... SERVICE-SPECIFIER QUERY-EXPRESSION</screen>

       <table>
         <title>Application-specific options</title>
         <tgroup cols="2">
           <tbody>
             <row>
               <entry>
                 <command>-n | ----nsMapFile FILENAME.</command>
               </entry>
               <entry>
                 <para>
                     Use the namespace map entries in
                     <emphasis>FILENAME</emphasis> in the XPATH context.
                 </para>
               </entry>
             </row>
             <row>
               <entry>
                 <command>-N | --namespace PREFIX=NAMESPACE-URI</command>
               </entry>
               <entry>
                 <para>
                     Create a namespace mapping in the XPATH context for
                     the <emphasis>PREFIX</emphasis> string to resolve to the
                     <emphasis>NAMESPACE-URI</emphasis> namespace.
                 </para>
               </entry>
             </row>
             <row>
               <entry>
                 <command>-D | --dialect DIALECT-URI</command>
               </entry>
               <entry>
                 <para>
                    Set query dialect to <emphasis>DIALECT-URI</emphasis>. The
                    value <command>targeted</command>
                    will be interpreted as
                    <command>http://wsrf.globus.org/core/query/targetedXPath</command>
                    (default: <command>http://www.w3.org/TR/1999/REC-xpath-19991116</command>).

                 </para>
               </entry>
             </row>
            </tbody>
        </tgroup>
       </table>

    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>

       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>
       <para>
           QUERY-EXPRESSION: XPath-Expression-String
       </para>

       <para><emphasis>Examples:</emphasis></para>
       <screen><prompt>% </prompt><command>globus-wsrf-query -e widget.epr "//*[local-name() = 'CurrentTime']"</command>
<computeroutput>&lt;ns02:CurrentTime 
    xmlns:ns00="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:ns01="http://www.w3.org/2001/XMLSchema" 
    xmlns:ns02="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd" 
    ns00:type="ns01:dateTime"&gt;2006-05-30T13:53:15Z&lt;/ns02:CurrentTime&gt;</computeroutput>
       </screen>

       <screen><prompt>% </prompt><command>globus-wsrf-query -e widget.epr "//*[local-name() = 'CurrentTime']/text()"</command>
<computeroutput>2006-05-30T13:53:35Z</computeroutput>
       </screen>

       <screen><prompt>% </prompt><command>globus-wsrf-query -e widget.epr \
       -N wsrl=http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd \
       "//wsrl:CurrentTime/text()"</command>
<computeroutput>2006-05-30T13:54:36Z</computeroutput>
       </screen>

       <simpara>Contents of <emphasis>widget.epr</emphasis>:</simpara>
       <screen>
&lt;ns01:EndpointReference xmlns:ns01="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
  &lt;ns01:Address&gt;http://globus.my.org:8080/wsrf/services/WidgetService&lt;/ns01:Address&gt;
  &lt;ns01:ReferenceProperties&gt;
    &lt;ResourceID xmlns:ns02="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns03="http://www.w3.org/2001/XMLSchema" ns02:type="ns03:string"&gt;7f554f7c-efd9-11da-97a5-00096b86f788&lt;/ResourceID&gt;
  &lt;/ns01:ReferenceProperties&gt;
&lt;/ns01:EndpointReference&gt;</screen>
  </refsect1>

    <refsect1><title>Limitations</title>
    <para>
      <itemizedlist>
        <listitem>
          <simpara>
              The namespace mapping option and use of namespace prefixes in the
              <emphasis>XPath-Expression-String</emphasis> does not work when
              communicating with the Java container unless the
              <emphasis>http://wsrf.globus.org/core/query/targetedXPath</emphasis>
              dialect is used.
              </simpara>
          </listitem>
      </itemizedlist>
    </para>
    </refsect1>

  <refsect1>
      <title>Output and Exit Code</title>
      <para>
          If the query is successful, the program displays the output
          of the query to <emphasis>stdout</emphasis> and terminates with
          exit code 0. In the case of an error, the type of error will be displayed to
          <emphasis>stderr</emphasis> and the program will terminate with a
          non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsrf-get-property">
  <indexterm type="cwscore-howto"><primary>resource properties</primary><secondary>getting value</secondary></indexterm>
  <indexterm type="cwscore"><primary>resource properties</primary><secondary>globus-wsrf-get-property</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsrf-get-property</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsrf-get-property</refname>
    <refpurpose>Get a resource property's value</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsrf-get-property [OPTIONS]... SERVICE-SPECIFIER PROPERTY-NAME</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Get the value of a resource property from a WSRF resource.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen>globus-wsrf-get-property [OPTIONS]... SERVICE-SPECIFIER PROPERTY-NAME</screen>

    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>

       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>
       <para>
           PROPERTY-NAME: [{Namespace-URI}]Property-Name
       </para>

       <para><emphasis>Example:</emphasis></para>
       <screen><prompt>% </prompt><command>globus-wsrf-get-property -e widget.epr \
       '{http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd}CurrentTime'</command>
<computeroutput>
&lt;ns02:CurrentTime 
    xmlns:ns00="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:ns01="http://www.w3.org/2001/XMLSchema" 
    xmlns:ns02="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd" 
    ns00:type="ns01:dateTime"&gt;2006-05-30T14:26:35Z&lt;/ns02:CurrentTime&gt;</computeroutput>
        </screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
          If the property exists, its values (if any) are displayed to
          <emphasis>stdout</emphasis> and the program terminates with exit code
          0.  In the case of an error, the type of error will be displayed to
          <emphasis>stderr</emphasis> and the program will terminate with a
          non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsrf-get-properties">
  <indexterm type="cwscore-howto"><primary>resource properties</primary><secondary>getting multiple values</secondary></indexterm>
  <indexterm type="cwscore"><primary>resource properties</primary><secondary>globus-wsrf-get-properties</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsrf-get-properties</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsrf-get-properties</refname>
    <refpurpose>Get multiple resource property value</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsrf-get-properties [OPTIONS]... SERVICE-SPECIFIER PROPERTY-NAME...</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Get the value of multiple resource properties from a WSRF resource.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen>globus-wsrf-get-properties [OPTIONS]... SERVICE-SPECIFIER PROPERTY-NAME...</screen>

    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>

        <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
        </para>
        <para>
           PROPERTY-NAME: [{Namespace-URI}]Property-Name
        </para>

        <para><emphasis>Example:</emphasis></para>
        <screen><prompt>% </prompt><command>globus-wsrf-get-properties \
        -s http://grid.example.org:8080/wsrf/services/WidgetService \
        -k "{http://www.globus.org/namespaces/2004/06/core}WidgetKey" 123 \
        "{http://widgets.com}foo" \
        "{http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd}CurrentTime"</command>
<computeroutput>&lt;ns02:foo
    xmlns:ns00="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ns01="http://www.w3.org/2001/XMLSchema"
    xmlns:ns02="http://widgets.com"
    ns00:type="ns01:string"&gt;
Foo Value String
&lt;/ns02:foo&gt;&lt;ns03:CurrentTime
    xmlns:ns00="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ns01="http://www.w3.org/2001/XMLSchema"
    xmlns:ns03="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd"
    ns00:type="ns01:dateTime"&gt;2006-05-30T16:04:15Z&lt;/ns03:CurrentTime&gt;</computeroutput>
        </screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
          If the properties exist, their values (if any) are displayed to
          <emphasis>stdout</emphasis> and the program terminates with exit code
          0.  In the case of an error, the type of error will be displayed to
          <emphasis>stderr</emphasis> and the program will terminate with a
          non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsrf-insert-property">
  <indexterm type="cwscore-howto"><primary>resource properties</primary><secondary>inserting a value</secondary></indexterm>
  <indexterm type="cwscore"><primary>resource properties</primary><secondary>globus-wsrf-insert-property</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsrf-insert-property</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsrf-insert-property</refname>
    <refpurpose>Insert a resource property value</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsrf-insert-property [OPTIONS]... SERVICE-SPECIFIER PROPERTY-VALUE-FILENAME</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Insert a resource property into a WSRF resource's Resource Properties
        document. The new property will be read from the XML file specified by
        <emphasis>PROPERTY-VALUE-FILENAME</emphasis>.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen>globus-wsrf-insert-property [OPTIONS]... SERVICE-SPECIFIER PROPERTY-VALUE-FILENAME...</screen>

    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>

       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>

       <para><emphasis>Example:</emphasis></para>
       <screen><prompt>% </prompt><command>globus-wsrf-insert-property -e widget.epr widget:foo.xml</command>
       </screen>
       <simpara>Contents of <emphasis>widget.epr</emphasis>:</simpara>
       <screen>
&lt;ns01:EndpointReference xmlns:ns01="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
  &lt;ns01:Address&gt;http://globus.my.org:8080/wsrf/services/WidgetService&lt;/ns01:Address&gt;
  &lt;ns01:ReferenceProperties&gt;
    &lt;ResourceID xmlns:ns02="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns03="http://www.w3.org/2001/XMLSchema" ns02:type="ns03:string"&gt;7f554f7c-efd9-11da-97a5-00096b86f788&lt;/ResourceID&gt;
  &lt;/ns01:ReferenceProperties&gt;
&lt;/ns01:EndpointReference&gt;
       </screen>
       <para>Contents of <emphasis>widget:foo.xml</emphasis>:</para>
       <screen>
&lt;doc&gt;
    &lt;foo xmlns="http://widgets.com"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:type="xsd:string"&gt;
    Foo Value String
    &lt;/foo&gt;
&lt;/doc&gt;
       </screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
          If the property is inserted successfully, the program terminates with
          exit code 0.  In the case of an error, the type of error will be displayed to
          <emphasis>stderr</emphasis> and the program will terminate with a
          non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsrf-update-property">
  <indexterm type="cwscore-howto"><primary>resource properties</primary><secondary>updating a value</secondary></indexterm>
  <indexterm type="cwscore"><primary>resource properties</primary><secondary>globus-wsrf-update-property</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsrf-update-property</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsrf-update-property</refname>
    <refpurpose>Update a resource property value</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsrf-update-property [OPTIONS]... SERVICE-SPECIFIER PROPERTY-VALUE-FILENAME</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Update a resource property in a WSRF resource's Resource Properties
        document. The property's new value will be read from the XML file specified by
        <emphasis>PROPERTY-VALUE-FILENAME</emphasis>. An update operation will replace the 
        value(s) of the resource property with the new value(s) in the property file.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen>globus-wsrf-update-property [OPTIONS]... SERVICE-SPECIFIER PROPERTY-VALUE-FILENAME</screen>

    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>

       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>

       <para><emphasis>Example:</emphasis></para>
       <screen><prompt>% </prompt><command>globus-wsrf-update-property -e widget.epr widget:foo.xml</command></screen>
       <simpara>Contents of <emphasis>widget.epr</emphasis>:</simpara>
       <screen>
&lt;ns01:EndpointReference xmlns:ns01="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
  &lt;ns01:Address&gt;http://globus.my.org:8080/wsrf/services/WidgetService&lt;/ns01:Address&gt;
  &lt;ns01:ReferenceProperties&gt;
    &lt;ResourceID xmlns:ns02="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns03="http://www.w3.org/2001/XMLSchema" ns02:type="ns03:string"&gt;7f554f7c-efd9-11da-97a5-00096b86f788&lt;/ResourceID&gt;
  &lt;/ns01:ReferenceProperties&gt;
&lt;/ns01:EndpointReference&gt;</screen>
       <para>Contents of <emphasis>widget:foo.xml</emphasis>:</para>
       <screen>
&lt;doc&gt;
   &lt;foo xmlns="http://widgets.com"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:type="xsd:string"&gt;
   Foo Value String
   &lt;/foo&gt;
&lt;/doc&gt;
       </screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
          If the property update is successful without any output, then the
          program terminates with exit code 0. In the case of an error, the
          type of error will be displayed to <emphasis>stderr</emphasis> and
          the program will terminate with a non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsrf-delete-property">
  <indexterm type="cwscore-howto"><primary>resource properties</primary><secondary>deleting</secondary></indexterm>
  <indexterm type="cwscore"><primary>resource properties</primary><secondary>globus-wsrf-delete-property</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsrf-delete-property</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsrf-delete-property</refname>
    <refpurpose>Delete a resource property</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsrf-delete-property [OPTIONS] SERVICE-SPECIFIER PROPERTY-NAME</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Delete a resource property from a WSRF resource.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen><command>globus-wsrf-delete-property [OPTIONS]... SERVICE-SPECIFIER PROPERTY-NAME</command></screen>

    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>

       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>
       <para>
           PROPERTY-NAME: [{Namespace-URI}]Property-Name
       </para>

       <para><emphasis>Example:</emphasis></para>
       <screen><prompt>% </prompt><command>globus-wsrf-delete-property \
       -s http://grid.example.org:8080/wsrf/services/WidgetService \
       -k "{http://www.globus.org/namespaces/2004/06/core}WidgetKey" 123 \
       "{http://widgets.com}foo"</command>
       </screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
      If the property is successfully deleted,
      <command>globus-wsrf-delete-property</command> will not print out any output and
      will terminate with the exit code 0.
      In the case of an error, the type of error will be displayed to
      <emphasis>stderr</emphasis> and the program will terminate with a non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsn-get-current-message">
  <indexterm type="cwscore-howto"><primary>notification</primary><secondary>getting current message associated with specific topic</secondary></indexterm>
  <indexterm type="cwscore"><primary>notification</primary><secondary>globus-wsn-get-current-message</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsn-get-current-message</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsn-get-current-message</refname>
    <refpurpose>Get the current message associated with a specified topic</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsn-get-current-message [OPTIONS] SERVICE-SPECIFIER TOPIC-EXPRESSION</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Get the current message associated with a specified topic.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen><command>globus-wsn-get-current-message [OPTIONS]... SERVICE-SPECIFIER TOPIC-EXPRESSION</command></screen>

       <table>
         <title>Application-specific options</title>
         <tgroup cols="2">
           <tbody>
             <row>
               <entry>
                 <command>-N | --namespace PREFIX=NAMESPACE-URI</command>
               </entry>
               <entry>
                 <para>
                     Create a namespace mapping in the XPATH context for
                     the <emphasis>PREFIX</emphasis> string to resolve to the
                     <emphasis>NAMESPACE-URI</emphasis> namespace in the Topic Expression.
                 </para>
               </entry>
             </row>
             <row>
               <entry>
                 <command>-D | --dialect DIALECT-URI</command>
               </entry>
               <entry>
                 <para>
                     Set the Topic Expression dialect to <emphasis>DIALECT-URI</emphasis>.
                     If not specified, the dialect is chosen automatically between
                     <emphasis>http://docs.oasis-open.org/wsn/2004/06/TopicExpression/Simple</emphasis>, 
                     <emphasis>http://docs.oasis-open.org/wsn/2004/06/TopicExpression/Concrete</emphasis>,
                     and <emphasis>http://docs.oasis-open.org/wsn/2004/06/TopicExpression/Full</emphasis> based on the presence of substrings '*', '//', '|', and '/' in the Topic
                     Expression string.
                 </para>
               </entry>
             </row>
            </tbody>
        </tgroup>
       </table>
    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>
       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>
       <literallayout>TOPIC-EXPRESSION: [{Namespace-URI} | prefix ':']RootTopic[/ChildTopic]...
                 TOPIC-EXPRESSION [ '|' TOPIC-EXPRESSION]
                 RootChild or ChildTopic may contain '*' (wildcard) and/or
                 '//' (all descendents) </literallayout>

       <para><emphasis>Example:</emphasis></para>
       <screen><prompt>% </prompt><command>globus-wsn-get-current-message \
       -e widget.epr \
       -N wsrl=http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd \
       'wsrl:TerminationTime'</command>
<computeroutput>
&lt;ns00:ResourcePropertyValueChangeNotification 
  xmlns:ns00="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.xsd" 
  xmlns:ns01="http://www.w3.org/2001/XMLSchema-instance" 
  ns01:type="ns00:ResourcePropertyValueChangeNotificationType"&gt;
    &lt;ns00:NewValue 
      ns01:type="ns00:NewValueType"&gt;
        &lt;ns03:TerminationTime
          xmlns:ns02="http://www.w3.org/2001/XMLSchema"
          xmlns:ns03="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd"
          ns01:type="ns02:dateTime"&gt;2006-05-31T20:10:08Z&lt;/ns03:TerminationTime&gt;
    &lt;/ns00:NewValue&gt;
&lt;/ns00:ResourcePropertyValueChangeNotification&gt;
</computeroutput></screen>
       <simpara>Contents of <emphasis>widget.epr</emphasis>:</simpara>
       <screen>
&lt;ns01:EndpointReference xmlns:ns01="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
  &lt;ns01:Address&gt;http://globus.my.org:8080/wsrf/services/WidgetService&lt;/ns01:Address&gt;
  &lt;ns01:ReferenceProperties&gt;
    &lt;ResourceID
      xmlns:ns02="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:ns03="http://www.w3.org/2001/XMLSchema"
      ns02:type="ns03:string"&gt;7f554f7c-efd9-11da-97a5-00096b86f788&lt;/ResourceID&gt;
  &lt;/ns01:ReferenceProperties&gt;
&lt;/ns01:EndpointReference&gt;
       </screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
      If the Topic exists and has a current message,
      <command>globus-wsn-get-current-message</command> will print the current message
      value to <emphasis>stdout</emphasis> and then terminate with the exit code 0.
      In the case of an error, the type of error will be displayed to
      <emphasis>stderr</emphasis> and the program will terminate with a non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsn-pause-subscription">
  <indexterm type="cwscore-howto"><primary>notification</primary><secondary>pausing subscription</secondary></indexterm>
  <indexterm type="cwscore-howto"><primary>subscribing</primary><secondary>pausing</secondary></indexterm>
  <indexterm type="cwscore"><primary>notification</primary><secondary>globus-wsn-pause-subscription</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsn-pause-subscription</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsn-pause-subscription</refname>
    <refpurpose>Pause a WSRF notification subscription.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsn-pause-subscription [OPTIONS] SERVICE-SPECIFIER</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Pause a WSRF notification subscription.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen><command>globus-wsn-pause-subscription [OPTIONS]... SERVICE-SPECIFIER TOPIC-EXPRESSION</command></screen>

    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>

       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>

       <para><emphasis>Example:</emphasis></para>
       <screen><prompt>% </prompt><command>globus-wsn-pause-subscription \
       -e subscription.epr</command></screen>
       <simpara>Contents of <emphasis>subscription.epr</emphasis>:</simpara>
       <screen>&lt;ns00:EndpointReference
    xmlns:ns00="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
  &lt;ns00:Address&gt;http://globus.my.org:8080/wsrf/services/SubscriptionManagerService&lt;/ns00:Address&gt;
  &lt;ns00:ReferenceProperties&gt;
    &lt;ns03:ResourceID
        xmlns:ns01="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ns02="http://www.w3.org/2001/XMLSchema"
        xmlns:ns03="http://www.globus.org/docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.xsd"
        ns01:type="ns02:string"&gt;7d6430e4-f019-11da-a1b9-00096b86f788&lt;/ns03:ResourceID&gt;
  &lt;/ns00:ReferenceProperties&gt;
&lt;/ns00:EndpointReference&gt;</screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
      If the subscription is successfully paused,
      <command>globus-wsn-pause-subscription</command> will terminate with the
      exit code 0. No further notifications should be expected on the
      Subscription resource until it is resumed again. In the case of an error,
      the type of error will be displayed to <emphasis>stderr</emphasis> and
      the program will terminate with a non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsn-resume-subscription">
  <indexterm type="cwscore-howto"><primary>notification</primary><secondary>resuming subscription</secondary></indexterm>
  <indexterm type="cwscore-howto"><primary>subscribing</primary><secondary>resuming</secondary></indexterm>
  <indexterm type="cwscore"><primary>notification</primary><secondary>globus-wsn-resume-subscription</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsn-resume-subscription</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsn-resume-subscription</refname>
    <refpurpose>Resume a WSRF notification subscription.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsn-resume-subscription [OPTIONS] SERVICE-SPECIFIER</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Resume a subscription.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen><command>globus-wsn-resume-subscription [OPTIONS]... SERVICE-SPECIFIER TOPIC-EXPRESSION</command></screen>

    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>

       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>

       <para><emphasis>Example:</emphasis></para>
       <screen><prompt>% </prompt><command>globus-wsn-resume-subscription \
       -e subscription.epr</command></screen>
       <simpara>Contents of <emphasis>subscription.epr</emphasis>:</simpara>
       <screen>&lt;ns00:EndpointReference
    xmlns:ns00="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
  &lt;ns00:Address&gt;http://globus.my.org:8080/wsrf/services/SubscriptionManagerService&lt;/ns00:Address&gt;
  &lt;ns00:ReferenceProperties&gt;
    &lt;ns03:ResourceID
        xmlns:ns01="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ns02="http://www.w3.org/2001/XMLSchema"
        xmlns:ns03="http://www.globus.org/docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.xsd"
        ns01:type="ns02:string"&gt;7d6430e4-f019-11da-a1b9-00096b86f788&lt;/ns03:ResourceID&gt;
  &lt;/ns00:ReferenceProperties&gt;
&lt;/ns00:EndpointReference&gt;</screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
      If the subscription is successfully resumed,
      <command>globus-wsn-resume-subscription</command> will terminate with the
      exit code 0. Notifications should again flow to the
      Subscription resource. In the case of an error,
      the type of error will be displayed to <emphasis>stderr</emphasis> and
      the program will terminate with a non-0 exit code.
      </para>
  </refsect1>
</refentry>

<refentry id="globus-wsn-subscribe">
  <indexterm type="cwscore-howto"><primary>notification</primary><secondary>subscribing</secondary></indexterm>
  <indexterm type="cwscore-howto"><primary>subscribing</primary></indexterm>
  <indexterm type="cwscore"><primary>notification</primary><secondary>globus-wsn-subscribe</secondary></indexterm>
  <refmeta>
    <refentrytitle>globus-wsn-subscribe</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>globus-wsn-subscribe</refname>
    <refpurpose>Subscribe for notification for a specified topic.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>globus-wsn-subscribe [OPTIONS] SERVICE-SPECIFIER TOPIC-EXPRESSION</command>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Tool description</title>
    <para>
        Subscribe for notification for a specified topic.
    </para>
  </refsect1>
  <refsect1>
    <title>Command syntax</title>
       <screen><command>globus-wsn-subscribe [OPTIONS]... SERVICE-SPECIFIER TOPIC-EXPRESSION</command></screen>

       <table>
         <title>Application-specific options</title>
         <tgroup cols="2">
           <tbody>
             <row>
               <entry>
                 <command>-b | --subEpr FILENAME</command>
               </entry>
               <entry>
                 <para>
                     Save the Subscription Manager EPR in <emphasis>FILENAME</emphasis>.
                     This EPR file can be used with the
                     <olink targetptr='globus-wsn-pause-subscription'>globus-wsn-pause-subscription</olink> and
                     <olink targetptr='globus-wsn-resume-subscription'>globus-wsn-resume-subscription</olink> commands
                 </para>
               </entry>
             </row>
             <row>
               <entry>
                 <command>-N | --namespace PREFIX=NAMESPACE-URI</command>
               </entry>
               <entry>
                 <para>
                     Create a namespace mapping in the XPATH context for
                     the <emphasis>PREFIX</emphasis> string to resolve to the
                     <emphasis>NAMESPACE-URI</emphasis> namespace in the Topic Expression.
                 </para>
               </entry>
             </row>
             <row>
               <entry>
                 <command>-D | --dialect DIALECT-URI</command>
               </entry>
               <entry>
                 <para>
                     Set the Topic Expression dialect to <emphasis>DIALECT-URI</emphasis>.
                     If not specified, the dialect is chosen automatically between
                     <emphasis>http://docs.oasis-open.org/wsn/2004/06/TopicExpression/Simple</emphasis>, 
                     <emphasis>http://docs.oasis-open.org/wsn/2004/06/TopicExpression/Concrete</emphasis>,
                     and <emphasis>http://docs.oasis-open.org/wsn/2004/06/TopicExpression/Full</emphasis> based on the presence of substrings '*', '//', '|', and '/' in the Topic
                     Expression string.
                 </para>
               </entry>
             </row>
            </tbody>
        </tgroup>
       </table>
    <para><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="C_WS_Core_Interface_Commandline_Options_Frag.xml"/></para>

       <para>
           SERVICE-SPECIFIER: [-s URI [-k KEY VALUE] | -e FILENAME]
       </para>
       <literallayout>TOPIC-EXPRESSION: [{Namespace-URI} | prefix ':']RootTopic[/ChildTopic]...
                 TOPIC-EXPRESSION [ '|' TOPIC-EXPRESSION]
                 RootChild or ChildTopic may contain '*' (wildcard) and/or
                 '//' (all descendents) </literallayout>

       <para><emphasis>Example:</emphasis></para>
       <screen><prompt>% </prompt><command>globus-wsn-subscribe \
       -e counter.epr \
       -N counter=http://www.counter.com \
       'counter:Value'</command>
<computeroutput>&lt;ns02:Value
  xmlns:ns00="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:ns01="http://www.w3.org/2001/XMLSchema"
  xmlns:ns02="http://counter.com" ns00:type="ns01:int"&gt;10&lt;/ns02:Value&gt;
&lt;ns02:Value
  xmlns:ns00="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:ns01="http://www.w3.org/2001/XMLSchema"
  xmlns:ns02="http://counter.com"
  ns00:type="ns01:int"&gt;20&lt;/ns02:Value&gt;</computeroutput></screen>
       <simpara>Contents of <emphasis>counter.epr</emphasis>:</simpara>
       <screen>&lt;ns01:EndpointReference
  xmlns:ns01="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
  &lt;ns01:Address&gt;http://globus.my.org:8080//wsrf/services/CounterService&lt;/ns01:Address>
  &lt;ns01:ReferenceProperties&gt;
    &lt;ns04:CounterKey
      xmlns:ns02="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:ns03="http://www.w3.org/2001/XMLSchema"
      xmlns:ns04="http://counter.com/service"
      ns02:type="ns03:string"&gt;1804289383&lt;/ns04:CounterKey&gt;
  &lt;/ns01:ReferenceProperties&gt;
&lt;/ns01:EndpointReference&gt;</screen>
  </refsect1>
  <refsect1>
      <title>Output and Exit Code</title>
      <para>
      <command>globus-wsn-subscribe</command> will print the the contents of
      notification message to <emphasis>stdout</emphasis>. If the message is a
      ResourcePropertyValueChangedNotification message, then only the NewValue
      subelement will be displayed. Otherwise, the entire message will be
      displayed. This program will run until terminated by a signal.  In the
      case of an error, the type of error will be displayed to
      <emphasis>stderr</emphasis> and the program will terminate with a non-0 exit code.
      </para>
  </refsect1>
</refentry>
</reference>
