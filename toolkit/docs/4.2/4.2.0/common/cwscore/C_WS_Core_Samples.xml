<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<chapter id="cwscore-developer-samples">
<title> GT <replaceable role="entity">version</replaceable> Samples for C WS Core </title>

<section id="cwscore-samples-counter"><title>Counter Client</title>
    <indexterm type="cwscore"><primary>samples</primary><secondary>counter client</secondary></indexterm>
<para>
The Counter Client consists of a set of client programs that can be run to interact with the CounterService by creating new counter resources, calling add on those resources, and finally destroying those resources.  The reference to each resource (the EPR) is stored in a file.
</para>
<para>
The sample is a good way to get going fast with C WS-Core client programming, as the user does not have to install/deploy the CounterService&#8212;it is installed by default in GT4 containers.
</para>
<para>
<itemizedlist>
<listitem><para>
<ulink url="tutorials/counter/client/create_count.c">create_count.c</ulink> - this program invokes the createCounter operation on the CounterService and stores the resulting EPR that points to the new counter resource in a file.
</para></listitem>
<listitem><para>
    <ulink url="tutorials/counter/client/add_count.c">add_count.c</ulink> - this program reads the EPR file and invokes the add operation on the resource (of the CounterService) pointed to by the EPR.
</para></listitem>
<listitem><para>
    <ulink url="tutorials/counter/client/destroy_count.c">destroy_count.c</ulink> - this program reads the EPR file and destroys the resource pointed to by the EPR.  Once the resource is destroyed, the EPR is no longer valid, so the file is removed.
</para></listitem>
    <listitem><para><ulink url="tutorials/counter/client/Makefile.example">Makefile.example</ulink> - a Makefile to use for building the counter samples.
</para></listitem>
</itemizedlist>
</para>
<task>
    <title>Building the Example</title>
    <taskprerequisites>
            <variablelist>
                <title>Environment variables</title>
                <varlistentry>
                    <term>GLOBUS_LOCATION</term>
                    <listitem>
                        <simpara>
                        Path where the Globus Toolkit <replaceable role="entity">version</replaceable> is installed.
                        </simpara>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>GLOBUS_FLAVOR_NAME</term>
                    <listitem>
                        <simpara>
                        GPT flavor to build the samples with (e.g. gcc32dbg).
                        </simpara>
                    </listitem>
                </varlistentry>
            </variablelist>
    </taskprerequisites>
    <procedure>
        <step>
            <title>Generate makefile-header</title>
            <screen>globus-makefile-header --flavor=$GLOBUS_FLAVOR_NAME globus_c_wsrf_sample_counter_bindings > makefile_header</screen>
        </step>
        <step>
            <title>Build the examples</title>
            <screen>make -f Makefile.example</screen>
        </step>
    </procedure>
</task>
</section>




</chapter>
