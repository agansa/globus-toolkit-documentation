<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[

<!ENTITY % xinclude SYSTEM "../../../xinclude.mod">
%xinclude;

]>
<book>
 <title>GT <replaceable role="entity">version</replaceable> Java WS Core : User's Guide</title>
 <titleabbrev>User's Guide</titleabbrev>
 <bookinfo>
  <abstract><title>Introduction</title>
   <para>The Java WS Core User's Guide provides general end user-oriented information.</para>
  </abstract>
 </bookinfo>
 <chapter id="javawscore-user-using">
  <title>Using WS Core Commands (Java)</title>
  <para> [FIXME] explain how
  end users typically interact with core in all ws services in gt mainly via commands - provide a common real world example (more than one if applicable.)</para>
  <para>need the following topics:</para>
  <itemizedlist>
   <listitem><para>what is a container?</para></listitem>
   <listitem><para>how do i start the container?</para></listitem>
   <listitem><para>how do i stop the container?</para></listitem>
   <listitem><para> what are the gt java web services and how do i find out about published resources from a web service?</para></listitem>
   <listitem><para>how do i subscribe to a service's topic? - identical to index service</para></listitem>
   <listitem><para>how do i query a resource? - identical to index service</para></listitem>
   <listitem><para> how do i destroy a resource?</para></listitem>
  </itemizedlist>
 </chapter>

  <!-- if end users would typically use only a subset of the core commandlines - could customize this and pull them in individually via xinclude -->
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
   href="../Java_WS_Core_Interface_Commandline_Frag.xml"/>

 <!-- n/a 
<chapter id="javawscore-user-gui"><title>Graphical user interfaces</title>
&Java_WS_Core_Interface_GUI_Frag;
</chapter>
 -->
 <chapter id="javawscore-user-troubleshooting">
  <title>Troubleshooting</title>
  <indexterm type="javawscore-howto">
   <primary>troubleshooting</primary>
   <secondary>for end-users</secondary>
  </indexterm>
  <indexterm type="javawscore">
   <primary>troubleshooting</primary>
   <secondary>for end-users</secondary>
  </indexterm>
  <section id="javawscore-user-notificationconsumer">
   <title>Program fails with &quot;<computeroutput>Failed to acquire notification consumer home
     instance from registry</computeroutput>&quot; error</title>
   <para> Please see <olink targetptr="javawscore-user-runningclients"/> if a client fails with
     &quot;<computeroutput>Failed to acquire notification consumer home instance from registry.
     Caused by javax.naming.NameNotFoundException: Name services is not bound in this
    Context</computeroutput>&quot; error.</para>
  </section>
  <section id="javawscore-user-wsa">
   <title> Container warning: &quot;<computeroutput>The WS-Addressing 'To' request header is
     missing</computeroutput>&quot;</title>
   <para> This warning is logged by the container if the request did not contain the necessary
     <glossterm baseform="Web Services Addressing">WS-Addressing</glossterm> headers. The client
    either did not attempt to send those headers at all or is somehow misconfigured. If you using a
    Java client and launching it directly using the <computeroutput>java</computeroutput> executable
    take a look at <olink targetptr="javawscore-user-runningclients"/>.</para>
  </section>
  <section id="s-javawscore-user-tokenerror">
   <title>
    <computeroutput>java.io.IOException: Token length X &gt; 33554432</computeroutput>
   </title>
   <para> If you see the &quot;<computeroutput>java.io.IOException: Token length X &gt;
    Y</computeroutput>&quot; error in the container log it usually means you are trying to
    connect to HTTPS server using HTTP. For example, the service address specifies
     <computeroutput>8443</computeroutput> as a port number and
    <computeroutput>http</computeroutput> as the protocol name. In general,
    <computeroutput>8443</computeroutput> port number should be used with the
    <computeroutput>https</computeroutput> protocol, and <computeroutput>8080</computeroutput> port
    number should be used with the <computeroutput>http</computeroutput> protocol. </para>
  </section>
  <section id="s-javawscore-user-troubleshooting-containerhang">
   <title>The standalone container appears to hang</title>
   <para>If the standalone container appears to hang, for example the list of deployed services is
    not shown after a while or all requests to the container time out, please see the <olink targetdoc="javawscoreDeveloper"
     targetptr="s-javawscore-developer-debugging-hanged-process">Debugging hanged Java
    process</olink> section for information on how to diagnose this problem. </para>
  </section>
  <section id="s-javawscore-user-docmethoderror">
   <title>
    <computeroutput>java.lang.NoSuchFieldError: DOCUMENT</computeroutput>
   </title>
   <para> The &quot;<computeroutput>java.lang.NoSuchFieldError:
    DOCUMENT</computeroutput>&quot; error usually indicates a mismatch between the version of
    Apache Axis that the code was compiled with and the version of Axis that the code is currently
    running with. Make sure that the same version of Axis is used at compile time and at runtime.
   </para>
  </section>
  <section id="s-javawscore-user-missingkey">
   <title>
    <computeroutput>org.globus.wsrf.InvalidResourceKeyException: Argument key is null / Resource key
     is missing</computeroutput>
   </title>
   <para> The &quot;<computeroutput>org.globus.wsrf.InvalidResourceKeyException: Argument key is
     null</computeroutput>&quot; (or
     &quot;<computeroutput>org.globus.wsrf.InvalidResourceKeyException: Resource key is
    missing</computeroutput>&quot;) error usually indicates that a resource key was not passed
    with the request or that an invalid resource key was passed with the request (that is, the
    element QName of the resource key did not match what the service expected). </para>
   <para>Make sure that the EPR used to invoke the service contains the appropriate resource key. If
    you are using some <olink targetptr="javawscore-commandline">command-line tool</olink> make sure
    to specify the resource key using the <computeroutput>-k</computeroutput> option or pass a
    complete EPR from a file using the <computeroutput>-e</computeroutput> option. </para>
  </section>

   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../Java_WS_Core_Troubleshooting_Frag.xml"/>

 </chapter>
 <appendix id="javawscore-user-RunningJava">
  <title>Running client programs from command line</title>
  <indexterm type="javawscore-howto">
   <primary>running client programs</primary>
   <secondary>from command line</secondary>
  </indexterm>
  <indexterm type="javawscore">
   <primary>running client programs</primary>
   <secondary>from command line</secondary>
  </indexterm>
  <indexterm type="javawscore-howto">
   <primary>client programs</primary>
   <secondary>running client programs</secondary>
   <tertiary>from command line</tertiary>
  </indexterm>
  <indexterm type="javawscore">
   <primary>client programs</primary>
   <secondary>running client programs</secondary>
   <tertiary>from command line</tertiary>
  </indexterm>
  <para> Sometimes it might be necessary to run a Java program directly using the
    <computeroutput>java</computeroutput> executable. There are two recommended ways of doing so
   (the <computeroutput>GLOBUS_LOCATION</computeroutput> environment variable must first be set in
   both cases):</para>
  <important>
   <simpara> If you are not using any of these two methods please take a look at <olink
     targetptr="javawscore-user-runningclients"/>.</simpara>
  </important>
  <section>
   <title>With <computeroutput>globus-devel-env</computeroutput> script help</title>
   <para> The <computeroutput>globus-devel-env</computeroutput> script can be used to set the proper
     <computeroutput>CLASSPATH</computeroutput> environment variable. To set the
     <computeroutput>CLASSPATH</computeroutput> on Windows execute:</para>
   <screen> &gt; %GLOBUS_LOCATION%\etc\globus-devel-env.bat</screen>
   <para> On Unix/Linux machines execute (for bash/sh):</para>
   <screen> $ . $GLOBUS_LOCATION/etc/globus-devel-env.sh</screen>
   <para>or (for csh/tcsh):</para>
   <screen> $ source $GLOBUS_LOCATION/etc/globus-devel-env.csh</screen>
   <para> Once the <computeroutput>globus-devel-env</computeroutput> is executed successfully run
    the Java program, for example:</para>
   <para>On Windows:</para>
   <screen> &gt; java -DGLOBUS_LOCATION=%GLOBUS_LOCATION% foo.MyClass</screen>
   <para>On Unix/Linux:</para>
   <screen> $ java -DGLOBUS_LOCATION=$GLOBUS_LOCATION foo.MyClass</screen>
   <para>
    <emphasis>Note:</emphasis> Passing <computeroutput>-DGLOBUS_LOCATION</computeroutput> is not
    necessary but will enable the client to execute from any directory.</para>
  </section>
  <section>
   <title>Using bootstrap</title>
   <para> Sometimes the above method might fail if the <computeroutput>CLASSPATH</computeroutput>
    environment variable is too long for the OS to handle. With the bootstrap method, a bootstrap
    code is executed first which sets the classpath programmatically and then invokes the specified
    Java program. To invoke a Java program on Windows through bootstrap execute:</para>
   <screen> &gt; java -cp %GLOBUS_LOCATION%\lib\bootstrap.jar
    -DGLOBUS_LOCATION=%GLOBUS_LOCATION% \ org.globus.bootstrap.Bootstrap foo.MyClass</screen>
   <para> On Unix/Linux machines execute:</para>
   <screen> $ java -cp $GLOBUS_LOCATION/lib/bootstrap.jar -DGLOBUS_LOCATION=$GLOBUS_LOCATION \
    org.globus.bootstrap.Bootstrap foo.MyClass</screen>
  </section>
 </appendix>
 <appendix id="javawscore-user-runningclients">
  <title>Running client programs from any directory</title>
  <indexterm type="javawscore-howto">
   <primary>running client programs</primary>
   <secondary>from any directory</secondary>
  </indexterm>
  <indexterm type="javawscore">
   <primary>running client programs</primary>
   <secondary>from any directory</secondary>
  </indexterm>
  <indexterm type="javawscore-howto">
   <primary>client programs</primary>
   <secondary>running client programs</secondary>
   <tertiary>from any directory</tertiary>
  </indexterm>
  <indexterm type="javawscore">
   <primary>client programs</primary>
   <secondary>running client programs</secondary>
   <tertiary>from any directory</tertiary>
  </indexterm>
  <para> A client launched directly through the <computeroutput>java</computeroutput> executable
   might fail if ran from a directory other then the
   <computeroutput>GLOBUS_LOCATION</computeroutput> (this usually happens if the client receives
   notifications). To ensure that a client can be started from any directory:</para>
  <itemizedlist>
   <listitem>
    <para>Set the <computeroutput>GLOBUS_LOCATION</computeroutput> system property on the
      <computeroutput>java</computeroutput> command line.</para>
   </listitem>
   <listitem>
    <para>Put the <computeroutput>GLOBUS_LOCATION</computeroutput> directory as the very first entry
     in the classpath used by the client.</para>
   </listitem>
  </itemizedlist>
  <para> For example on Unix/Linux:</para>
  <screen> $ java -DGLOBUS_LOCATION=$GLOBUS_LOCATION -classpath $GLOBUS_LOCATION:mylib.jar
   foo.MyClass</screen>
  <para>or on Windows:</para>
  <screen> &gt; java -DGLOBUS_LOCATION=%GLOBUS_LOCATION% -classpath %GLOBUS_LOCATION%;mylib.jar
   foo.MyClass</screen>
 </appendix>
 <appendix id="javawscore-user-usage">
  <title>Usage statistics collection by the Globus Alliance</title>
  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
   href="../Java_WS_Core_Usage_Statistics_Frag.xml"/>
 </appendix>
 <glossary role="auto" id="glossary-javawscoreUser">
  <glossdiv><title>A</title>
   <glossentry>
    <glossterm>Irrelevant</glossterm>
    <glossdef>
     <para>If you can see this, the document was processed incorrectly. Use the
      <parameter>glossary.collection</parameter> parameter.</para>
    </glossdef>
   </glossentry>
  </glossdiv>
 </glossary>
</book>
