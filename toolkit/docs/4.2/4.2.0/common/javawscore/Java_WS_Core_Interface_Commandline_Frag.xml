<title>GT 4.0: Java WS Core Command Reference</title>

<partintro>
<para>
These command line tools are available on Unix and Windows platforms and will work in the same way (of course within the platform rules - the path syntax, variable definitions, etc.).
</para>
<para>
The wsrf-* and wsn-* clients should work against any service that supports the given WSRF or WSN operations.
</para>
</partintro>

<refentry id="globus-start-container">
<refmeta>
<refentrytitle>globus-start-container</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>globus-start-container</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>globus-start-container</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>Starts a standalone container. By default a secure container is started on port 8443 and is accessible via HTTPS. On successful startup a list of services will be displayed on the console. By default the non secure (HTTP) container is started on port 8080.</para>

</refsect1><refsect1><title>Command syntax</title>

<screen>
globus-start-container [options]
</screen>

<table><title>Options</title>
<tgroup cols="2"><tbody>

<row>
 <entry><command>-help</command></entry>
 <entry><para>Displays help information about the command.</para></entry>
</row>

<row>
 <entry><command>-p &lt;port&gt;</command></entry>
 <entry><para>Sets the port number for the container.</para></entry>
</row>

<row>
 <entry><command>-quiet</command></entry>
 <entry><para>Does not show a list of services at startup.</para></entry>
</row>

<row>
 <entry><command>-debug</command></entry>
 <entry><para>Enables debug mode.</para></entry>
</row>

<row>
 <entry><command>-nosec</command></entry>
 <entry><para>Starts a non secure (HTTP) container.</para></entry>
</row>

<row>
 <entry><command>-containerDesc &lt;file&gt;</command></entry>
 <entry><para>Specifies a container security descriptor file.</para></entry>
</row>

<row>
 <entry><command>-profile &lt;name&gt;</command></entry>
 <entry><para>Specifies a configuration profile name for the container.</para></entry>
</row>

</tbody></tgroup>
</table>

</refsect1></refentry>
<refentry id="globus-stop-container">
<refmeta>
<refentrytitle>globus-stop-container</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>globus-stop-container</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>globus-stop-container</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Stops a standalone container. By default this command will attempt to stop a container running on <command>localhost:8443</command> and perform a <command>soft</command> shutdown. 
</para>
<para>
The <command>globus-stop-container</command> command invokes a <command>ShutdownService</command> running in the container. By default that service is configured to perform <command>self</command> authorization and therefore the <command>globus-stop-container</command> must be executed with the same credentials as the container is running with. Alternatively, the service can be configured with a gridmap file to allow a subset of users (with their own credentials) to invoke the service (please see the service security deployment descriptor for details).
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>globus-stop-container  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink> ['soft' | 'hard']</screen>
 
<table><title>Shutdown options</title>
<tgroup cols="2"><tbody>
  <row><entry><command>'soft'</command></entry>
  <entry>This option  lets the threads die naturally</entry>
</row>
  <row><entry><command>'hard'</command></entry>
  <entry>This option forces an immediate JVM shutdown. </entry>
</row>
</tbody></tgroup>
</table>

<para>Example:</para>
<screen>
$ globus-stop-container soft
</screen>

</refsect1></refentry>
<refentry id="wsrf-destroy">
<refmeta>
<refentrytitle>wsrf-destroy</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsrf-destroy</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsrf-destroy</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Destroys a resource. 
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>wsrf-destroy  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink></screen>

<para>Example:</para>
<screen>
$ wsrf-destroy -s http://localhost:8080/wsrf/services/CounterService \
   -k "{http://counter.com}CounterKey" 123
</screen>

</refsect1></refentry>
<refentry id="wsrf-set-termination-time">
<refmeta>
<refentrytitle>wsrf-set-termination-time</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsrf-set-termination-time</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsrf-set-termination-time</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>
<para>
Sets a termination time of a resource.
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>wsrf-set-termination-time  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink> &lt;seconds&gt; | 'infinity' </screen>

<para>Example:</para>
<screen>
$ wsrf-set-termination-time -s http://localhost:8080/wsrf/services/CounterService \
   -k "{http://counter.com}CounterKey" 123 30
</screen>

</refsect1></refentry>
<refentry id="wsrf-query">
<refmeta>
<refentrytitle>wsrf-query</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsrf-query</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsrf-query</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>
<para>
Queries resource property document of a resource. By default, a simple XPath query is assumed that returns the entire resource property document.
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>wsrf-query  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink> [query expression] [dialect]</screen>

<para>Examples:</para>
<screen>
$ wsrf-query -s https://127.0.0.1:8443/wsrf/services/DefaultIndexService \
"count(//*[local-name()='Entry'])"
</screen>
<screen>
$ wsrf-query -s https://127.0.0.1:8443/wsrf/services/DefaultIndexService \
"number(//*[local-name()='GLUECE']/glue:ComputingElement/glue:State/@glue:FreeCPUs)=0"
</screen>
<screen>
$ wsrf-query -s http://localhost:8080/wsrf/services/ContainerRegistryService \
   "/*/*/*/*[local-name()='Address']"
</screen>

</refsect1></refentry>
<refentry id="wsrf-get-property">
<refmeta>
<refentrytitle>wsrf-get-property</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsrf-get-property</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsrf-get-property</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>
<para>
Gets a single resource property from a resource.
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>wsrf-get-property  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink> &lt;property&gt;</screen>
<para>
The <command>&lt;property&gt;</command> is a QName of the resource property in the string form: <command>{namespaceURI}localPart</command>.
</para>

<para>Example:</para>
<screen>
$ wsrf-get-property -s http://localhost:8080/wsrf/services/CounterService \
   -k "{http://counter.com}CounterKey" 123 \
  "{http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd}CurrentTime"
</screen>

</refsect1></refentry>
<refentry id="wsrf-get-properties">
<refmeta>
<refentrytitle>wsrf-get-properties</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsrf-get-properties</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsrf-get-properties</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Gets multiple resource properties from a resource.
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>wsrf-get-properties  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink> &lt;property1&gt; [&lt;property2&gt;... &lt;propertyN&gt;]</screen>
<para>
Each <command>&lt;propertyN&gt;</command> is a QName of the resource property in the string form: <command>{namespaceURI}localPart</command>.
</para>

<para>Example:</para>
<screen>
$ wsrf-get-properties -s http://localhost:8080/wsrf/services/CounterService \
  -k "{http://counter.com}CounterKey" 123 \ 
  "{http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd}CurrentTime" \
  "{http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd}TerminationTime"
</screen>

</refsect1></refentry>
<refentry id="wsrf-insert-property">
<refmeta>
<refentrytitle>wsrf-insert-property</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsrf-insert-property</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsrf-insert-property</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Inserts a property into the resource property document of a resource.
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>wsrf-insert-property  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink> &lt;propertyValueFile&gt;</screen>
<para>
The <command>&lt;propertyValueFile&gt;</command> is an XML file that contains the value of the resource property. The QName of the property is the outer most element.
</para>

<para>Example:

Contents of <command>in.xml</command>:
<screen>
 &lt;doc&gt;
   &lt;ns1:foo xmlns:ns1="http://widgets.com"&gt;
     Value1
   &lt;/ns1:foo&gt;
   &lt;ns1:foo xmlns:ns1="http://widgets.com"&gt;
     Value2
   &lt;/ns1:foo&gt;
 &lt;/doc&gt;
</screen>

<screen>
$ wsrf-insert-property -s http://localhost:8080/wsrf/services/WidgetService \
   -k "{http://www.globus.org/namespaces/2004/06/core}WidgetKey" 123 \
   in.xml
</screen>
</para>
</refsect1></refentry>
<refentry id="wsrf-update-property">
<refmeta>
<refentrytitle>wsrf-update-property</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsrf-update-property</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsrf-update-property</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Updates property value in the resource property document of a resource.
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>wsrf-update-property  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink> &lt;propertyValueFile&gt;</screen>
<para>
The <command>&lt;propertyValueFile&gt;</command> is an XML file that contains the value of the resource property. The QName of the property is the outermost element.
</para>

<para>Example:

Contents of <command>in.xml</command>:
<screen>
 &lt;doc&gt;
   &lt;ns1:foo xmlns:ns1="http://widgets.com"&gt;
     Value
   &lt;/ns1:foo&gt;
 &lt;/doc&gt;
</screen>

<screen>
$ wsrf-update-property -s http://localhost:8080/wsrf/services/WidgetService \
   -k "{http://www.globus.org/namespaces/2004/06/core}WidgetKey" 123 \
   in.xml
</screen>
</para>
</refsect1></refentry>
<refentry id="wsrf-delete-property">
<refmeta>
<refentrytitle>wsrf-delete-property</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsrf-delete-property</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsrf-delete-property</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Deletes a resource property from the resource property document of a resource.
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>wsrf-delete-property  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink> &lt;property&gt;</screen>

<para>
The <command>&lt;property&gt;</command> is a QName of the resource property in the string form: <command>{namespaceURI}localPart</command>.
</para>

<para>Example:</para>
<screen>
$ wsrf-delete-property -s http://localhost:8080/wsrf/services/WidgetService \
   -k "{http://www.globus.org/namespaces/2004/06/core}WidgetKey" 123 \
   "{http://widgets.com}foo"
</screen>

</refsect1></refentry>
<refentry id="wsn-get-current-message">
<refmeta>
<refentrytitle>wsn-get-current-message</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsn-get-current-message</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsn-get-current-message</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Gets the current message associated with the specified topic.
</para>

</refsect1><refsect1><title>Command syntax</title>
<para>
 <screen>wsn-get-current-message  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink> &lt;topic&gt;</screen>

The <command>&lt;topic&gt;</command> is a QName of the resource property in the string form: <command>{namespaceURI}localPart</command>.
</para>

<para>Example:
<screen>
$ wsn-get-current-message -s http://localhost:8080/wsrf/services/CounterService \
   -k "{http://counter.com}CounterKey" 123 \ 
   "{http://counter.com}Value"
</screen>
</para>


</refsect1></refentry>


<refentry id="wsn-pause-subscription">
<refmeta>
<refentrytitle>wsn-pause-subscription</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsn-pause-subscription</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsn-pause-subscription</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Pauses a subscription (notifications on that subscription will not be sent out until it is resumed)
</para>

</refsect1><refsect1><title>Command syntax</title>
<para>
 <screen>wsn-pause-subscription  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink></screen>

Example:
<screen>
$ wsn-pause-subscription -s http://localhost:8080/wsrf/services/SubscriptionManagerService \
   -k "{http://www.globus.org/namespaces/2004/06/core}acc271c0-4df9-11d9-ab19-87da3bc7cf28"
</screen>
</para>
</refsect1></refentry>
<refentry id="wsn-resume-subscription">
<refmeta>
<refentrytitle>wsn-resume-subscription</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsn-resume-subscription</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsn-resume-subscription</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Resumes a subscription (notifications on that subscription will be sent out again)
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>wsn-resume-subscription  <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink></screen>

<para>Example:</para>
<screen>
$ wsn-resume-subscription -s http://localhost:8080/wsrf/services/SubscriptionManagerService \
   -k "{http://www.globus.org/namespaces/2004/06/core}acc271c0-4df9-11d9-ab19-87da3bc7cf28"
</screen>

</refsect1></refentry>
<refentry id="wsn-subscribe">
<refmeta>
<refentrytitle>wsn-subscribe</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>wsn-subscribe</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>wsn-subscribe</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Subscribes to a topic.
</para>

</refsect1><refsect1><title>Command syntax</title>

 <screen>wsn-subscribe <ulink url="Java_WS_Core_Interface_Commandline_Options_Frag.html">[options]</ulink> &lt;topic&gt;</screen>

<para>
The <command>&lt;topic&gt;</command> is a QName of the resource property in the string form: <command>{namespaceURI}localPart</command>. 
</para>

 <para>The following are subscribe-specific options in addition to the <link linkend="r-javawscore-reference-commandline-options">common options</link>:

</para>
<table><title>Command-specific options</title>
<tgroup cols="2"><tbody>

<row>
 <entry><command>-r, --resDescFile &lt;file&gt;</command></entry>
 <entry><para>Specifies a file containing a resource security descriptor for the notification consumer resource.</para></entry>
</row>

<row>
 <entry><command>-b, --subEpr &lt;file&gt;</command></entry>
 <entry><para>Specifies a file to which the subscription resource EPR will be saved.</para></entry>
</row>

</tbody></tgroup>
</table>

<para>Example:</para>
<screen>
$ wsn-subscribe -s http://localhost:8080/wsrf/services/CounterService \
   -k "{http://counter.com}CounterKey" 123 \ 
   "{http://counter.com}Value"
</screen>

</refsect1></refentry>
<refentry id="deployGar">
<refmeta>
<refentrytitle>globus-deploy-gar</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>globus-deploy-gar</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>globus-deploy-gar</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Deploys a GAR file.
</para>

</refsect1><refsect1><title>Command syntax</title>

<screen>globus-deploy-gar &lt;gar.file&gt; [options]</screen>

<para>
The <command>&lt;gar.file&gt;</command> is an path to the GAR file
to be deployed. 
</para>

<table><title>Options</title>
<tgroup cols="2"><tbody>

<row valign="top">
 <entry><command>-help</command></entry>
 <entry><para>Displays help information about the command.</para></entry>
</row>

<row valign="top">
 <entry><command>-debug</command></entry>
 <entry><para>Enables debug mode.</para></entry>
</row>

<row valign="top">
 <entry><command>-profile</command></entry>
 <entry><para>Specifies the profile name under which the configuration files in the GAR will be deployed. Please see <ulink url="http://www-unix.globus.org/toolkit/docs/development/4.0-drafts/common/javawscore/Java_WS_Core_Public_Interfaces.html#ConfigurationProfiles">Configuration Profiles</ulink> for details.</para></entry>
</row>

<row valign="top">
 <entry><command>-D&lt;property&gt;=&lt;value&gt;</command></entry>
 <entry>
  <para>
   Passes arbitrary property-value pairs. See below for the list of <link linkend="properties">currently supported properties</link>. 
  </para>
 </entry>
</row>

</tbody></tgroup>
</table>

 <table id="properties" border="0"><title>Supported property-value pairs</title>
 <tgroup cols="2">
 <tbody>

 <row>
  <entry><command>-Dall.scripts=true</command></entry>
  <entry><para>Causes Windows and Unix launcher scripts to be generated.</para></entry>
 </row>

 </tbody>
 </tgroup>
 </table>

<para>Example:</para>
<screen>
$ globus-deploy-gar /tmp/gars/globus_wsrf_core_samples_counter.gar
</screen>

<para>
The <command>globus-deploy-gar</command> invokes Ant task. The above example is equivalent to running:
</para>
<screen>
$ ant -f $GLOBUS_LOCATION/share/globus_wsrf_common/build-packages.xml deployGar \
      -Dgar.name=/tmp/gars/globus_wsrf_core_samples_counter.gar
</screen>
<para>
The profile name can be passed using <command>-Dprofile</command> Ant option. Make sure to use <emphasis>absolute</emphasis> path name for the gar file when using Ant directly.
</para>

</refsect1></refentry>
<refentry id="undeployGar">
<refmeta>
<refentrytitle>globus-undeploy-gar</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>
<refnamediv>
<refname>globus-undeploy-gar</refname>
<refpurpose>PURPOSE</refpurpose>
</refnamediv>
<refsynopsisdiv><cmdsynopsis>
<command>globus-undeploy-gar</command>
</cmdsynopsis>
</refsynopsisdiv>
<refsect1><title>Tool description</title>

<para>
Undeploys a GAR file.
</para>

</refsect1><refsect1><title>Command syntax</title>
<para>
<screen>
globus-undeploy-gar &lt;gar.id&gt; [options]
</screen>

The <command>&lt;gar.id&gt;</command> is the base name of the GAR file without the <command>.gar</command> extension to undeploy. For example if the GAR file is <command>"foo.gar"</command>, then the GAR id is <command>"foo"</command>. 
The directory names under the <command>$GLOBUS_LOCATION/etc/globus_packages/</command> are the GAR ids of the undeployable items.
</para>

<table><title>Options</title>
<tgroup cols="2"><tbody>

<row valign="top">
 <entry><command>-help</command></entry>
 <entry><para>Displays help information about the command.</para></entry>
</row>

<row valign="top">
 <entry><command>-debug</command></entry>
 <entry><para>Enables debug mode.</para></entry>
</row>

<row valign="top">
 <entry><command>-D&lt;property&gt;=&lt;value&gt;</command></entry>
 <entry>
  <para>
   Passes arbitrary property-value pairs.
  </para>
 </entry>
</row>

</tbody></tgroup>
</table>

<para>Example:
<screen>
$ globus-undeploy-gar globus_wsrf_core_samples_counter
</screen>

The <command>globus-undeploy-gar</command> invokes Ant task. The above example is equivalent to running:

<screen>
$ ant -f $GLOBUS_LOCATION/share/globus_wsrf_common/build-packages.xml undeployGar \
      -Dgar.id=globus_wsrf_core_samples_counter
</screen>

</para>
</refsect1>
</refentry>





