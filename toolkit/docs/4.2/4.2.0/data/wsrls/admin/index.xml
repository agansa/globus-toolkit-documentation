<?xml version='1.0' encoding='UTF-8'?>
<title>GT &shortversion; WS RLS: System Administrator's Guide</title>
<titleabbrev>System Administrator's Guide</titleabbrev>


<section id="wsrls-admin-introduction"><title>Introduction</title>
<para>This guide contains advanced configuration information for system administrators
  working with WS RLS. It provides references to information on procedures
  typically performed by system administrators, including installation, configuring,
deploying, and testing the installation.</para>
    <important>
        <simpara> This information is in addition to the basic Globus Toolkit prerequisite, 
            overview, installation, security configuration instructions in the <xref linkend="gtadmin"/>.  
          Read through this guide before continuing!</simpara>  
    </important>
</section>

<section id="wsrls-admin-installing" xreflabel="Building and installing WS RLS"><title>Building and Installing</title>

    <para>WS RLS is distributed with the Globus Toolkit &shortversion; and is available in both the binary bundles and the source bundle. For most purposes, the binary bundle provides the simplest means of installing the WS RLS and its requirements. There are three typical ways to access and install the WS RLS:</para>
    <itemizedlist>
        <listitem><simpara><xref linkend="wsrls-admin-install-binary"/></simpara></listitem>
        <listitem><simpara><xref linkend="wsrls-admin-install-source"/></simpara></listitem>
        <listitem><simpara><xref linkend="wsrls-admin-install-cvs"/></simpara></listitem>
    </itemizedlist>
    <important><simpara>Before proceding with installation of WS RLS, please familiarize yourself with the installation procedures for RLS (see <xref linkend="rls"/>).</simpara></important>

    <section id="wsrls-admin-install-binary"><title>Installing WS RLS using Globus Toolkit Binary Bundle</title>
        <para>Follow instructions provided by <xref linkend="gtadmin"/> and <xref linkend="gtadmin-install"/> in order to install the WS RLS from one of the available binary bundles of the Globus Toolkit.</para>
        <para>Once you have unpackaged the binary bundle, the following commands may be used to install WS RLS:</para>
        <screen>
% ./configure --prefix=$GLOBUS_LOCATION --enable-rls --enable-wsrls
% make
% make install
        </screen>
    </section>

    <section id="wsrls-admin-install-source"><title>Installing WS RLS using Globus Toolkit Source Bundle</title>
        <para>WS RLS is not installed as part of the default source install. In order to install WS RLS, you will need to ensure that RLS is also installed as part of the build by reviewing its installation procedures. Along with RLS configure settings (e.g., ODBC related settings) the <computeroutput>--enable-wsrls</computeroutput> flag is required as part of the configuration step.</para>
        <para>The following commands will install the WS RLS (optionally you may use the &quot;gt4-wsrls&quot; make target to build only WS RLS and its requirements:</para>
        <screen>
% ./configure --prefix=<emphasis>/path/to/install</emphasis> --enable-rls --enable-wsrls
% make <emphasis>[[rls] gt4-wsrls]</emphasis>
% make install
        </screen>
    </section>

    <section id="wsrls-admin-install-cvs"><title>Installing WS RLS using Globus CVS</title>
        <para>Additionally, you may access the WS RLS from the Globus Toolkit CVS repository. You may deploy the 4.1.x WS RLS on top of an existing GT 4.1.x installation using trunk.</para>
        <!-- Not sure this is true:
        <para>The following example instructions will only work given the presence of an existing GT installation with <emphasis>all WS RLS dependencies</emphasis>. The best way to establish such an environment is to first follow the basic installation instructions and subsequently use the following instructions to obtain the latest updates from the CVS branch.</para>
        -->
    <important><para>Please review <ulink url="http://www.globus.org/toolkit/docs/development/remote-cvs.html">Accessing the Globus Alliance's Code via CVS</ulink> for the authoratative information on building and installing the Globus Toolkit from source in our CVS.</para></important>
    <para>The following instructions may be used to build and install the WS RLS:</para>
    <screen>
setenv CVSROOT :pserver:anonymous@cvs.globus.org:/home/globdev/CVS/globus-packages
cvs co packaging/
cd packaging
./make-packages.pl --bundles=gt4-wsrls --deps <emphasis>[--verbose]</emphasis>
setenv GPT_LOCATION /path/to/packaging/gpt-3.2globus2
$GPT_LOCATION/sbin/gpt-build <emphasis>[-verbose]</emphasis> ./bundle-output/custom-deps-1.0-src_bundle.tar.gz gcc32dbgpthr
        </screen>
        <note><simpara>Changes to the toolkit (WS Core and WSAA)  made between the 4.0.x release and the latest code base, make the GT 4.0.x build environment unsuitable for GT &shortversion; components. As such the WS RLS cannot be deployed on an existing GT 4.0.x installation. The good news, if you will, is that the WS RLS can use your existing GT 4.0.x RLS without modification. If you have an existing RLS installation, and you want to try out the WS RLS interface layer, you need not reinstall RLS. Of course, you may want to reinstall RLS exclusively for testing with the WS RLS interface, but it is up to your own choosing.</simpara></note>
    </section>
</section>

<section id="wsrls-admin-configuring"><title>Configuring </title>
&WS_RLS_Interface_Config_Frag;
</section>

<section id="wsrls-admin-deploying"><title>Deploying</title>
    <para>No additional information is necessary.</para>
</section>

<section id="wsrls-admin-testing"><title>Testing</title>
    <para>At this time, the WS RLS does not yet provide an automated test suite.</para>
</section>

<section id="wsrls-admin-security_considerations"><title>Security Considerations </title>
&WS_RLS_Security_Considerations_Frag;
</section>

<section id="wsrls-admin-troubleshooting"><title>Troubleshooting</title>
    <itemizedlist>
        <listitem>
            <simpara>Increasing log verbosity</simpara>
            <simpara>Generating verbose log output is a critical aid in troubleshooting of the WS RLS and is useful when communicating problems to Globus support lists. To increase logging detail, add the following lines to the $GLOBUS_LOCATION/container-log4j.properties file.</simpara>
            <screen>
...
log4j.category.org.globus.replica.location=DEBUG
log4j.category.org.globus.replica.rls=DEBUG
...
            </screen>
        </listitem>
        <listitem>
            <simpara>Error: java.lang.NullPointerException</simpara>
            <simpara>When invoking the WS RLS command-line clients, a system-level exception like the one above may be encountered. The admin should check the container logs for the exact error.</simpara>
        </listitem>
        <listitem>
            <simpara>Error: A server error occured while processing the request.</simpara>
            <simpara>When invoking the WS RLS command-line clients, a <emphasis>server error</emphasis> like the one above may be encountered. The admin should check the container logs for the exact error.</simpara>
        </listitem>
        <listitem>
            <simpara>java.lang.UnsatisfiedLinkError</simpara>
            <screen>
...
Unexpected error during request processing
java.lang.UnsatisfiedLinkError: init
        at org.globus.replica.rls.RLSClient.init(Native Method)
...
            </screen>
            <simpara>An <computeroutput>java.lang.UnsatisfiedLinkError</computeroutput> exception when using the WS RLS may indicate that the native RLS libraries that WS RLS depends on could not be located. To correct this problem, ensure that the <computeroutput>$GLOBUS_LOCATION/lib</computeroutput> directory is in the library search path (on some systems this is the <computeroutput>LD_LIBRARY_PATH</computeroutput> variable).</simpara>
        </listitem>
        <listitem>
            <simpara>Unable to connect to localhost:39281</simpara>
            <screen>
...
Error: java.rmi.RemoteException: globus_rls_client: Globus I/O error: 
globus_xio: Unable to connect to localhost:39281; nested exception is:
        org.globus.replica.location.CatalogInternalException: globus_rls_client:
 Globus I/O error: globus_xio: Unable to connect to localhost:39281
...
            </screen>
            <simpara>The WS RLS is an interface layer that depends on the RLS for the replica location functionality. You must install and run RLS and configure WS RLS to use the RLS via its JNDI configuration. Check that RLS is installed, running, and check that the WS RLS JNDI configuration uses the correct hostname and port to connect to the RLS.</simpara>
        </listitem>
        <listitem>
            <simpara>org.globus.common.ChainedIOException: Failed to initialize security context</simpara>
            <simpara>An <computeroutput>org.globus.common.ChainedIOException</computeroutput> exception when using the WS RLS may indicate that the user's proxy is invalid.</simpara>
            <screen>
...
Error: ; nested exception is:
        org.globus.common.ChainedIOException: Failed to initialize security 
context [Caused by: Defective credential detected [Caused by: Proxy file 
(/tmp/x509up_u1234) not found.]]
...
            </screen>
            <simpara>To correct the error, the user must properly initialize the user proxy. See <computeroutput>grid-proxy-init</computeroutput> for more information on proxy initialization.</simpara>
        </listitem>
        <listitem>
            <simpara>Error: org.xml.sax.SAXException: Unregistered type:  class org.globus.replica.location.generated.ObjectEnumerationType</simpara>
            <simpara>An <computeroutput>org.xml.sax.SAXException: Unregistered type:  class XXX</computeroutput> exception when using the WS RLS may indicate that an Axis generated XML type, defined by the WS RLS XSD, was not properly registered. While all the XML types <emphasis>should</emphasis> get registered upon deployment without intervention by the user, sometimes they do not. To remedy the situation add a <computeroutput>typeMapping</computeroutput> to the <computeroutput>$GLOBUS_LOCATION/etc/globus_wsrf_replicalocation_service/server-config.wsdd</computeroutput> file. Note that this exception is not limited to the <computeroutput>org.globus.replica.location.generated.ObjectEnumerationType</computeroutput> type.</simpara>
            <screen>
...
    &lt;typeMapping.
        encodingStyle=&quot;&quot;.
        qname=&quot;ns1:ObjectEnumerationType&quot;.
        deserializer=&quot;org.apache.axis.encoding.ser.SimpleDeserializerFactory&quot;.
        serializer=&quot;org.apache.axis.encoding.ser.SimpleSerializerFactory&quot;
        type=&quot;java:org.globus.replica.location.generated.ObjectEnumerationType&quot;
        xmlns:ns1=&quot;http://www.globus.org/namespaces/2005/08/replica/location&quot; /&gt;
...
            </screen>
        </listitem>
    </itemizedlist>
</section>

<section id="wsrls-admin-usage"><title>Usage statistics collection by the Globus Alliance</title>
  &WS_RLS_Usage_Statistics_Frag;
</section>
