<title> GT 4.0 GridFTP : System Administrator's Guide</title>
<titleabbrev>System Administrator's Guide</titleabbrev>


<section id="s-gridftp-admin-introduction"><title>Introduction</title>
<para>This guide contains advanced configuration information for system administrators
  working with GridFTP. It provides references to information on procedures
  typically performed by system administrators, including installation, configuring,
deploying, and testing the installation. This guide should help you configure
and run the GridFTP server in some standard configurations.</para>
<important>
        <simpara> This information is in addition to the basic Globus Toolkit prerequisite, 
          overview, installation, security configuration instructions in the <ulink url="../../admin/docbook/">GT 4.0 System Administrator's Guide</ulink>.  
          Read through this guide before continuing!</simpara>  
          </important>
</section>

<section id="s-gridftp-admin-installing"><title>Building and Installing</title>
    <indexterm role="howto-data"><primary>building and installing GridFTP</primary><secondary>general instructions</secondary></indexterm>
<para>GridFTP is built and installed as part of
    a default GT 4.0 installation. For basic installation instructions, see the
    <ulink url="../../admin/docbook/">GT 4.0 System Administrator's Guide</ulink>.
    No extra installation steps are required for this component.</para>
    <section id="s-gridftp-admin-installing-gridftp-only"><title>Building only GridFTP and Utilities</title>
        <indexterm role="howto-data"><primary>building and installing GridFTP</primary><secondary>only GridFTP and Utilities</secondary></indexterm>
        <para>If you wish to install GridFTP without installing the rest of the Globus Toolkit, refer to 
	    <ulink url="../../admin/docbook/ch04.html">the Installing GT 4.0 section of the GT 4.0 System Administrator's Guide</ulink>.  Perform steps 1-3, as written 
	    (Note that you do not need Ant, a JDK, or a JDBC database to build only GridFTP).  However, instead of running "make" as directed in step 4, 
	</para>
<para>
                Run:
            </para>
            <screen>globus$ make gridftp</screen>
            <para>
                If you wish to have a log file of the build, use
                <command>tee</command>:
            </para>
            <screen>globus$ make gridftp 2>&amp;1 | tee build.log</screen>
            <para>
                The syntax above assumes a Bourne shell. If you are
                using another shell, redirect stderr to stdout and
                then pipe it to <command>tee</command>.
	</para>
</section>
<section id="s-gridftp-admin-installing-gridftp-server"><title>Building only the GridFTP server</title>
    <indexterm role="howto-data"><primary>building and installing GridFTP</primary><secondary>only the GridFTP server</secondary></indexterm>
    <para>If you wish to install only the GridFTP server, refer to the 
        <ulink url="../../admin/docbook/ch04.html">Installing GT 4.0 section of the GT 4.0 System Administrator's Guide</ulink> for prerequisites.  Follow steps 1-3 as written.  
        However, instead of running "make" as directed in step 4,</para>

<para>
                Run:
            </para>
            <screen>globus$ make gpt globus_gridftp_server</screen>
            <para>
                If you wish to have a log file of the build, use
                <command>tee</command>:
            </para>
            <screen>globus$ make gpt globus_gridftp_server 2>&amp;1 | tee build.log</screen>
            <para>
                The syntax above assumes a Bourne shell. If you are
                using another shell, redirect stderr to stdout and
                then pipe it to <command>tee</command>.
	</para>
</section>

    <section id="s-gridftp-admin-installing-gridftp-client"><title>Building only the GridFTP client</title>
        <indexterm role="howto-data"><primary>building and installing GridFTP</primary><secondary>only the GridFTP client</secondary></indexterm>
        <para>If you wish to install only the GridFTP client, refer to the 
            <ulink url="../../admin/docbook/ch04.html">Installing GT 4.0 section of the GT 4.0 System Administrator's Guide</ulink> for prerequisites.  Follow steps 1-3 as written.  
            However, instead of running "make" as directed in step 4,</para>
           <para>
            Run:
        </para>
        <screen>globus$ make globus-data-management-client</screen>
        <para>
            If you wish to have a log file of the build, use
            <command>tee</command>:
        </para>
        <screen>globus$ make globus-data-management-client 2>&amp;1 | tee build.log</screen>
        <para>
            The syntax above assumes a Bourne shell. If you are
            using another shell, redirect stderr to stdout and
            then pipe it to <command>tee</command>.
        </para>
        
    </section>
    
    <section id="s-gridftp-admin-installing-gridftp-sdk"><title>Building only the GridFTP SDK</title>
        <indexterm role="howto-data"><primary>building and installing GridFTP</primary><secondary>only the GridFTP SDK</secondary></indexterm>
        <para>If you wish to install only the GridFTP SDK, refer to the 
            <ulink url="../../admin/docbook/ch04.html">Installing GT 4.0 section of the GT 4.0 System Administrator's Guide</ulink> for prerequisites.  Follow steps 1-3 as written.  
            However, instead of running "make" as directed in step 4,</para>
        <para>
            Run:
        </para>
        <screen>globus$ make globus-data-management-sdk</screen>
        <para>
            If you wish to have a log file of the build, use
            <command>tee</command>:
        </para>
        <screen>globus$ make globus-data-management-sdk 2>&amp;1 | tee build.log</screen>
        <para>
            The syntax above assumes a Bourne shell. If you are
            using another shell, redirect stderr to stdout and
            then pipe it to <command>tee</command>.
        </para>
    </section>
    
    <section id="s-gridftp-admin-installing-gridftp-combo"><title>Building a combination of GridFTP elements</title>
        <indexterm role="howto-data"><primary>building and installing GridFTP</primary><secondary>only a combination of certain GridFTP elements</secondary></indexterm>
        <para>If you wish to build a combination of GridFTP elements, refer to the 
            <ulink url="../../admin/docbook/ch04.html">Installing GT 4.0 section of the GT 4.0 System Administrator's Guide</ulink> for prerequisites.  Follow steps 1-3 as written.  
            However, instead of running "make" as directed in step 4,</para>
        <para>
            Run:
        </para>
        <screen>globus$ make [any combination of the above commands, each separated by a space]</screen>
        <para>For example, if you just want to install the GridFTP server and client, the command would be:</para>
        <screen>globus$ make gpt globus_gridftp_server globus-data-management-client</screen>
        <para>
            If you wish to have a log file of the build, use
            <command>tee</command>:
        </para>
        <screen>globus$ make [any combination of the above commands, each separated by a space] 2>&amp;1 | tee build.log</screen>
        <para>
            The syntax above assumes a Bourne shell. If you are
            using another shell, redirect stderr to stdout and
            then pipe it to <command>tee</command>.
        </para>
        

    </section>
    
<section id="s-gridftp-admin-installing-static-gridftp"><title>Building and Installing a static GridFTP server</title>
    <indexterm role="howto-data"><primary>building and installing GridFTP</primary><secondary>only a static GridFTP server</secondary></indexterm>
    <para>If you wish to build and install a statically linked set of GridFTP binaries, 
        refer to <ulink url="../../admin/docbook/ch04.html">the Installing GT 4.0 section of the GT 4.0 System Administrator's Guide</ulink> for prerequisites.  
        Follow steps 1-2 as written.  In step 3, however, you should</para>

<para>
                Run:
	</para>
	<screen>globus$ export GLOBUS_LOCATION=/usr/local/globus-4.0.0
globus$ ./configure --prefix=$GLOBUS_LOCATION --with-buildopts="--static" </screen>
            <screen>globus$ make gpt globus_gridftp_server</screen>
            <para>
                If you wish to have a log file of the build, use
                <command>tee</command>:
            </para>
            <screen>globus$ make gpt globus_gridftp_server 2>&amp;1 | tee build.log</screen>
            <para>
                The syntax above assumes a Bourne shell. If you are
                using another shell, redirect stderr to stdout and
                then pipe it to <command>tee</command>.
	</para>
</section>

</section>
<section id="s-gridftp-admin-configuring"><title>Configuring </title>
    
<para>Please see the configuration section of the <link linkend="s-gridftp-Public_Interfaces-config">Public Interfaces Guide</link>.</para>
</section>

<section id="s-gridftp-admin-deploying"><title>Deploying the GridFTP Server: <computeroutput>globus-gridftp-server</computeroutput></title>
<para>It is assumed that the toolkit installation was successful and that Globus
security is properly configured.  For more information, see the 
<ulink url="../../admin/docbook/">Installation Guide</ulink>. Also be sure to 
reference <xref linkend="s-gridftp-Public_Interfaces-config"/>.</para>

<section id="s-gridftp-admin-daemon_mode"><title>Running in daemon mode</title>
    <indexterm role="howto-data"><primary>deploying GridFTP</primary><secondary>running in daemon mode</secondary></indexterm>
<para>The server should generally be run as root in daemon mode, though it is 
  possible to run it as a user (see below). When run as root you will need to have a 
  host certificate.</para>
<para>Run the server: </para>
<screen>globus-gridftp-server &lt; -s | -S &gt; &lt;args&gt;</screen>
<para>where:</para>
<variablelist termlength="100pt">
<varlistentry><term>-s</term>
	<listitem>
		<simpara>
			Runs in the foreground (this is the default mode).
		</simpara>
	</listitem>
</varlistentry>
<varlistentry><term>-S</term>
	<listitem>
		<simpara>
			Detaches from the terminal and runs in the background.
		</simpara>
	</listitem>
</varlistentry>
</variablelist>

<para>The following additional steps may be required when running as a user other than root:
<itemizedlist>
  <listitem><simpara>Create a ~/.gridmap file, containing the DNs of any clients you wish to
  allow, mapped to the current username.</simpara></listitem>
  <listitem><simpara>Create a proxy with <computeroutput>grid-proxy-init</computeroutput>.</simpara></listitem>
</itemizedlist>

</para>
</section>
<section id="s-gridftp-admin-inetd"><title>Running under inetd or xinetd</title>
    <indexterm role="howto-data"><primary>deploying GridFTP</primary><secondary>running under inetd or xinetd</secondary></indexterm>
<para>The -i command line option enables the server to be run under inetd or xinetd.</para>
<para>See <xref linkend="s-gridftp-Public_Interfaces-config"/> for example xinetd and inetd configuration
   entries. </para>

</section>
<section id="s-gridftp-admin-data_nodes"><title>Remote data-nodes and striped operation</title>
<para>The GridFTP server now supports separate front end (client control connection)
and back end (data node) processes. In addition, a single front end process may
connect to multiple back end data nodes. </para>
<para>When multiple back end data nodes are available, the server is said to be 
in a striped configuration, or simply, is a striped server.  In this mode 
transfers are divided over all available data nodes, thus allowing the 
combined bandwidth of all data nodes to be used.</para>
<para>Note: The connection between the front end and data nodes is referred to as 
the <emphasis>ipc channel</emphasis>.</para>

<para>The ability to use inetd or daemon execution modes applies to both 
front end servers and data nodes, and the same certificate and user requirements
apply.</para>

<para>To start the front end: 
<screen>globus-gridftp-server &lt;args&gt; -r &lt;host:port&gt;[,&lt;host:port&gt;,...]</screen>
To start the data-node:
<screen>globus-gridftp-server -p &lt;port&gt; -dn</screen>
The <computeroutput>-p &lt;port&gt;</computeroutput> option used on the data-node is the port 
  that will be used for ipc connections.  This is the port that you will register
  with the front end server.</para>
<para>  For example:
<screen>machineB&gt; globus-gridftp-server -p 6000 -dn
machineC&gt; globus-gridftp-server -p 7000 -dn
machineA&gt; globus-gridftp-server -p 5000 -r machineB:6000,machineC:7000</screen>
The client would only connect to the front end at 
<computeroutput>machineA:5000</computeroutput>, for example, using globus-url-copy with the -stripe option:
<screen>globus-url-copy -stripe gsiftp://machineA:5000/file file:///destination
   <emphasis>or</emphasis>
globus-url-copy -stripe gsiftp://machineA:5000/file gsiftp://machineX/destination</screen>
Where machineX may be another striped server or a standard GridFTP server.</para>


</section>

<section id="s-gridftp-admin-seperated"><title>Separation of Processes</title>
<para>
As is illustrated above, the GridFTP server can be separated into front end
and data node processes.  This is the architecture used to achieve a striped
server, but it can also be exploited to achieve a higher level of security.
</para>
<para>
Running the server as root is often desirable because it allows the server to
fork and setuid on a child processes related to an authenticated user.  This
allows the server to leverage the operating systems file system permissions
and other security devices.  However, it is not at all desirable to have
a root running process listening on a port open to the world.  If an
attacker were to compromise the process they could obtain root level
access to the machine.
</para>
<para>
To overcome this security risk the gridftp server can be run in a
front end/back end manner.  The front end can be run as any user, say user globus,
that has very limited access to the machine.  The front end is the processes
open to the outside world.  If it is compromised an attacker has only 
gained access to that limited account.  The back end is run as root, but
configured to only allow connections from the front end.
</para>
<para>To start the front end:</para> 
<screen>globus-gridftp-server -p 7000 -r localhost:7001</screen>
<para> and the back end:</para>
<screen>globus-gridftp-server -p 7001 -dn -allow-from 127.0.0.1</screen>
</section>
</section>


<section id="s-gridftp-admin-testing"><title>Testing</title>
    <indexterm role="howto-data"><primary>testing GridFTP</primary></indexterm>
<para>If the globus-ftp-client-test package has been installed, our standard
test suite may be run to verify functionality on your platform.  Simply set
up the globus environment, chdir to 
<computeroutput>$GLOBUS_LOCATION/test/globus_ftp_client_test/</computeroutput> and run <computeroutput>./TESTS.pl</computeroutput>.</para>
<para> Please also see the 
<ulink url="GridFTP_Call_for_Testing.html">Call for Community Testing</ulink>.</para>
</section>

<section id="s-gridftp-admin-security_considerations"><title>Security Considerations </title>
&GridFTP_Security_Considerations_Frag;
</section>

<section id="s-gridftp-admin-troubleshooting"><title>Troubleshooting</title>
  &GridFTP_Troubleshooting_Frag;
</section>

<section id="s-gridftp-admin-usage"><title>Usage statistics collection by the Globus Alliance </title>
&GridFTP_Usage_Statistics_Frag;
</section>

