<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[

<!ENTITY % xinclude SYSTEM "../../../xinclude.mod" >
%xinclude;

]>
<book id="rlsAdmin">
<title>GT <replaceable role="entity">version</replaceable> RLS: System Administrator's Guide</title>
<titleabbrev>System Administrator's Guide</titleabbrev>


<bookinfo><abstract><title>Introduction</title>
    <para>This guide contains advanced configuration information for system administrators
        working with RLS. It provides references to information on procedures
        typically performed by system administrators, including installation, configuring,
        deploying, and testing the installation.</para>
<para>    <important>
        <simpara> This information is in addition to the basic Globus Toolkit prerequisite, 
            overview, installation, security configuration instructions in the <olink targetdoc="gtadmin"/>.  
            Read through this guide before continuing!</simpara>  
    </important></para>
</abstract></bookinfo>

<chapter id="rls-admin-installing" xreflabel="Building and installing RLS"><title>Building and Installing</title>
    
    <para>RLS is built and installed as part of the Globus Toolkit installation. This section provides instructions specific to building and installing RLS. Most of this section concerns the optional setup and configuration of a database management system (DBMS) and database connectivity (ODBC) software for the RLS server. By default, the RLS is installed and automatically configured to use an embedded database. No additional steps are required unless you wish to configure RLS to use your own ODBC-compliant database management system.</para>

    <section id="rls-admin-install-prereq" xreflabel="Prerequisites for installing RLS"><title>Prerequisites</title>
        <indexterm type="rls-howto"><primary>installing</primary><secondary>prerequisites</secondary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>prerequisites</secondary></indexterm>
        <para>By default, the RLS is installed and automatically configured to use an embedded database. If you wish to use the default configuration, you may skip this section and proceed to <olink targetptr="rls-admin-install-base"/> If you wish to use your own ODBC-compliant database management system, please review this section carefully.</para>
        <para>The RLS depends on DBMS and ODBC software. If you are not familiar with DBMS and ODBC software, you may need to familiarize yourself with these tools before proceeding with RLS installation. Most of the difficulty users experience when installing RLS is actually due to DBMS and ODBC issues, which are often beyond our control.</para>
        <para>The following list summarizes the prerequisite database software:</para>
        <itemizedlist>
            <listitem><simpara><olink targetptr="rls-admin-install-prereq-dbms"/>: for persistent storage of replica location information</simpara></listitem>
            <listitem><simpara><olink targetptr="rls-admin-install-prereq-odbcman"/>: for vendor-neutral connectivity to DBMS</simpara></listitem>
            <listitem><simpara><olink targetptr="rls-admin-install-prereq-odbcdrv"/>: for vendor-specific connectivity to DBMS from ODBC Managers</simpara></listitem>
        </itemizedlist>

        <para>When using this guide, please consult the vendor and official project sites for authoritative information on DBMS and ODBC software. Any additional information provided on this site is intended as helpful advice and only reflects our limited experiences as fellow users of the software.</para>

        <section id="rls-admin-install-prereq-dbms"><title>Database Management System</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>prerequisites</secondary><tertiary>database</tertiary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>prerequisites</secondary><tertiary>database</tertiary></indexterm>
            <para>The RLS depends on a DBMS for persistent storage of replica location information. The RLS is designed to work with MySQL, PostgreSQL, SQLite, and Oracle DBMS software. In the case of MySQL, it is important to use the transaction-capable InnoDB database engine. For complete information on installation and configuration of third-party DBMS software, please refer to:</para>
            <itemizedlist>
                <listitem><simpara><ulink url="http://www.mysql.com">MySQL</ulink></simpara></listitem>
                <listitem><simpara><ulink url="http://www.postgresql.org">PostgreSQL</ulink></simpara></listitem>
                <listitem><simpara><ulink url="http://www.sqlite.org">SQLite</ulink></simpara></listitem>
                <listitem><simpara><ulink url="http://www.oracle.com">Oracle</ulink></simpara></listitem>
            </itemizedlist>

            <para>We provide the following tips from the troubleshooting section of this guide:</para>
            <itemizedlist>
                <listitem><simpara><olink targetptr="rls-admin-trouble-pgsql-install"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-pgsql-install-check"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-pgsql-tcpip"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-pgsql-vacuum"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-mysql-install"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-mysql-install-check"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-sqlite-install"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-sqlite-install-check"/></simpara></listitem>
            </itemizedlist>
        </section>

        <section id="rls-admin-install-prereq-odbcman"><title>ODBC Manager</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>prerequisites</secondary><tertiary>ODBC manager</tertiary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>prerequisites</secondary><tertiary>ODBC manager</tertiary></indexterm>
            <para>The RLS depends on an ODBC manager for standardised database connectivity. The unixODBC or iODBC libraries may be used for this purpose. Please confirm that one of these libraries is installed and configured before proceeding with RLS installation. If you need more information on the ODBC managers, consult their respective project home pages.</para>

            <itemizedlist>
                <listitem><simpara><ulink url="http://www.unixodbc.org">unixODBC</ulink></simpara></listitem>
                <listitem><simpara><ulink url="http://www.iodbc.org">iODBC</ulink></simpara></listitem>
            </itemizedlist>

            <para>You may also find that unixODBC or (less likely) iODBC are included along with a vendor's odbc driver. This appears to be the case with MySQL Connector/ODBC drivers at the time of writing this document.</para>

            <para>We provide the following tips from the troubleshooting section of this guide:</para>
            <itemizedlist>
                <listitem><simpara><olink targetptr="rls-admin-trouble-unixodbc-install"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-iodbc-install"/></simpara></listitem>
            </itemizedlist>

            <note><para>If you are installing RLS from a Globus Toolkit binary bundle, you do not need to install the unixODBC or iODBC software. The binary installation of RLS is linked to iODBC version 3.51.2 included with the GT bundle.</para></note>
        </section>

        <section id="rls-admin-install-prereq-odbcdrv"><title>ODBC Driver</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>prerequisites</secondary><tertiary>ODBC driver</tertiary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>prerequisites</secondary><tertiary>ODBC driver</tertiary></indexterm>
            <para>The RLS depends on an ODBC driver for vendor-specific database connectivity via the vendor neutral ODBC manager. For each vendor you will find a related ODBC driver. You may find relevant information at the following sites:</para>
            <itemizedlist>
                <listitem><simpara><ulink url="http://pgfoundry.org/projects/psqlodbc/">psqlODBC</ulink> the official PostgreSQL ODBC Driver</simpara></listitem>
                <listitem><simpara><ulink url="http://www.mysql.com/products/connector/odbc/index.html">MySQL Connector/ODBC</ulink> offered directly by MySQL (note: use the 3.51 branch)</simpara></listitem>
                <listitem><simpara><ulink url="http://www.ch-werner.de/sqliteodbc/">SQLite ODBC Driver</ulink> a freely available ODBC driver for SQLite</simpara></listitem>
                <listitem><simpara><ulink url="http://www.oracle.com">Consult Oracle</ulink> for details on ODBC Driver for Oracle DBMS</simpara></listitem>
            </itemizedlist>

            <para>We provide the following tips from the troubleshooting section of this guide:</para>
            <itemizedlist>
                <listitem><simpara><olink targetptr="rls-admin-trouble-psqlodbc-install"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-myodbc-install"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-sqliteodbc-install"/></simpara></listitem>
            </itemizedlist>
        </section>

        <section id="rls-admin-install-prereq-obs"><title>Choosing the right DBMS &amp; ODBC software</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>prerequisites</secondary><tertiary>recommended software</tertiary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>prerequisites</secondary><tertiary>recommended software</tertiary></indexterm>
            <para>We have used or know of users who have used the following combinations of software packages on the following platforms. What we provide in this section is a small subset of available options when choosing DBMS &amp; ODBC software.</para>
            <table><title>Database &amp; ODBC Observations</title>
                <tgroup cols="6"><tbody>
                        <row>
                            <entry>Architecture</entry>
                            <entry>OS</entry>
                            <entry>Distribution</entry>
                            <entry>ODBC Manager</entry>
                            <entry>ODBC Driver</entry>
                            <entry>DBMS</entry>
                        </row>
                        <row>
                            <entry>PPC</entry>
                            <entry>OS X</entry>
                            <entry>Apple</entry>
                            <entry>unixODBC-2.2.11*</entry>
                            <entry>TBD</entry>
                            <entry>TBD</entry>
                        </row>
                        <row>
                            <entry>SPARC, 32-bit</entry>
                            <entry>Solaris</entry>
                            <entry>Sun</entry>
                            <entry>libiodbc-3.51.2</entry>
                            <entry>MyODBC-3.51.06</entry>
                            <entry>mysql-standard-4.0.18</entry>
                        </row>
                        <row>
                            <entry>SPARC, 32-bit</entry>
                            <entry>Solaris</entry>
                            <entry>Sun</entry>
                            <entry>libiodbc-3.51.2</entry>
                            <entry>MyODBC-3.51.12</entry>
                            <entry>mysql-4.0.16</entry>
                        </row>
                        <row>
                            <entry>SPARC, 32-bit</entry>
                            <entry>Solaris</entry>
                            <entry>Sun</entry>
                            <entry>unixODBC-2.2.11</entry>
                            <entry>MyODBC-3.51.12</entry>
                            <entry>mysql-4.0.16</entry>
                        </row>
                        <row>
                            <entry>SPARC, 32-bit</entry>
                            <entry>Solaris</entry>
                            <entry>Sun</entry>
                            <entry>unixODBC-2.2.11</entry>
                            <entry>TBD</entry>
                            <entry>TBD</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>libiodbc-3.51.1</entry>
                            <entry>MyODBC-3.51.06</entry>
                            <entry>mysql-standard-4.0.18</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>libiodbc-3.51.2</entry>
                            <entry>MyODBC-3.51.06</entry>
                            <entry>mysql-standard-4.0.18</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>libiodbc-3.52.4</entry>
                            <entry>MyODBC-3.51.06</entry>
                            <entry>mysql-standard-4.0.18</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>libiodbc-3.52.4</entry>
                            <entry>psqlodbc-7.2.5</entry>
                            <entry>postgresql-7.4.6</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>libiodbc-3.51.2</entry>
                            <entry>psqlodbc-08.00.0102</entry>
                            <entry>postgresql-7.4.6</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>libiodbc-3.51.2</entry>
                            <entry>sqliteodbc-0.69</entry>
                            <entry>sqlite-3.3.6</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>unixODBC-2.2.11</entry>
                            <entry>MyODBC-3.51.06</entry>
                            <entry>mysql-standard-4.0.18</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>unixODBC-2.2.11</entry>
                            <entry>mysql-connector-odbc-3.51.12</entry>
                            <entry>mysql-standard-4.0.18</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>unixODBC-2.2.11</entry>
                            <entry>mysql-connector-odbc-3.51.12</entry>
                            <entry>mysql-standard-5.0.21</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>unixODBC-2.2.11</entry>
                            <entry>psqlodbc-7.2.5</entry>
                            <entry>postgresql-7.4.6</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>Linux</entry>
                            <entry>RedHat</entry>
                            <entry>unixODBC-2.2.11</entry>
                            <entry>psqlodbc-08.00.0102</entry>
                            <entry>postgresql-7.4.6</entry>
                        </row>
                        <row>
                            <entry>x86</entry>
                            <entry>OS X</entry>
                            <entry>Apple</entry>
                            <entry>TBD</entry>
                            <entry>TBD</entry>
                            <entry>TBD</entry>
                        </row>
                        <row>
                            <entry>x86_64</entry>
                            <entry>Linux</entry>
                            <entry>SuSE</entry>
                            <entry>unixODBC-2.2.8-35</entry>
                            <entry>MyODBC-unixODBC-3.51.06-121</entry>
                            <entry>mysql-client-4.0.18-25</entry>
                        </row>
                        <row>
                            <entry>x86_64</entry>
                            <entry>Linux</entry>
                            <entry>SuSE</entry>
                            <entry>unixODBC-2.2.8-35</entry>
                            <entry>psqlodbc-08.00.0102</entry>
                            <entry>postgresql-7.4.9</entry>
                        </row>
                        <!--
                        <row>
                            <entry></entry>
                            <entry></entry>
                            <entry></entry>
                            <entry></entry>
                            <entry></entry>
                            <entry></entry>
                        </row>
                        -->
                </tbody></tgroup>
            </table>
            <para>(*) See troubleshooting tip <olink targetptr="rls-admin-trouble-unixodbc-install-osxfix"/></para>
            <para>If you build from source, be aware that some versions of a vendor's drivers do not build against some versions of the same vendor's clients. For instance, MySQL Connector/ODBC 3.51.06 does not appear to build againt MySQL 4.1.x client libraries, instead it requires MySQL 4.0.x client libraries. Also, we have noticed that psqlodbc-07.03.x will build against pgsql-7.4.x but when using the driver it fails with little or no information to indicate why it failed. We have found that psqlodbc-08.00.x works well with postgres-7.4.6. In all cases, consult the vendor's documentation.</para>
            <para>Support RLS development by sending your working RLS + ODBC Manager + ODBC Driver + RDBMS configuration to the rls-user@globus.org list! We cannot test on all platforms with all combinations so we rely on our user community to help advise new users. Your support in this matter is appreciated.</para>
            <para>We provide the following tips from the troubleshooting section of this guide:</para>
            <itemizedlist>
                <listitem><simpara><olink targetptr="rls-admin-trouble-odbc-recommend"/></simpara></listitem>
            </itemizedlist>
        </section> <!-- Choosing DBMS and ODBC END -->

    </section> <!-- Prequisites END -->

    <section id="rls-admin-install-base"><title>Installation of RLS</title>
        <para>The following section describes various options available to install RLS given that you have satisfied the prerequisites. The options include:</para>
        <itemizedlist>
            <listitem><simpara><olink targetptr="rls-admin-install-binary"/></simpara></listitem>
            <listitem><simpara><olink targetptr="rls-admin-install-source"/></simpara></listitem>
            <listitem><simpara><olink targetptr="rls-admin-install-update"/></simpara></listitem>
        </itemizedlist>

        <note><para>If you set the <computeroutput>ODBCINI</computeroutput> environment variable to the path of the odbc.ini file prior to installation, the globus-rls-server.conf will be seeded with the corresponding value. If you are not already familiar with odbc.ini it will be explained in <olink targetptr="rls-admin-install-db-dsn"/>. The setting is optional, since the globus-rls-server.conf can be changed at any time.</para></note>

        <section id="rls-admin-install-binary"><title>Installing RLS using Globus Toolkit Binary Bundle</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>from binary</secondary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>from binary</secondary></indexterm>
            <para>Follow instructions provided by <olink targetdoc="gtadmin"/> and <olink targetdoc="gtadmin" targetptr="gtadmin-install"/> in order to install the RLS from one of the available binary bundles of the Globus Toolkit. As noted in <olink targetptr="rls-admin-install-prereq-odbcman"/>, the <computeroutput>globus-rls-server</computeroutput> found in the binary bundles is linked to the default ODBC Manager.</para>
            <para>Once you have unpackaged the binary bundle, the following commands may be used to install RLS (the <computeroutput>--enable-rls</computeroutput> option is not required):</para>
            <screen>
% ./configure --prefix=$GLOBUS_LOCATION --enable-rls
% make
% make install
            </screen>
        </section>

        <section id="rls-admin-install-source"><title>Installing RLS using Globus Toolkit Source Bundle</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>from source</secondary></indexterm>
            <indexterm type="rls"><primary>installing</primary><secondary>from source</secondary></indexterm>
            <para>Follow instructions provided by <olink targetdoc="gtadmin"/> and <olink targetdoc="gtadmin" targetptr="gtadmin-install"/> in order to install the RLS from the available source bundle of the Globus Toolkit. In addition to the general requirements, you may optionally set environment variables pertaining to the include and lib path for your ODBC Manager installation. The following environment variables are not required to install RLS.</para>
            <para>If you wish to use unixODBC, set the following environment variables.</para>
            <screen>
% setenv GLOBUS_UNIXODBC_INCLUDES /path/to/unixODBC/include
% setenv GLOBUS_UNIXODBC_LIBS /path/to/unixODBC/lib
            </screen>
            <para>If you wish to use iODBC, set the following environment variables.</para>
            <screen>
% setenv GLOBUS_IODBC_INCLUDES /path/to/libiodbc/include
% setenv GLOBUS_IODBC_LIBS /path/to/libiodbc/lib
            </screen>
            <note><para>Your shell format for setting environment variables may be <computeroutput>export VAR=VAL</computeroutput> instead of <computeroutput>setenv VAR VAL</computeroutput>.</para></note>
            <para>Alternatively, instead of setting the above environment variables you may choose to specify the includes and libs path for your ODBC Manager using the Globus Toolkit <computeroutput>configure</computeroutput> script's options, which include <computeroutput>--with-unixodbc-includes=DIR</computeroutput> and <computeroutput>--with-unixodbc-libs=DIR</computeroutput> or <computeroutput>--with-iodbc-includes=DIR</computeroutput> and <computeroutput>--with-iodbc-libs=DIR</computeroutput>.</para>
            <para>Once you have unpackaged the source bundle, the following commands may be used to install RLS (the <computeroutput>--enable-rls</computeroutput> option is not required):</para>
            <screen>
% ./configure --prefix=$GLOBUS_LOCATION --enable-rls
% make
% make install
            </screen>
        </section>

        <section id="rls-admin-install-update"><title>Updating RLS using Globus Toolkit Source Bundle</title>
            <indexterm type="rls-howto"><primary>updating</primary><secondary>from source</secondary></indexterm>
            <indexterm type="rls"><primary>updating</primary><secondary>from source</secondary></indexterm>
            <para>In some situations, you may wish to update an RLS installation using RLS source from the Globus Toolkit Source Bundle. For instance, the RLS found in the Globus Toolkit binary bundles is linked against an ODBC Manager. If you would like to link to a different ODBC Manager, it may be easier to install the toolkit from the binary bundle and just update the RLS server package from source. This may save considerable time compared to building the entire Globus Toolkit from source.</para>
            <para>To do this, you must first follow the complete instructions found in <olink targetptr="rls-admin-install-binary"/> then set the environment according to the instructions found in <olink targetptr="rls-admin-install-source"/>. If you have not already set the <computeroutput>GPT_LOCATION</computeroutput> then set it to the <computeroutput>GLOBUS_LOCATION</computeroutput> (i.e., <computeroutput>setenv GPT_LOCATION $GLOBUS_LOCATION</computeroutput>).</para>
            <para>Once you have unpackaged the source bundle, the following commands may be used to install RLS:</para>
            <screen>
% cd source-trees-thr/replica/rls/server/
% $GPT_LOCATION/sbin/gpt-build -verbose -force <emphasis>gcc32dbgpthr</emphasis>
...
% $GPT_LOCATION/sbin/gpt-postinstall
...
            </screen>
            <para>You may select a flavor other than <emphasis>gcc32dbgpthr</emphasis> that is suitable to your platform and existing installation environment. You may omit the <computeroutput>-verbose</computeroutput> flag.</para>
        </section>
    </section> <!-- Installing RLS -->

    <section id="rls-admin-install-db"><title>Database Setup</title>
        <indexterm type="rls-howto"><primary>installing</primary><secondary>setting up the database</secondary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>setting up the database</secondary></indexterm>
        <para>By default, the RLS embedded database and related settings are automatically created and configured. Unless you chose to setup your own database management system for use with the RLS, you may skip this section and proceed to <olink targetptr="rls-configuring"/>.</para>
        <para>The following section describes the procedures necessary to complete the database setup for your RLS installation. Topics addressed include:</para>
        <itemizedlist>
            <listitem><simpara><olink targetptr="rls-admin-install-db-choose"/></simpara></listitem>
            <listitem><simpara><olink targetptr="rls-admin-install-db-conf"/></simpara></listitem>
            <listitem><simpara><olink targetptr="rls-admin-install-db-user"/></simpara></listitem>
            <listitem><simpara><olink targetptr="rls-admin-install-db-create"/></simpara></listitem>
            <listitem><simpara><olink targetptr="rls-admin-install-db-dsn"/></simpara></listitem>
        </itemizedlist>
        <note><para>The rest of this section assumes that the DBMS has been started.</para></note>

        <section id="rls-admin-install-db-choose"><title>Choose databases for RLS Server</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>setting up the database</secondary><tertiary>which database?</tertiary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>setting up the database</secondary><tertiary>which database?</tertiary></indexterm>
            <para>Decide which database(s) the RLS server will use:</para>
            <itemizedlist>
                <listitem><simpara>If the RLS server is a Local Replica Catalog (LRC) server you, will need to create the LRC database.</simpara></listitem>
                <listitem><simpara>If the server is a Replica Location Index (RLI) server, you may need to create a RLI database.</simpara></listitem>
            </itemizedlist>
            <para>An RLI server can receive updates from LRC servers in one of two forms, as LFN lists (in which case the RLI database must be created) or as highly compressed Bloom filters. Since Bloom filters are relatively small, they are kept in memory and no database is required (though if you plan to use the hierarchical RLI updates feature, you will still need the RLI database). An RLS server can be configured as both an LRC and RLI server.</para>
        </section>

        <section id="rls-admin-install-db-conf"><title>Configure database related RLS settings</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>setting up the database</secondary><tertiary>configure settings</tertiary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>setting up the database</secondary><tertiary>configure settings</tertiary></indexterm>
            <para>The RLS Server configuration file (<computeroutput>$GLOBUS_LOCATION/etc/globus-rls-server.conf</computeroutput>) contains a few settings related to your database setup. Throughout this guide we refer to the username as <emphasis>dbuser</emphasis> and the password as <emphasis>dbpassword</emphasis> and to the LRC database as <emphasis>lrc1000</emphasis> and the RLI database as <emphasis>rli1000</emphasis>. Substitute your chosen username, password, and database names where applicable. Also, you may change the <computeroutput>odbcini</computeroutput> setting to reflect the location of your ODBC Manager's odbc.ini file. You should be familiar with the location of this file from the installation of your ODBC Manager. As of the GT 4.1.x release, the RLS setup includes a default <computeroutput>odbc.ini</computeroutput> file installed to <computeroutput>$GLOBUS_LOCATION/var/odbc.ini</computeroutput> which is the initial default value of the <computeroutput>odbcini</computeroutput> configuration parameter. We discuss more about odbc.ini in <olink targetptr="rls-admin-install-db-dsn"/>.</para>
            <para>Edit the following fields in <computeroutput>$GLOBUS_LOCATION/etc/globus-rls-server.conf</computeroutput>:</para>
            <screen>
# Database connection options
db_user             dbuser 
db_pwd              dbpasswordgoeshere
odbcini             /path/to/var/odbc.ini
...
# LRC options
lrc_server          true
lrc_dbname          lrc1000  # optional (if LRC server)
...
#RLI options
rli_server          true
rli_dbname          rli1000  # optional (if RLI server)
...
rli_bloomfilter     false
...
            </screen>
        </section>

        <section id="rls-admin-install-db-user"><title>Create a database user account</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>setting up the database</secondary><tertiary>create user account</tertiary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>setting up the database</secondary><tertiary>create user account</tertiary></indexterm>
            <para>You or your system administrator must create a DBMS user account to be used by the RLS Server to log on to the DBMS. SQLite users may safely skip this step.</para>
            <para>For MySQL users, the command may look something like this:</para>
            <screen>
% /path/to/mysql/bin/mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 71 to server version: 4.0.18-standard-log
 
Type 'help;' or '\h' for help. Type '\c' to clear the buffer.
 
mysql> use mysql;
Database changed
mysql> grant all on lrc1000.* to dbuser@localhost identified by 'dbpassword';
mysql> grant all on rli1000.* to dbuser@localhost identified by 'dbpassword';
            </screen>
            <para>For PostgreSQL user, the command may look something like this:</para>
            <screen>
% /path/to/pgsql/bin/createuser -P dbuser -W
Enter password for new user:
Enter it again:
Shall the new user be allowed to create databases? (y/n) y
Shall the new user be allowed to create more new users? (y/n) n
Password:
CREATE USER
            </screen>
        </section> <!-- Create DBMS User -->

        <section id="rls-admin-install-db-create"><title>Create databases</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>setting up the database</secondary><tertiary>create databases</tertiary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>setting up the database</secondary><tertiary>create databases</tertiary></indexterm>
            <para>We provide SQL Data Definition (DDL) scripts to create the databases required by the RLS Server. Configure the script(s) for the database(s) you will create. The SQL scripts for the LRC and RLI databases are installed in <computeroutput>$GLOBUS_LOCATION/setup/globus</computeroutput>.</para>
            <para>For PostgreSQL, use:</para>
            <itemizedlist>
                <listitem><simpara><computeroutput>globus-rls-lrc-postgres.sql</computeroutput></simpara></listitem>
                <listitem><simpara><computeroutput>globus-rls-rli-postgres.sql</computeroutput></simpara></listitem>
            </itemizedlist>
            <para>For MySQL, use:</para>
            <itemizedlist>
                <listitem><simpara><computeroutput>globus-rls-lrc-mysql.sql</computeroutput></simpara></listitem>
                <listitem><simpara><computeroutput>globus-rls-rli-mysql.sql</computeroutput></simpara></listitem>
            </itemizedlist>
            <para>For SQLite, use:</para>
            <itemizedlist>
                <listitem><simpara><computeroutput>globus-rls-lrc-sqlite.sql</computeroutput></simpara></listitem>
                <listitem><simpara><computeroutput>globus-rls-rli-sqlite.sql</computeroutput></simpara></listitem>
            </itemizedlist>
            <para>For Oracle DBMS, use:</para>
            <itemizedlist>
                <listitem><simpara><computeroutput>globus-rls-lrc-oracle.sql</computeroutput></simpara></listitem>
                <listitem><simpara><computeroutput>globus-rls-rli-oracle.sql</computeroutput></simpara></listitem>
            </itemizedlist>
            <para>Edit these files to set the name of the database user you created for RLS and the names of the databases configured in <computeroutput>$GLOBUS_LOCATION/etc/globus-rls-server.conf</computeroutput>.</para>
            <para>Create the database(s) using the appropriate tool for your chosen DBMS.</para>
            <para>For PostgreSQL, the commands should look like this:</para>
            <screen>
% createdb -O <emphasis>dbuser</emphasis>  -U <emphasis>dbuser</emphasis>  -W <emphasis>lrc1000</emphasis>
% createdb -O <emphasis>dbuser</emphasis>  -U <emphasis>dbuser</emphasis>  -W <emphasis>rli1000</emphasis>
% psql -W -U <emphasis>dbuser</emphasis>  -d <emphasis>lrc1000</emphasis>  -f $GLOBUS_LOCATION/setup/globus/globus-rls-lrc-postgres.sql
% psql -W -U <emphasis>dbuser</emphasis>  -d <emphasis>rli1000</emphasis>  -f $GLOBUS_LOCATION/setup/globus/globus-rls-rli-postgres.sql
            </screen>
            <para>For MySQL, the commands should look like this:</para>
            <screen>
% mysql -p -u <emphasis>dbuser</emphasis>  &lt; $GLOBUS_LOCATION/setup/globus/globus-rls-lrc-mysql.sql
% mysql -p -u <emphasis>dbuser</emphasis>  &lt; $GLOBUS_LOCATION/setup/globus/globus-rls-rli-mysql.sql
            </screen>
            <para>For SQLite, the commands should look like this:</para>
            <screen>
% sqlite3 <emphasis>$GLOBUS_LOCATION/var/globus-rls-lrc1000.db</emphasis>  &lt; $GLOBUS_LOCATION/setup/globus/globus-rls-lrc-sqlite.sql
% sqlite3 <emphasis>$GLOBUS_LOCATION/var/globus-rls-rli1000.db</emphasis>  &lt; $GLOBUS_LOCATION/setup/globus/globus-rls-rli-sqlite.sql
            </screen>
        </section> <!-- Create databases -->

        <section id="rls-admin-install-db-dsn"><title>Specify Data Source Names (DSNs)</title>
            <indexterm type="rls-howto"><primary>installing</primary><secondary>setting up the database</secondary><tertiary>DSNs</tertiary></indexterm>
        <indexterm type="rls"><primary>installing</primary><secondary>setting up the database</secondary><tertiary>DSNs</tertiary></indexterm>
            <para>Data Source Names (DSNs) are used by ODBC software (and the applications that depend on ODBC software) to define connection settings between the database client and the DBMS. The RLS depends on the data source names configured in <olink targetptr="rls-admin-install-db-conf"/> for the <computeroutput>lrc_dbname</computeroutput> and <computeroutput>rli_dbname</computeroutput> settings.</para>
            <para>DSNs are configured in a file named <computeroutput>odbc.ini</computeroutput>. Most ODBC Managers find this file in the following search order.</para>
            <itemizedlist>
                <listitem><simpara>The <computeroutput>ODBCINI</computeroutput> environment variable with value of <computeroutput>/path/to/odbc.ini</computeroutput></simpara></listitem>
                <listitem><simpara>The user odbc.ini found at <computeroutput>~/.odbc.ini</computeroutput></simpara></listitem>
                <listitem><simpara>The system odbc.ini found at <computeroutput>/etc/odbc.ini</computeroutput> or similar location</simpara></listitem>
            </itemizedlist>
            <para>DSNs may be configured in a variety of ways, but they essentially contain the same information which includes:</para>
            <itemizedlist>
                <listitem><simpara><emphasis>DSN</emphasis> such as lrc1000 or rli1000 </simpara></listitem>
                <listitem><simpara><emphasis>Driver</emphasis>: the path to the ODBC driver (such as psqlodbc.so, libmyodbc3.so, or libsqlite3odbc.so)</simpara></listitem>
                <listitem><simpara><emphasis>Database</emphasis>: the name of the database (in the case of SQLite, this parameter's value will indicate the path to the database file)</simpara></listitem>
                <listitem><simpara><emphasis>Server name</emphasis>: the hostname of the DBMS server</simpara></listitem>
                <listitem><simpara><emphasis>Port</emphasis>: the port number of the DBMS server</simpara></listitem>
                <listitem><simpara><emphasis>Socket</emphasis>: in some cases a local socket file is used if the DBMS and RLS are installed on the same server</simpara></listitem>
            </itemizedlist>
            <para>As of the Globus Toolkit 4.1.x release, the RLS setup includes a default odbc.ini file installed to <computeroutput>$GLOBUS_LOCATION/var/odbc.ini</computeroutput>. The settings of the included odbc.ini are appropriate for usage with the psqlODBC driver and reference psqlODBC libraries installed to <computeroutput>$GLOBUS_LOCATION/lib/psqlodbc.so</computeroutput>, which is the location of the libraries as installed by the Globus Toolkit binary installer and the source installer by using the <computeroutput>make globus_database_psqlodbc</computeroutput> target. When using the installed odbc.ini file, you may still need to set your <computeroutput>ODBCINI</computeroutput> environment variable to the odbc.ini file's location.</para>
            <para>We provide the following tips from the troubleshooting section of this guide:</para>
            <itemizedlist>
                <listitem><simpara><olink targetptr="rls-admin-trouble-odbc-ini"/></simpara></listitem>
                <listitem><simpara><olink targetptr="rls-admin-trouble-odbc-ini-find"/></simpara></listitem>
                <listitem><simpara>In particular, please see <olink targetptr="rls-admin-trouble-odbc-test"/></simpara></listitem>
            </itemizedlist>
        </section> <!-- Specify DSNs -->

    </section> <!-- Database Setup -->

</chapter> <!-- Building and Installing -->


    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
        href="../RLS_Interface_Config_Frag.xml"/>

<!-- Why bother including this section??? 
<chapter id="rls-admin-deploying"><title>Deploying</title>
    <para>This section does not apply to the RLS.</para>
</chapter>
-->
<chapter id="rls-admin-start"><title>Starting the RLS Server</title>
    <indexterm type="rls-howto"><primary>server operations</primary><secondary>starting RLS server</secondary></indexterm>
    <indexterm type="rls"><primary>server operations</primary><secondary>starting RLS server</secondary></indexterm>
    <para>The RLS Server may be started by directly invoking the executable and passing it command-line arguments or by using the startup script. For complete details on starting the server directly, refer to <olink targetdoc="rlsPI" targetptr="globus-rls-server"/>. We provide a startup script found at <computeroutput>$GLOBUS_LOCATION/sbin/SXXrls</computeroutput>, which you may use in places like <computeroutput>/etc/init.d</computeroutput> for automated startup and shutdown of the server. You may start the RLS Server by using this script as follows:</para>
    <screen>
% $GLOBUS_LOCATION/sbin/SXXrls start
    </screen>
    <para>In addition to the startup script, the RLS Server may be started by using the executable as follows:</para>
    <screen>
% $GLOBUS_LOCATION/bin/globus-rls-server <emphasis>[-d] [-L log-level]</emphasis>
    </screen>
    <para>We provide the following tips from the troubleshooting section of this guide:</para>
    <itemizedlist>
        <listitem><simpara><olink targetptr="rls-admin-trouble-start"/></simpara></listitem>
    </itemizedlist>
</chapter>

<chapter id="rls-admin-stop"><title>Stopping the RLS Server</title>
    <indexterm type="rls-howto"><primary>server operations</primary><secondary>stopping RLS server</secondary></indexterm>
    <indexterm type="rls"><primary>server operations</primary><secondary>stopping RLS server</secondary></indexterm>
    <para>The RLS Server may be stopped by directly issuing a <computeroutput>KILL</computeroutput> signal, by using the RLS Admin client, or by using the startup script.</para>
    <para>If you have started the RLS Server directly, using <olink targetdoc="rlsPI" targetptr="globus-rls-server"/>, and you have not detached the process, you may issue a <computeroutput>CTRL-C</computeroutput> in the terminal window. If the server is running detached or was started using the startup script, you may issue a <computeroutput>KILL</computeroutput> signal to the globus-rls-server process. The RLS Server will catch the KILL signal and safely shutdown.</para>
    <para>Using the RLS Admin client (see <olink targetdoc="rlsPI" targetptr="globus-rls-admin"/> for details), you may shutdown the RLS Server using the following command (this is also effective for shutting down remote RLS Servers):</para>
    <screen>
% $GLOBUS_LOCATION/bin/globus-rls-admin -q <emphasis>rls[n]://hostname:port</emphasis>
    </screen>
    <para>Using the RLS Server startup script found at <computeroutput>$GLOBUS_LOCATION/sbin/SXXrls</computeroutput>, you may shutdown the RLS Server using the following command:</para>
    <screen>
% $GLOBUS_LOCATION/sbin/SXXrls stop
    </screen>
</chapter>

<chapter id="rls-admin-testing"><title>Testing</title>
    <indexterm type="rls-howto"><primary>testing</primary><secondary>your installation</secondary></indexterm>
    <indexterm type="rls"><primary>testing</primary><secondary>your installation</secondary></indexterm>
    <section id="rls-admin-testing-manual">
    <para>You can use the programs <computeroutput>globus-rls-admin
        </computeroutput>and <computeroutput>globus-rls-cli </computeroutput>to test functionality. See their 
        respective <computeroutput>man</computeroutput> pages for details on their use.
        <!-- We'll also describe how to use the <computeroutput>runtest</computeroutput> script that comes installed 
        with RLS. //--></para>

    <orderedlist>
        <listitem><para>Start the server in debug mode with the command:</para>
            <screen>$GLOBUS_LOCATION/bin/globus-rls-server [-N] -d -L 3</screen>
            <para>The <computeroutput>-N </computeroutput>option is helpful: if you do not have a host 
                certificate for the server host, or a user certificate for yourself, it 
                disables authentication. </para></listitem>
        <listitem><para>Ping the server using <computeroutput>globus-rls-admin</computeroutput>:</para>
            <screen>$GLOBUS_LOCATION/bin/globus-rls-admin -p rls://serverhost</screen>
            <para>If you disabled authentication (by starting the server with the <computeroutput>-N
            </computeroutput>option), then use this command: </para>
            <screen>$GLOBUS_LOCATION/bin/globus-rls-admin -p rlsn://serverhost</screen>
        </listitem>
    </orderedlist>
    </section>
    <section id="rls-admin-testing-unit">
        <para>For complete testing, use the following automated test scripts</para>
        <orderedlist>
            <listitem><para>For an exhaustive test of RLS features run the following command.</para>
                <screen>$GLOBUS_LOCATION/test/globus_rls_test/TESTS.pl</screen>
            </listitem>
            <!-- fixme GT42
            <listitem><para>For a test of the subset of RLS features supported by the newer registry interface, run the following command.</para>
                <screen>$GLOBUS_LOCATION/test/globus_replica_naming_test_unit/TESTS.pl</screen>
            </listitem>
            -->
        </orderedlist>
    </section>
</chapter>

<chapter id="rls-admin-security_considerations"><title>Security Considerations </title>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
        href="../RLS_Security_Considerations_Frag.xml"/>
</chapter>
    
             <!-- cedps logging information commented out until included in code    
    <chapter id="rls-admin-debugging">
        <title>Debugging</title>
         <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
        href="../RLS_Logging_Frag.xml"/>
    </chapter>
            -->
    
<chapter id="rls-admin-troubleshooting"><title>Troubleshooting</title>
    <indexterm type="rls-howto"><primary>troubleshooting</primary><secondary>for admin</secondary></indexterm>
    <indexterm type="rls"><primary>troubleshooting</primary><secondary>for admin</secondary></indexterm>
    <para>General information on troubleshooting can be found in the
        <ulink url="http://www.globus.org/toolkit/data/rls/rls_faq.html">FAQ</ulink>. For a list of common errors in GT, see 
        <olink targetdoc="gtuser" targetptr="errors"/>.</para>
    
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
        href="../RLS_Errors_Frag.xml"/>

    <section id="rls-admin-trouble-mysql-install"><title>I need help installing MySQL DBMS</title>
        <para>There is simply too much information on DBMS installation for us to provide useful tips. In general, a binary package with a native installer (e.g., RPM, PKG, etc.) is the best option if you have root privileges. A binary package without a native installer is an excellent option if you do not have root privileges. And if all else fails, you can always try source installers. We have found most source installers of the DBMS to be reliable.</para>
        <para>We have used RLS with MySQL versions 4.0.x, 4.1.x, and 5.0.x.</para>
    </section>

    <section id="rls-admin-trouble-mysql-install-check"><title>How can I check if MySQL is installed correctly?</title>
        <para>There are probably numerous things you could do, but one simple check is to see if you can log on to the database. Of course, this requires that you have a user account. Assuming you installed the DBMS yourself, you should be able to log on as root:</para>
        <screen>
% /path/to/mysql/bin/mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 64 to server version: 4.0.18-standard-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql> show databases;
+-------------------+
| Database          |
+-------------------+
| mysql             |
| test              |
+-------------------+
2 rows in set (0.03 sec)

mysql> quit
Bye
        </screen>
        <para>If you did not install the DBMS yourself but were given an account on a remote server, you should be able to log on using your user account:</para>
        <screen>
% /path/to/mysql/bin/mysql -h <emphasis>hostname</emphasis> -P <emphasis>3306</emphasis> -u <emphasis>dbuser</emphasis> -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 66 to server version: 4.0.18-standard-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql>
        </screen>
    </section>

    <section id="rls-admin-trouble-pgsql-install"><title>I need help installing PostgreSQL DBMS</title>
        <para>There is simply too much information on DBMS installation for us to provide useful tips. In general, a binary package with a native installer (e.g., RPM, PKG, etc.) is the best option if you have root privileges. A binary package without a native installer is an excellent option if you do not have root privileges. And if all else fails, you can always try source installers. We have found most source installers of the DBMS to be reliable.</para>
        <para>We have used RLS with PostgreSQL versions 7.4.x and it seems to work well with 8.x also.</para>
    </section>

    <section id="rls-admin-trouble-pgsql-install-check"><title>How can I check if PostgreSQL is installed correctly?</title>
        <para>There are probably numerous things you could do, but one simple check is to see if you can log on to the DBMS. Of course, this requires that you have a user account. Assuming you installed the DBMS yourself, you should be able to log on as root:</para>
        <screen>
% /path/to/pgsql/bin/psql
Welcome to psql 7.4.6, the PostgreSQL interactive terminal.

Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help on internal slash commands
       \g or terminate with semicolon to execute query
       \q to quit

<emphasis>user</emphasis>=#
        </screen>
        <para>If you did not install the DBMS yourself but were given an account on a remote server, you should be able to log on using your user account:</para>
        <screen>
% /path/to/pgsql/bin/psql -h <emphasis>hostname</emphasis> -p <emphasis>5432</emphasis> -U <emphasis>dbuser</emphasis> -W <emphasis>dbname</emphasis>
Password:
Welcome to psql 7.4.6, the PostgreSQL interactive terminal.
 
Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help on internal slash commands
       \g or terminate with semicolon to execute query
       \q to quit
 
<emphasis>dbname</emphasis>=>
        </screen>
    </section>

    <section id="rls-admin-trouble-pgsql-tcpip"><title>I cannot connect to PostgreSQL</title>
        <para>If you cannot connect to PostgreSQL but you know that the process is alive, you may have forgotten to use the <computeroutput>-i</computeroutput> when starting the DBMS. This option instructs <computeroutput>postmaster</computeroutput> to listen on TCP/IP socket. Without it, postmaster will not accept socket connections from clients.</para>
    </section>

    <section id="rls-admin-trouble-pgsql-vacuum"><title>Performance of RLS with PostgreSQL has degraded over time</title>
        <para>Be sure to do periodic <computeroutput>vacuum</computeroutput> and <computeroutput>analyze</computeroutput> commands on all your PostgreSQL databases. The PostgreSQL documentation recommends doing this daily from <computeroutput>cron</computeroutput>. Failure to do this can seriously degrade performance, to the point where routine RLS operations (such as LRC to RLI soft state updates) timeout and fail. Please see the PostgreSQL documentation for further details.</para>
    </section>

    <section id="rls-admin-trouble-sqlite-install"><title>I need help installing SQLite embedded database</title>
        <para>Please be aware that we have relatively limited exposure to using RLS with SQLite than other database management systems. As of the GT 4.2 development branch, we have added SQLite setup scripts to create the RLS schema in a sqlite embedded database. Our testing has been limited to various Linux flavors on 32-bit platforms.</para>
        <para>You are encouraged to review the SQLite site for authoritative details on installation of sqlite3. The following commands have been used by us to install sqlite-3.3.6:</para>
        <screen>
% tar zxvf sqlite-3.3.6.tar.gz
% mkdir bld
% cd bld
% ../sqlite-3.3.6/configure --prefix=<emphasis>/path/to/install</emphasis> --enable-threadsafe
% make
% make install
        </screen>
    </section>

    <section id="rls-admin-trouble-sqlite-install-check"><title>How can I check if SQLite is installed correctly?</title>
        <para>There are probably numerous things you could do, but one simple check is to see if you can open a test database. You should be able to open a test database and perform various SQL operations:</para>
        <screen>
% /path/to/sqlite/bin/sqlite3 test.db
SQLite version 3.3.6
Enter ".help" for instructions
sqlite>
        </screen>
    </section>

    <section id="rls-admin-trouble-iodbc-install"><title>I need help installing iODBC</title>
        <para>The iodbc.org website contains information on installation of the iODBC (or libiodbc) library. We have used the following commands to install iODBC version 3.52.4 in our development and test sites. From the libiodbc build directory:</para>
        <screen>
% ./configure <emphasis>--prefix=/path/to/libiodbc-3.52.4 \
--with-iodbc-inidir=/path/to/etc --disable-gui --disable-gtktest</emphasis>
% make
% make install
        </screen>
        <para>The configure parameters are optional. The defaults enable the features required by RLS, namely pthreads. We prefer to install to a specified directory due to testing against multiple ODBC managers, however, this would not apply to most end users. We also prefer not to install the GUI features.</para>
        <para>Keep in mind, if you install the ODBC Manager library to a non-standard location, you will need to update your library path (e.g., <computeroutput>LD_LIBRARY_PATH</computeroutput>) to reflect your non-standard installation.</para>
    </section>

    <section id="rls-admin-trouble-unixodbc-install"><title>I need help installing unixODBC</title>
        <para>The unixodbc.org website contains information on installation of the unixODBC library. We have used the following commands to install unixODBC version 2.2.11 in our development and test sites. From the unixODBC build directory:</para>
        <screen>
% ./configure <emphasis>--prefix=/path/to/unixODBC --disable-gui \
  --disable-drivers</emphasis>
% make
% make install
        </screen>
        <para>The configure parameters are optional. The defaults enable the features required by RLS, namely threads. We prefer to install to a specified directory due to testing against multiple ODBC managers, however, this would not apply to most end users. We also prefer not to install the GUI features or the supplied drivers.</para>
        <para>Keep in mind, if you install the ODBC Manager library to a non-standard location, you will need to update your library path (e.g., <computeroutput>LD_LIBRARY_PATH</computeroutput>) to reflect your non-standard installation.</para>
    </section>

    <section id="rls-admin-trouble-unixodbc-install-osxfix"><title>Building unixODBC failed on OS X</title>
        <para>Building unixODBC-2.2.11 on OS X failed for us too. Our unixODBC tarball came from the unixodbc.org project site. It may be that other sources of this tarball may have been ported properly. What we found by doing a brief search was that making a small change to one of the files corrected the problem. In the file <computeroutput>Drivers/txt/SQLTables.c</computeroutput>, we made the following change from:</para>
        <screen>
#ifdef OSXHEADER
#include &lt;i386/types.h&gt;
#endif
        </screen>
        <para>to:</para>
        <screen>
/*
#ifdef OSXHEADER
#include &lt;i386/types.h&gt;
#endif
*/
        </screen>
    </section>

    <section id="rls-admin-trouble-myodbc-install"><title>I need help installing MySQL Connector/ODBC</title>
        <para>The MySQL project/company provide several binary packages for several major platforms using a variety of native installers. We recommend using this approach if possible, though it may require root privileges and help from your system administator. There are also binary packages available that do not use native installers, which can be used without root privileges and provide a better option than source installation.</para>
        <para>From what we can tell, the 3.51.12 version of MySQL Connector/ODBC from the binary bundles provided by MySQL will work with unixODBC-2.2.11 but not with libiodbc-3.52.4 or earlier. The last known combinations of drivers from MySQL that worked with iODBC that we know of are:</para>
        <itemizedlist>
            <listitem><simpara>MyODBC-3.51.06 and libiodbc-3.51.1</simpara></listitem>
            <listitem><simpara>MyODBC-3.51.06 and libiodbc-3.51.2</simpara></listitem>
        </itemizedlist>
        <para>Unfortunately, MySQL does not provide links to packages of MyODBC-3.51.06 as far as we can tell. You may find mirrors of the MySQL site that still have this driver available by searching the web for &quot;myodbc 3.51.06&quot;. <ulink url="http://sunsite.mff.cuni.cz/MIRRORS/ftp.mysql.com/downloads/api-myodbc-3.51.html">We found this one.</ulink></para>

        <section id="rls-admin-trouble-myodbc-35112-bin"><title>MySQ Connector/ODBC 3.51.12 (binary)</title>
            <para>With mysql-connector-odbc-3.51.12-linux-i686, we have used the following commands to install the driver.</para>
            <screen>
% tar -zxvf /path/tomysql-connector-odbc-3.51.12-linux-i686.tar.gz
            </screen>
            <para>We have successfully used this driver with unixODBC-2.2.11. However, when testing against libiodbc-3.52.4 using the <computeroutput>iodbctest</computeroutput> utility, the driver failed with the following error.</para>
            <screen>
% ./bin/iodbctest "DSN=lrc1000_mysql_3_51_12;UID=dbpassword;PWD:dbpassword"
iODBC Demonstration program
This program shows an interactive SQL processor
Driver Manager: 03.52.0406.0126
1: SQLDriverConnect = [MySQL][ODBC 3.51 Driver]Invalid window handle for
connection completion argument. (0) SQLSTATE=IM008
1: ODBC_Connect = [MySQL][ODBC 3.51 Driver]Invalid window handle for connection
completion argument. (0) SQLSTATE=IM008

Have a nice day.
            </screen>
            <para>We did not &quot;Have a nice day&quot; after this. There is limited information on this error, though it did appear that the driver loaded and attempted to make a connection.</para>
        </section>

        <section id="rls-admin-trouble-myodbc-35112-src"><title>MySQL Connector/ODBC 3.51.12 (source)</title>
            <para>We attempted building and installing the mysql-connector-odbc-3.51.12 driver from the source package. We attempted building against unixODBC and libiodbc libraries and mysql-4.0.18 and mysql-5.0.21. We used a variety of configure options. In the end, we encountered configure or compiler errors that prevented us from using the source package.</para>
        </section>

        <section id="rls-admin-trouble-myodbc-35106-bin"><title>MyODBC 3.51.06 (binary)</title>
            <para>With MyODBC-3.51.06-pc-linux-gnu-i686, we have used the following commands to install the driver.</para>
            <screen>
% tar -zxvf /path/to/MyODBC-3.51.06-pc-linux-gnu-i686
            </screen>
            <para>We have successfully used this driver with unixODBC-2.2.11 and libiodbc-3.52.4.</para>
        </section>

        <section id="rls-admin-trouble-myodbc-35106-unixodbc"><title>MyODBC 3.51.06 (source) and unixODBC</title>
            <para>With MyODBC-3.51.06, we have used the following commands to install myodbc in our development and test sites. From the MyODBC-3.51.06 build directory:</para>
            <screen>
% ./configure <emphasis>--prefix=/path/to/odbc/Drivers/MyODBC-3.51.06-unixODBC</emphasis> \
 --with-unixODBC <emphasis>--with-unixODBC-includes=/path/to/odbc/unixODBC-2.2.11/include \
 --with-unixODBC-libs=/path/to/odbc/unixODBC-2.2.11/lib \
 --with-odbc-ini=/path/to/odbc/etc/odbc.ini \
 --with-mysql-includes=/path/to/mysql/include --with-mysql-libs=/path/to/mysql/lib</emphasis> \
 --enable-thread-safe <emphasis>--without-samples</emphasis>
% gmake
% gmake install
            </screen>
            <para><emphasis>Note:</emphasis> when building against unixODBC you must use the <computeroutput>--with-unixODBC</computeroutput> flag even if you use the <computeroutput>--with-unixODBC-includes=DIR</computeroutput> and <computeroutput>--with-unixODBC-libs=DIR</computeroutput> parameters.</para>
            <para>You must use the <computeroutput>--enable-thread-safe</computeroutput> flag.</para>
            <para>Also, be prepared to see a large number of compiler warnings when building this library.</para>
        </section>

        <section id="rls-admin-trouble-myodbc-35106-iodbc"><title>MyODBC 3.51.06 (source) and iODBC</title>
            <para>With MyODBC-3.51.06, we have used the following commands to install myodbc in our development and test sites. From the MyODBC-3.51.06 build directory:</para>
            <screen>
% ./configure <emphasis>--prefix=/path/to/odbc/Drivers/MyODBC-3.51.06-iODBC</emphasis> \
 <emphasis>--with-iodbc=/path/to/libiodbc-3.51.2 --with-odbc-ini=/path/to/odbc/etc/odbc.ini \
 --with-mysql-includes=/path/to/mysql/include --with-mysql-libs=/path/to/mysql/lib</emphasis> \
 --enable-thread-safe <emphasis>--without-samples</emphasis>
% gmake
% gmake install
            </screen>
            <para><emphasis>Note:</emphasis> when building against iODBC you must use the <computeroutput>--with-iodbc=DIR</computeroutput> parameter. The <computeroutput>--with-iodbc-includes=DIR</computeroutput> and <computeroutput>--with-iodbc-libs=DIR</computeroutput> parameters DO NOT work.</para>
            <para>You must use the <computeroutput>--enable-thread-safe</computeroutput> flag.</para>
            <para>Also, be prepared to see a large number of compiler warnings when building this library.</para>
        </section>
    </section> 
    <!-- Help installing MySQL Connector/ODBC -->

    <section id="rls-admin-trouble-psqlodbc-install"><title>I need help installing psqlODBC</title>
        <para>The README file or docs directory included with the psqlODBC package contains information on installation of the psqlodbc library. We have noticed some differences between building and installing psqlodbc-7.2.5, psqlodbc-08.00.0102, and psqlodbc-08.01.0200 againt iODBC and unixODBC.</para>
        <para><emphasis>Note:</emphasis> In earlier versions of this guide, we warned that the <computeroutput>--with-iodbc</computeroutput> configure option resulted in an unstable psqlodbc library that caused memory corruption and failure (e.g., core dump) when an application (RLS Server) attempted to open the database connection. We have not experienced this problem with the more recent versions of psqlodbc that we have tested and which are documented below.</para>

        <section id="rls-admin-trouble-psqlodbc-725-unixodbc"><title>psqlodbc-7.2.5 (source) and unixODBC-2.2.11</title>
            <para>With psqlodbc-7.2.5, we have used the following commands to install psqlodbc in our development and test sites. From the psqlodbc build directory:</para>
            <screen>
% ./configure <emphasis>--prefix=/path/to/odbc/Drivers/psqlodbc-7.2.5-unixODBC</emphasis> \
  --enable-pthreads --with-unixodbc
% gmake
% gmake install
            </screen>
            <para>You may also want to consider setting CPPFLAGS and LDFLAGS if you install your ODBC Manager in a non-standard location.</para>
        </section>

        <section id="rls-admin-trouble-psqlodbc-725-iodbc"><title>psqlodbc-7.2.5 (source) and libiodbc-3.52.4</title>
            <para>With psqlodbc-7.2.5, we have used the following commands to install psqlodbc in our development and test sites. From the psqlodbc build directory:</para>
            <screen>
% ./configure <emphasis>--prefix=/path/to/odbc/Drivers/psqlodbc-7.2.5-iODBC</emphasis> \
  --enable-pthreads --with-iodbc
% gmake
% gmake install
            </screen>
            <para>You may also want to consider setting CPPFLAGS and LDFLAGS if you install your ODBC Manager in a non-standard location.</para>
        </section>

        <section id="rls-admin-trouble-psqlodbc-08000102-unixodbc"><title>psqlodbc-08.00.0102 (source) and unixODBC-2.2.11</title>
            <para>With psqlodbc-08.00.0102, we have used the following commands install psqlODBC with a unixODBC-2.2.11 installation. From the psqlodbc build directory:</para>
            <screen>
% ./configure <emphasis>--prefix=/path/to/odbc/Drivers/psqlodbc-08.00.0102-unixODBC</emphasis> \
  --enable-pthreads --with-unixodbc <emphasis>LDFLAGS="-L/path/to/odbc/unixODBC-2.2.11/lib"</emphasis> \
  <emphasis>CPPFLAGS="-I/path/to/odbc/unixODBC-2.2.11/include"</emphasis>
% gmake
% gmake install
            </screen>
        </section>

        <section id="rls-admin-trouble-psqlodbc-08000102-iodbc-3524"><title>psqlodbc-08.00.0102 (source) and libiodbc-3.52.4</title>
            <para>With psqlodbc-08.00.0102, we have used the following commands to configure psqlodbc but it failed to build. We have no advice on resolving this problem other than to suggest using a different combination of ODBC Manager and ODBC Driver.</para>
            <screen>
% ./configure <emphasis>--prefix=/path/to/odbc/Drivers/psqlodbc-08.00.0102-iODBC</emphasis> \
  --enable-pthreads --with-iodbc <emphasis>LDFLAGS=-L/path/to/odbc/libiodbc-3.52.4/lib</emphasis> \
  <emphasis>CPPFLAGS=-I/path/to/odbc/libiodbc-3.52.4/include</emphasis>
% gmake
...ends in errors...
            </screen>
        </section>

        <section id="rls-admin-trouble-psqlodbc-08000102-iodbc-3512"><title>psqlodbc-08.00.0102 (source) and libiodbc-3.51.2</title>
            <para>With psqlodbc-08.00.0102, we have used the following commands to configure psqlodbc and to build it successfully. In this case, we used psqlodbc along with libiodbc-3.51.2.</para>
            <screen>
% ./configure <emphasis>--prefix=/path/to/odbc/Drivers/psqlodbc-08.00.0102-iODBC</emphasis> \
  --enable-pthreads --with-iodbc <emphasis>LDFLAGS=-L/path/to/odbc/libiodbc-3.51.2/lib</emphasis> \
  <emphasis>CPPFLAGS=-I/path/to/odbc/libiodbc-3.51.2/include</emphasis>
% gmake
% gmake install
            </screen>
        </section>

        <section id="rls-admin-trouble-psqlodbc-08010200"><title>psqlodbc-08.01.0200 (source)</title>
            <para>We have NOT succeeded installing psqlodbc-08.01.0200 from source with either iODBC or unixODBC.</para>
        </section>
    </section> 
    <!-- Help installing psqlODBC -->

    <section id="rls-admin-trouble-sqliteodbc-install"><title>I need help installing SQLite ODBC Driver</title>
        <para>The README file included with the SQLite ODBC Driver package contains information on installation of the sqliteodbc library. Please be aware that the author of the SQLite ODBC Driver states that the package is of experimental quality.</para>

        <section id="rls-admin-trouble-sqliteodbc-069-iodbc"><title>sqliteodbc-0.69 (source) and iODBC-3.51.2</title>
            <para>With sqliteodbc-0.69, we have used the following commands to install sqliteodbc in our development and test sites. From the sqliteodbc build directory:</para>
            <screen>
% ./configure  --prefix=<emphasis>/path/to/install</emphasis> <emphasis>--disable-winterface</emphasis> --with-sqlite3=<emphasis>/path/to/sqlite-3.3.6</emphasis> --with-odbc=<emphasis>/path/to/libiodbc-3.51.2</emphasis>
% make
% make install
            </screen>
            <para>Note the distinction between using <computeroutput>--with-sqlite=DIR</computeroutput> and <computeroutput>--with-sqlite3=DIR</computeroutput>. Use the latter for the sqlite3 database library (recommended).</para>
        </section>
    </section> 
    <!-- Help installing SQLite ODBC -->

    <section id="rls-admin-trouble-odbc-recommend"><title>Which libraries do you recommend to new users?</title>
        <para>The short answer, consider the following options:</para>
        <itemizedlist>
            <listitem><simpara>PostgreSQL (recent stable) with psqlODBC (08.00.0102) with unixODBC (2.2.11)</simpara></listitem>
            <listitem><simpara>MySQL (recent stable) with MySQL Connector/ODBC (3.51.12, binary package) with unixODBC (2.2.11)</simpara></listitem>
        </itemizedlist>
        <para>The long answer follows. First of all, if you are a new user and not confident installing system level software, you will save yourself a lot of time and trouble by consulting with your system administrator. If you are an administrator and you still find this troubling, then you are in good company.</para>
        <para>As of the writing of this guide, we have experienced a higher success rate using unixODBC (current stable release at this time is version 2.2.11) than we have with iODBC (current stable release is version 3.52.4).</para>
        <para>As of the writing of this guide, we have found PostgreSQL and psqlODBC installation from source to be reliable. We would recommend the use of psqlODBC version 08.00.0102 with unixODBC. If you are an iODBC user, you will need to use psqlODBC 7.2.5.</para>
        <para>As of the writing of this guide, we have found MySQL and MySQL Connector/ODBC installation from binary to be reliable. We would recommend the use of MySQL Connector/ODBC version 3.51.12 with unixODBC. If you are a iODBC user, you will need to find a binary of MyODBC 3.51.06.</para>
    </section>

    <section id="rls-admin-trouble-odbc-ini"><title>I need help configuring my DSNs</title>
        <para>There are a variety of ways that you can specify the Data Source Names (DSNs) in the odbc.ini file. You may use a GUI or command-line tool provided with your ODBC Manager (unixODBC or iODBC). We tend to edit the odbc.ini file directly when working in our development and test sites, however, you should avoid this practice unless you are experienced with using ODBC tools (a small typo such as an unwanted space character can prevent your configuration from working -- with little in the way of useful error messages).</para>
        <para>The following is an example of a typical setup when using PostgreSQL:</para>
        <screen>
[lrc1000]
Driver      = /path/to/lib/psqlodbc.so
Database    = lrc1000
Servername  = hostname
Port        = 5432

[rli1000]
Driver      = /path/to/lib/psqlodbc.so
Database    = rli1000
Servername  = hostname
Port        = 5432
        </screen>
        <para>The following is an example of a typical setup when using MySQL:</para>
        <screen>
[lrc1000]
Driver      = /path/to/lib/libmyodbc3.so
Database    = lrc1000
SERVER      = hostname
PORT        = 3306
SOCKET      = /path/to/mysql/mysql.sock

[rli1000]
Driver      = /path/to/lib/libmyodbc3.so
Database    = rli1000
SERVER      = hostname
PORT        = 3306
SOCKET      = /path/to/mysql/mysql.sock
        </screen>
        <para>The following is an example of a typical setup when using SQLite:</para>
        <screen>
[lrc1000]
Driver      = /path/to/lib/libsqlite3odbc.so
Database    = /path/to/globus-rls-lrc1000.db

[rli1000]
Driver      = /path/to/lib/libsqlite3odbc.so
Database    = /path/to/globus-rls-rli1000.db
        </screen>
    </section>

    <section id="rls-admin-trouble-odbc-ini-find"><title>How can I tell which odbc.ini is being used?</title>
        <para>The ODBC libraries look for the odbc.ini file along a search path. We are not experts in this matter and it seems that it varies from vendor to vendor over time. But to the best of our knowledge the general search path is in the following order:</para>
        <itemizedlist>
            <listitem><simpara>According to environment variable <computeroutput>$ODBCINI</computeroutput></simpara></listitem>
            <listitem><simpara>In the user's home at <computeroutput>~/.odbc.ini</computeroutput></simpara></listitem>
            <listitem><simpara>In the system default <computeroutput>/etc/odbc.ini</computeroutput></simpara></listitem>
        </itemizedlist>
        <para>When we are troubleshooting a system, we tend to use the <computeroutput>strace</computeroutput> utility to see exactly which files it is reading.</para>
    </section>

    <section id="rls-admin-trouble-odbc-test"><title>Testing your ODBC configuration</title>
        <para>The commands below demonstrate the <computeroutput>show tables</computeroutput> command with a MySQL database. Use the equivalent of this command if you are using a different DBMS. Alternately, you may simply perform a few <computeroutput>SELECT</computeroutput> queries against the listed tables.</para>
        <para>Testing with unixODBC, run:</para>
        <screen>
% /path/to/unixODBC-2.2.11/bin/isql <emphasis>lrc1000 dbuser dbpassword</emphasis>
+---------------------------------------+
| Connected!                            |
|                                       |
| sql-statement                         |
| help [tablename]                      |
| quit                                  |
|                                       |
+---------------------------------------+
SQL> <emphasis>show tables;</emphasis>
+------------------+
| Tables_in_lrc1000|
+------------------+
| t_attribute      |
| t_date_attr      |
| t_flt_attr       |
| t_int_attr       |
| t_lfn            |
| t_map            |
| t_pfn            |
| t_rli            |
| t_rlipartition   |
| t_str_attr       |
+------------------+
SQLRowCount returns 10
10 rows fetched
SQL> quit
        </screen>
        <para>Testing with iODBC, run:</para>
        <screen>
% /path/to/bin/iodbctest <emphasis>&quot;DSN=lrc1000;UID=dbuser;PWD=dbpassword&quot;</emphasis>
iODBC Demonstration program
This program shows an interactive SQL processor
Driver Manager: 03.51.0002.0224
Driver: 03.51.06

SQL><emphasis>show tables;</emphasis>
 
Tables_in_lrc1000
-----------------
t_attribute
t_date_attr
t_flt_attr
t_int_attr
t_lfn
t_map
t_pfn
t_rli
t_rlipartition
t_str_attr
 
 result set 1 returned 10 rows.

SQL>quit
 
Have a nice day.
        </screen>
    </section> 
    <!-- Testing ODBC configuration -->

    <section id="rls-admin-trouble-start"><title>Important notes on RLS initialization</title>
        <para>Please be advised (and advise other users responsible for bringing up the RLS) that the startup initialization may take a few minutes before the RLS may be accessible. The initialization involves two key operations that may consume significant resources causing the server to appear temporarily unresponsive. Users of RLS may mistakenly assume that RLS failed to startup and may kill the server and start over. Some users may fall into this in a repeated cycle, believing that the RLS is unable to startup properly.</para>
        <para>If the RLS is configured to send compressed updates (Bloom filters) to other RLIs, the RLS startup will involve initialization of the Bloom filter representing the current contents of the local replica catalog (LRC). This step is a prerequisite before any additional operations may be allowed, therefore no client connections are permitted until the initialization is complete. In our test environment, we have seen over 30 seconds delay due to creation of the Bloom filter corresponding to 1 million LFN names on a system with Dual 1 GHz CPU and 1.5 GB RAM. You may experience greater delays at larger scales and/or when running RLS with more limited system resources.</para>
        <para>If the RLS is configured to send uncompressed updates (LFN lists) to other RLIs, the RLS startup will not involve any additional initialization delay. However, the RLS will spawn an initial full catalog update to all RLIs it updates. Though these updates will take place on separate threads of execution after the initialization of the system, they will consume a great amount of processor activity. Depending on the volume of the local replica catalog (LRC), this processor activity may initially interfere with a client operation. In our test environment, we have seen our initial "globus-rls-admin ping..." operation may suffer a delay and timeout in 30 seconds, the second "ping" may delay for a few seconds but will successfully return, and the third and every subsequent "ping" operation will successfully return immediately throughout the duration of the update. The system exhibits the same behavior for any other client operation, such as a <computeroutput>globus-rls-cli query...</computeroutput> operation.</para>
    </section> 
    <!-- RLS Server initialization -->

    <section id="rls-admin-trouble-kernel"><title>Linux kernel and glibc incompatibility</title>
        <para>This note originated based on observations of RLS Server running on RedHat 9 but could also apply to other Linux distributions. There have been occurrences of RLS servers hanging on RedHat 9 systems. The external symptoms are:</para>
        <itemizedlist>
            <listitem><simpara>The server does not accept new connections from clients, with an error message similar to:</simpara>
                <screen>
connect(rls://XXXXX): globus_rls_client: IO timeout:
globus_io_tcp_register_connect() timed out after 30 seconds
                </screen>
            </listitem>
            <listitem><simpara>Often, the server continues to receive and send updates as configured and respond to signals. You can check this by querying other servers that interact with the one that's hung. Under gdb: All the server threads are waiting to be signaled on a condition variable. Sometimes, this is in <computeroutput>globus_io functions</computeroutput>, particularly in <computeroutput>globus_io_cancel()</computeroutput>.</simpara></listitem>
        </itemizedlist>
        <section><title>Probable cause</title>
            <para>This seems to be due to a problem in the new kernel and thread libraries of RedHat 9. A problem in <computeroutput>pthread_cond_wait()</computeroutput> causes threads not to wake up correctly. This problem has been seen with the following kernels and glibc packages:</para>
            <itemizedlist>
                <listitem><simpara>Kernels: 2.4.20-30.9 and 2.4.20-8</simpara></listitem>
                <listitem><simpara>glibc: glibc-2.3.2-27.9.7</simpara></listitem>
            </itemizedlist>
        </section>
        <section><title>Suggested workaround</title>
            <para>The problems don't seem to arise when RLS is linked with older pthread libraries. This can be done as by adding a couple of lines to the RLS startup script in <computeroutput>$GLOBUS_LOCATION/sbin/SXXrls</computeroutput>, as shown:</para>
            <screen>
#!/bin/sh

GLOBUS_LOCATION=/opt/gt3.2
MYSQL=/opt/mysql
IODBC=/opt/iodbc

export GLOBUS_LOCATION

#RedHat 9 workaround
LD_ASSUME_KERNEL=2.4.1
export LD_ASSUME_KERNEL
...
            </screen>
            <para>On i586 systems, set:</para>
            <screen>
...
LD_ASSUME_KERNEL=2.2.5
...
            </screen>
        </section>
    </section>

</chapter> 
    <!-- Troubleshooting END -->

<!-- </section>  Build & Install END -->

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
        href="../RLS_Usage_Statistics_Frag.xml"/>

    <glossary role="auto" id="glossary-rlsAdmin">
        <!-- 
        <remark>some terms not in the docs but wanted in glossary: 
        <glossterm>scheduler</glossterm>
        </remark>
        -->
        <glossdiv><title>A</title>
            <glossentry>
                <glossterm>Dummy term</glossterm>
                <glossdef>
                    <para>This is a dummy entry for the automatic glossary database. Do not edit.</para>
                </glossdef>
            </glossentry>
        </glossdiv>
    </glossary>
          <index type="rls">
    <title>Index</title>
</index>
</book>
