<?xml version='1.0' encoding='UTF-8'?>
<title>GT4 CAS User&apos;s Guide</title>
<titleabbrev>User&apos;s Guide</titleabbrev>
<section id="s-cas-user-introduction">
  <title>Introduction</title>
  <para>The CAS User's Guide provides general end user-oriented information.</para>
  <para>Building on the Globus ToolkitÂ® Grid Security Infrastructure (GSI),
    CAS allows resource providers to specify course-grained access control policies
    in terms of communities as a whole, delegating fine-grained access control
    policy management to the community itself. Resource providers maintain ultimate
    authority over their resources but are spared day-to-day policy administration
    tasks (e.g. adding and deleting users, modifying user privileges). </para>

 <section id="s-cas-user-how it works">
   <title>How it works </title>
  <orderedlist>
    <listitem>
      <simpara>A CAS server is initiated for a community: a community representative acquires a GSI credential to represent that community as a whole, and then runs a CAS server using that community identity. </simpara>
    </listitem>
    <listitem>
      <simpara>Resource providers grant privileges to the community. Each resource provider verifies that the holder of the community credential represents that community and that the community&apos;s policies are compatible with the resource provider&apos;s own policies. Once a trust relationship has been established, the resource provider then grants rights to the community identity, using normal local mechanisms (e.g. gridmap files and disk quotas, file system permissions, etc).</simpara>
    </listitem>
    <listitem>
      <simpara>Community representatives use the CAS to manage the community&apos;s trust relationships (e.g., to enroll users and resource providers into the community according to the community&apos;s standards) and grant fine-grained access control to resources. The CAS server is also used to manage its own access control policies; for example, community members who have the appropriate privileges may authorize additional community members to manage groups, grant permissions on some or all of the community&apos;s resources, etc. </simpara>
    </listitem>
    <listitem>
      <simpara>When a user wants to access resources served by the CAS, that user makes a request to the CAS server. If the CAS server&apos;s database indicates that the user has the appropriate privileges, the CAS issues the user a GSI restricted proxy credential with an embedded policy giving the user the right to perform the requested actions. </simpara>
    </listitem>
    <listitem>
      <simpara>The user then uses the credentials from the CAS to connect to the resource with any normal Globus tool (e.g. GridFTP). The resource then applies its local policy to determine the amount of access granted to the community, and further restricts that access based on the policy in the CAS credentials, This serves to limit the user&apos;s privileges to the intersection of those granted by the CAS to the user and those granted by the resource provider to the community. </simpara>
    </listitem>
  </orderedlist></section>

</section>

<section id="s-cas-user-usagescenarios">
<title>Usage scenarios</title>

  
<section id="s-cas-user-basicprocedure">
  <title>Basic procedure for using CAS</title>
  <para>A typical CAS user will use only two CAS-specific commands: <command>cas-proxy-init</command>,
    which contacts a CAS server and obtains a credential, and <command>cas-wrap</command>,
    which wraps a grid-enabled client program, causing that client program to use
    the credential that was previously generated using <command>cas-proxy-init</command>. For
    example, a day in the life of a CAS user might look something like this: </para>
  <orderedlist>
    <listitem>
      <para>In the morning, the user runs:
<screen>% grid-proxy-init
                 % cas-proxy-init -t <replaceable>tag</replaceable></screen></para>
      <para>The first line generates a Globus proxy credential; the second uses that
        credential to contact the CAS server and retrieve a CAS credential that includes
        all the permissions granted to the user by the community. The <replaceable>tag</replaceable> argument
        can be any string and is used to assign a name for that credential (<command>cas-wrap</command> uses
        this name to locate the credential). </para>
    </listitem>
    <listitem>
      <para>Several times throughout the day, the user runs commands that look like:
        <screen>% cas-wrap -t <replaceable>tag</replaceable> <command>grid-enabled-program</command> <option>args</option></screen></para>
      <para>This runs the program <command>grid-enabled-program</command> with arguments <option>args</option>,
        using the CAS credential that had been created by and assigned the name <replaceable>tag</replaceable>.
      </para>
      <para>For example: 
        <screen>% cas-wrap -t my-community gsincftp myhost.edu</screen></para>
      <para>looks for a CAS credential with the name &quot;my-community&quot; (e.g., a credential
        that had been created using &quot;cas-proxy-init -t my-community&quot;) and then runs
        the command &quot;gsincftp myhost.edu&quot;, causing the gsincftp program to use that
        CAS credential to authenticate. </para>
    </listitem>
    <listitem>
      <para>At the end of the day, the user runs:
        <screen>% cas-wrap -t <emphasis>tag</emphasis> grid-proxy-destroy</screen> </para>
      <para> to destroy the CAS credential, and: 
        <screen>% grid-proxy-destroy</screen></para>
      <para>to destroy the Globus proxy credential.  Or the user might simply let both
        credentials expire. </para>
    </listitem>
  </orderedlist></section>
</section>

<section id="s-cas-user-commandline">
  <title>Command line tools</title>
  <para>Please see the <xref linkend="r-cas-commandline"/>.</para>
</section>
<section id="s-cas-user-gui">
  <title>Graphical user interfaces</title>
&WS_AA_CAS_Interface_GUI_Frag;
</section>
<section id="s-cas-user-troubleshooting">
  <title>Troubleshooting</title>
&Credential_Troubleshooting_Frag;
</section>
<section id="s-cas-user-licensing">
  <title>Information Regarding CAS Licensing</title>
  <para>This version of CAS uses the OASIS Security Assertion Markup
  Language (SAML) standard. Users should be aware that
  RSA Security has identified four patents it believes
  could be relevant to implementing certain operational
  modes of the SAML specifications. The Globus Alliance
  has established a license agreement with RSA covering  usage
  of SAML in the Globus Toolkit, however users who redistribute SAML-enabled
  portions of the Globus Toolkit or use SAML-enabled portions
  in their own applications should understand the issue and
  may want to obtain  their own royalty-free license from RSA.
  </para>
  <para>For information regarding the patent claims and a royalty-free reciprocal
  license to the RSA patents, see:  <ulink url="http://www.rsasecurity.com/solutions/standards/saml"> http://www.rsasecurity.com/solutions/standards/saml</ulink>.
  </para>
  <para>For sublicense rights to the RSA patents under the Globus Toolkit
    Public License, see: <ulink url="http://www-unix.globus.org/toolkit/legal/4.0/licenses4.html#RSA"> Globus Toolkit 4.0 3rd Party Licenses, Copyrights and Disclaimers</ulink>.</para>
</section>
