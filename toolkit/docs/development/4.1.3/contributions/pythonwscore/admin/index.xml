<title>GT 4.0 pyGridWare Contribution: System Administrator's Guide</title>
<titleabbrev>System Administrator's Guide</titleabbrev>

<section id="s-pythonwscore-admin-introduction"><title>Introduction</title>
<para>This guide contains advanced configuration information for system administrators
  working with pyGridWare, the python WS-Core. It provides references to information
  on procedures typically performed by system administrators, including installation,
  configuring, deploying, and testing the installation.</para>
    <important>
        <simpara> This information is in addition to the basic Globus Toolkit prerequisite, 
          overview, installation, security configuration instructions in the <ulink url="../../admin/docbook/">GT 4.0 System Administrator's Guide</ulink>.  
          Read through this guide before continuing!</simpara>  
    </important>
</section>

<section id="s-pythonwscore-admin-dependencies"><title>Dependencies</title>
&Python_WS_Core_Dependencies_Summary_Frag;
</section>

<section id="s-pythonwscore-admin-installing"><title>Building and installing</title>
<para>
Untar tarball or grab cvs source, run pyGridWare distutils setup script, optionally
regenerate all bindings.</para>
<orderedlist>
  <listitem><simpara>Do one of the following: </simpara></listitem>
    <listitem><para>Untar tarball:
      <screen>%tar zxf pyGridWare-1.04b.tar.gz</screen>
    </para></listitem>
    <listitem><para>Grab CVS source:
      <screen>%cvs -d :pserver:anonymous@bosshog.lbl.gov:/home/portnoy/u5/repository co login
%cvs -d :pserver:anonymous@bosshog.lbl.gov:/home/portnoy/u5/repository co pyGridWare</screen>
      
    </para></listitem>
  <listitem><para>Change directory
     <screen>%cd pyGridWare</screen>
  </para></listitem>

  <listitem><para>Run distutils
      <screen>%python setup.py --regenerate install</screen>
  </para></listitem>
</orderedlist>

<para>  If you want Message Level Security, build the GT2 libraries with a threaded
  flavor. You can install any GT3 All Source installer bundles. Directions for
installing GT 3.2 can be found <ulink url="http://www-unix.globus.org/toolkit/docs/3.2/installation/install_installing.html"> here</ulink>. </para>
<para>To build pyGlobus:
</para>
<orderedlist>
  <listitem><simpara>Set the environment variables<emphasis>GLOBUS_LOCATION</emphasis> and <emphasis>GPT_LOCATION</emphasis> to the installation of the
  globus installation. </simpara></listitem>
  
  <listitem><para>Run the pyGlobus distutils setup script:
      <screen>%python setup.py install</screen>
  </para></listitem>
</orderedlist>

</section>
<section id="s-pythonwscore-admin-configuring"><title>Configuring </title>
<para>There are two configuration files:</para>

<section><title>pyGridWare/config.txt</title>
<para>Read by the distutils setup script when "regenerate" is specified. This is
  where all service WSDLs are specified. When setup is run, bindings will be
created automatically. </para>
<screen>[WSDL]
CounterService = share/schema/core/samples/counter/counter_service.wsdl
 </screen>
</section>
<section><title>pyGridWare/bin/config.txt</title>
<para>Configuration parameters for logging, security, container location, and service
  paths. This file needs to be in the directory from where you are executing
  the client and/or server.
</para>
</section>
</section>
<section id="s-pythonwscore-admin-deploying"><title>Deploying</title>
<para>Run container script </para>
<orderedlist>
  <listitem><para>Change to bin directory
      <screen>%cd bin</screen>
  </para></listitem>

  <listitem><para>Edit the file <computeroutput>server-config.tac</computeroutput> by  adding or removing resources:
  <screen>
   def GetResource(contextFactory=None): 
     root = Resource() 
     root.putChild(<emphasis>'wsrf'</emphasis>, Resource()) 
   
     resource = Resource() 
     root.getStaticEntity('wsrf').putChild(<emphasis>'services'</emphasis>, resource) 
   
     resource.putChild(<emphasis>'CounterService', Counter(post='/wsrf/services/CounterService'))</emphasis> </screen></para></listitem>
   
  
  <listitem><para>Run start container script:
      <screen>%./start-container.sh</screen>
  </para></listitem>
</orderedlist>
</section>
<section id="s-pythonwscore-admin-testing"><title>Testing</title>
<para>To test your installation, run:
<screen>%python unittest</screen>
</para>
</section>
<section id="s-pythonwscore-admin-security_considerations"><title>Security considerations</title>
&Python_WS_Core_Security_Considerations_Frag;
</section>

<section id="s-pythonwscore-admin-troubleshooting"><title>Troubleshooting</title>
<orderedlist>
  <listitem><simpara>Make sure all dependencies are met.</simpara></listitem>
  
  <listitem><simpara>Building and installing problems:</simpara></listitem>
    <listitem><simpara>python-2.3 problems
      Recently discovered a problem running the distutils --regenerate that is
        caused by a bug in "urllib.basejoin". This is fixed in python2.4. ZSI
        needs to be patched to fix this problem in python-2.3.</simpara></listitem>
  </orderedlist>
</section>








