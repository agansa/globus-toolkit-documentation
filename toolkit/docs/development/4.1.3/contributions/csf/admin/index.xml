<?xml version='1.0' encoding='UTF-8'?>
<title>GT &shortversion;: System Administrator's Guide</title>
<titleabbrev>System Administrator's Guide</titleabbrev>

<section id="csf-admin-introduction"><title>Introduction</title>
<para>This guide contains advanced configuration information for system administrators
  working with the Community Scheduler Framework (CSF). It provides references to information on procedures
  typically performed by system administrators, including installation, configuring,
  deploying, and testing the installation.</para>
  <important>
    <simpara> This information is in addition to the basic Globus Toolkit prerequisite, 
      overview, installation, security configuration instructions in the <xref linkend="gtadmin"/>.  
      Read through this guide before continuing!</simpara>  
  </important>
</section>


<section id="csf-admin-installing"><title>Building and installing</title>
  <para>  If you are going to submit jobs to a local batch scheduler, make sure that the 
    scheduler is installed according to the instructions provided with the scheduling 
    software. For LSF, you will need to install and run the gabd service that is used by 
    CSF's RM Adapter to communicate with LSF clusters. The gabd is part of the LSF 
    WebGUI package, or can be acquired by contacting Platform Computing's support 
    department.</para>
  
<para>  Make sure that there is a full installation of the Globus Toolkit as detailed in the 
  <xref linkend="gtadmin"/>). If you are going to run jobs through the 
  WS GRAM interface, make sure and follow all the instructions for setting up 
  WS GRAM, including running the test cases.</para>
  
<para>  CSF is distributed in a gzipped tarfile that can be installed using gpt-build. Since 
  CSF is built from java source, you must make sure that you have an environment 
  set up properly so that you can build GT &shortversion; services.</para>
  
  <para>  Set up your GT &shortversion; build environment as follows:</para>
  
  <itemizedlist>
    <listitem><simpara>Make sure JAVA_HOME and ANT_HOME are set to the correct installation locations.</simpara></listitem>
<listitem><simpara>Add JAVA_HOME/bin and ANT_HOME/bin to your PATH environment variable.</simpara></listitem>
    <listitem><simpara>Set GLOBUS_LOCATION to the top level directory of your GT &shortversion; installation.</simpara></listitem>
<listitem><simpara>Source either globus-user-env.csh or globus-user-env.sh depending on your shell.</simpara></listitem>
  </itemizedlist>
  
 <para> In order to install CSF, do the following as the Globus container user (i.e. as the 
	 user who owns the Globus installation in GLOBUS_LOCATION) in the directory
	 containing the CSF contribution (under contrib/ in the installer directory):</para>
  
  <screen>globus$ gpt-build csf-&shortversion;-src.tar.gz
globus$ gpt-postinstall</screen>
  
   
  
</section>


<section id="csf-admin-configuring"><title>Configuring </title>
  <para> In order to make CSF operational, you must configure the following files:</para>
  
  <itemizedlist>
    <listitem><simpara>resourcemanager-config.xml</simpara></listitem>
    <listitem><simpara>metascheduler-config.xml</simpara></listitem>
  </itemizedlist>
  <para> The files contain some commented out settings as examples.</para>

  
 <section id="csf-admin-config-rmfs"> <title>Configuring the Resource Manager Factory Service</title>
  
  <para>Edit $GLOBUS_LOCATION/etc/metascheduler/resourcemanager-config.xml and specify a "cluster" section 
   for each resource manager you will be accessing through the RM Adapter. </para>
   
  <para> You must define the following elements:</para>
  
<itemizedlist>  
  <listitem><simpara><computeroutput>name</computeroutput>: the name by which this cluster can be referenced.</simpara></listitem>
  <listitem><simpara><computeroutput>type</computeroutput>: the type of resource manager. Currently only supports type "LSF".</simpara></listitem>
  <listitem><simpara><computeroutput>host</computeroutput>: the host where the resource manager can be contacted. For LSF, this is the host which is running the gabd.</simpara></listitem>
  <listitem><simpara><computeroutput>port</computeroutput>: the port number where the resource manager can be contacted. For LSF, this is specified in $LSF_ENVDIR/ga.conf.</simpara></listitem>
</itemizedlist>
  
 </section>
  <section id="csf-admin-config-csf">
<title>Configuring CSF</title>
  
<para>  Edit $GLOBUS_LOCATION/etc/metascheduler/metascheduler-config.xml and specify:</para>
<itemizedlist>  
 <listitem><simpara>GISHandle: the endpoint of the local Index Service.</simpara></listitem>
  <listitem><simpara>registryHandle: the endpoint of the local container registry.</simpara></listitem>
  </itemizedlist>
  <note><simpara>Do not use 'localhost' or 127.0.0.1 within the endpoint. Use the actual host IP address or fully qualified host name.</simpara></note>
  </section>
  <section id="csf-admin-config-queuing">
<title>  Configuring the Queuing Service</title>
  
<para>  Edit $GLOBUS_LOCATION/etc/metascheduler/metascheduler-config.xml in the section "queueConfig". 
    By default, there are no queues configured in CSF. Any job submission to a queue will fail. 
    Each queue has its own configuration section, in which you can specify:</para>
<itemizedlist>  
  <listitem><simpara><computeroutput>name</computeroutput>: this attribute on the queueConfig element specifies the name by which this queue is referenced.</simpara></listitem>
  <listitem><simpara><computeroutput>plugin</computeroutput>: the name of the class that implements the com.platform.metascheduler.impl.schedPlugin interface. The default plugin (schedPluginDefault) is always loaded for a queue regardless whether it is defined in the queue configuration. If the plugin doesn't exist or does not implement the schedPlugin interface, it will not be loaded. You can specify as many plugins for a queue as you wish.</simpara></listitem>
  <listitem><simpara><computeroutput>scheduleInterval</computeroutput>: the interval in seconds between scheduling cycles. Its value is and integer between 5 and 600. This parameter is optional, and if not defined will default to 30 seconds. This is a parameter of schedPluginDefault.</simpara></listitem>
  <listitem><simpara><computeroutput>throttle</computeroutput>: this is a parameter for the throttle scheduler plugin (com.platform.metascheduler.impl.schedThrottle), and sets the maximum number of jobs that can be dispatched to a back end resource manager in each scheduling cycle. The value is an integer greater than 0.</simpara></listitem>
  </itemizedlist>
  </section>
  <section id="csf-admin-config-multi-hosting">
    <title>Support for multiple GT &shortversion; hosting environments</title>
  
    <para>CSF supports the management of jobs and reservations across resource managers hosted in multiple GT &shortversion; 
    containers which are part of the same Virtual Organization (VO) (i.e. they trust the same CAs). The multiple 
    container support allows CSF services running in one container to send jobs to the Resource Manager Adapters 
    in another container,etc. In order to support this behaviour, there needs to be a central Index Service for storing 
    information about the different RM Adapters in the VO. This Index Service must be hosted in a container that 
    doesn&apos;t host the CSF services.</para>
  
<para>  In order to set up this configuration, the following steps should be taken:</para>
  <itemizedlist>
   <listitem><para>On the hosts running the CSF services for the VO (1 or more hosts), edit $GLOBUS_LOCATION/etc/metascheduler/metascheduler-config.xml and set the endpoint of the central Index Service for the VO in:
   <itemizedlist>
       <listitem><simpara>The ReservationConfig section, in the CommunityGISHandle element.</simpara></listitem>
       <listitem><simpara>The queueConfig section for each queue you want to use remote RM Adapters, in the communityGisHandle parameter.</simpara></listitem>
   </itemizedlist>
   </para></listitem>
   <listitem><simpara>On the host running the central Index Service, edit $GLOBUS_LOCATION/etc/globus_wsrf_mds_index/hierarchy.xml, and configure the location of the Index Services running in the containers running CSF as downstream elements.</simpara></listitem>
  </itemizedlist>
  </section>
  
  
</section>


<section id="csf-admin-deploying"><title>Deploying</title>
  <para>There are no further deployment instructions other than what is detail in the  
    <xref linkend="gtadmin"/>.</para>
</section>


<section id="csf-admin-testing"><title>Testing</title>
  <para>There are currently no tests for Platform CSF.</para>
</section>


<section id="csf-admin-security_considerations"><title>Security considerations</title>
&CSF_Security_Considerations_Frag;

</section>


<section id="csf-admin-troubleshooting"><title>Troubleshooting</title>
  
<section id="csf-admin-troubleshooting-queue">  
  <title>Cannot create a queue</title>
  <para>If you can't create a queue, check out if the queue is configured in 
  $GLOBUS_LOCATION/etc/metascheduler/metascheduler-config.xml.</para>
</section>
  
  <section id="csf-admin-troubleshooting-rmadapter">
<title>  RM Adapter cannot connect to resource manager</title>
<para>If the container log shows messages that the RM Adapter can't connect to the back end resource manager 
  (i.e. LSF), check that LSF daemons are started and that the LSF gabd is also running. 
  Also check that the host name and port number in $GLOBUS_LOCATION/etc/metascheduler/resourcemanager-config.xml corresponds to the settings in ga.conf.</para>
  </section>
</section>

