<?xml version='1.0' encoding='UTF-8'?>
<title>GT 4.0 Release Notes: for Java WS Core</title>
<titleabbrev>Release Notes</titleabbrev>
<section id="s-javawscore-Release_Notes-overview">
  <title>Component Overview</title>
&Java_WS_Core_Overview_Brief_Frag;
</section>
<section id="s-javawscore-Release_Notes-featuresummary">
  <title>Feature Summary</title>
&Java_WS_Core_Feature_Summary_Frag;
</section>
<section id="s-javawscore-Release_Notes-changessummary">
  <title>Changes Summary</title>
  <section>
    <title>Parameter ordering for Axis generated files</title>
    <para>The Java WS Core 4.0 release contains a newer version of Axis. In this version of Axis the ordering of parameters in the constructors of generated types has changed. The parameters are now sorted alphabetically. Code that creates an instance of some generated type using a constructor with multiple arguments might need to be checked and updated appropriately. This change does not affect code that creates an instance of some generated type using a default constructor and sets the values using the individual setter methods.
</para>
  </section>
  <section>
    <title>Transport security is used by default (since 3.9.4)</title>
    <para>Transport security (HTTPS) is now assumed as  the default security mechanism. For example, the standalone container will now start in a transport security mode (HTTPS container running on port 8443). The plain (HTTP) container can still be started  using the <option>-nosec</option> option. Please see the <xref linkend="globus-start-container"/> documentation for details.
</para>
  </section>
  <section>
    <title>Different naming scheme for Axis generated files (since 3.9.4)</title>
    <para>The Axis version distributed with Java WS Core follows the JAX-RPC specification and Java naming standards more closely than before when naming the generated files (generated by the <application>wsdl2java</application> process). The code generated is exactly the same as before but the names of the files are slightly different. The changes to the names are pretty straightforward: All underscores are dropped, the first letter of each word within the name is capitalized. If there are collisions between names (for example, the port type name is the same as some element name), the name for the port type will end with <constant>_PortType</constant> and for the element with <constant>_Element</constant>. Examples:
</para>
    <screen>foo.java -&gt; Foo.java
_Foo_Bar.java -&gt; FooBar.java
_GetMultipleResourceProperties.java -&gt; GetMultipleResourceProperties_Element.java
GetMultipleResourceProperties.java -&gt; GetMultipleResourceProperties_PortType.java</screen>
  </section>
</section>
<section id="s-javawscore-Release_Notes-bugfixes">
  <title>Bug Fixes</title>
&Java_WS_Core_Fixed_Bugs_Frag;
</section>
<section id="s-javawscore-Release_Notes-knownproblems">
  <title>Known Problems</title>
  <section>
    <title>Limitations</title>
    <para>
<itemizedlist>
        <listitem>
          <para>WS-Notification support:
   <itemizedlist>
              <listitem>
                <simpara>Only the Simple topic dialect is supported (others can be added)</simpara>
              </listitem>
              <listitem>
                <simpara>Only flat topic spaces are supported (architecture does allow for more advanced structures)</simpara>
              </listitem>
              <listitem>
                <simpara>Actions on the precondition, selector and policy fields in a subscription are not supported</simpara>
              </listitem>
              <listitem>
                <simpara>When a resource is removed its subscriptions are not removed automatically</simpara>
              </listitem>
            </itemizedlist></para>
        </listitem>
        <listitem>
          <simpara>Only XPath resource property queries are supported (others can be added)</simpara>
        </listitem>
         <listitem>
          <simpara>A resource might not get destroyed at the exact time as indicated by the scheduled termination time. A sweeper thread that removes expired resources runs periodically (every 1 minute by default) so an expired resource might not get removed until the next time the sweeper thread runs.</simpara>
        </listitem>
         <listitem>
          <simpara>SOAP messages with attachments are not supported. In fact, the Axis version distributed with GT was compiled without attachment support.</simpara>
        </listitem>
      </itemizedlist>
</para>
  </section>
  <section>
    <title>Known Bugs</title>
&Java_WS_Core_Known_Bugs_Frag;
  </section>
</section>
<section id="s-javawscore-Release_Notes-techdependencies">
  <title>Technology Dependencies</title>
&Java_WS_Core_Dependencies_Summary_Frag;
</section>
<section id="s-javawscore-Release_Notes-testedplatforms">
  <title>Tested Platforms</title>
&Java_WS_Core_Platform_Summary_Frag;
</section>
<section id="s-javawscore-Release_Notes-compatibilitysummary">
  <title>Backward Compatibility Summary</title>
&Java_WS_Core_Compatibility_Summary_Frag;
</section>
<section id="s-javawscore-Release_Notes-formoreinfo">
  <title>For More Information </title>
  <para>
Please see <ulink url="index.html">Java WS Core documentation</ulink> for more information.
</para>
</section>
