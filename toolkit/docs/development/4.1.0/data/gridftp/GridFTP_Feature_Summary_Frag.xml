<?xml version='1.0' encoding='UTF-8'?>
<para>Features new in GT &shortversion; 
<itemizedlist>
  <listitem><simpara>New API for embedding a GridFTP server in another application.</simpara>
  <listitem><simpara>Support for dynamic registration and removal of data-nodes in a striping configuration.</simpara>
  <listitem><simpara>Support for passing SAML assertions over the control channel.</simpara>
</itemizedlist>
</para>

<para>Features that continue to be supported from previous versions
<itemizedlist>
  <listitem><simpara>GSI security: This is the PKI based, de facto standard security system used in
    Grid applications. Kerberos is also possible but is not supported and can be
  difficult to use due to divergence in the capabilities of GSI and Kerberos.</simpara></listitem>
  <listitem><simpara>Third-party
    transfers: Very common in Grid applications, this is where a <glossterm>client</glossterm> mediates
      a transfer between two servers (both likely at remote sites) rather than
    between the server and itself (called a <glossterm>client/server transfer</glossterm>).</simpara></listitem>
  <listitem><simpara>Support for <glossterm>striping</glossterm>.</simpara></listitem>
  <listitem><simpara>Partial
      file access: Regions of a file may be accessed by specifying an offset
  into the file and the length of the block desired.</simpara></listitem>
  <listitem><simpara>Reliability/restart: The
      receiving server periodically (the default is 5 seconds, but this can be
      changed) sends &ldquo;restart markers&rdquo; to
      the client. This marker is a messages specifying what bytes have been successfully
      written to the disk. If the transfer fails, the client may restart the
      transfer and provide these markers (or an aggregated equivalent marker),
      and the transfer will pick up where it left off. This can include &ldquo;holes&rdquo; in
    the file.</simpara></listitem>
  <listitem><simpara>Large file support: All file sizes, lengths, and offsets are 64
  bits in length.</simpara></listitem>
  <listitem><simpara>Data channel reuse: Data channel can be held open and reused if the next transfer has the same source, destination, and credentials.  
    This saves the time of connection establishment, authentication, and delegation.  This can be a huge performance difference when moving lots of small files.</simpara>
  </listitem>
  <listitem><simpara>Integrated instrumentation (Performance Markers).</simpara></listitem>
  <listitem><simpara>Logging/audit trail (Extensive Logging in the server).</simpara></listitem>
  <listitem><simpara>Parallel transfers (Multiple TCP streams between a pair of hosts).</simpara></listitem>
  <listitem><simpara>TCP Buffer size control (Protocol supports Manual and Automatic; Only Manual Implemented).</simpara></listitem>
  <listitem><simpara>Server-side computation (Extended Retrieve (ERET) / Extended Store (ESTO) commands).</simpara></listitem>
  <listitem><simpara>Based on Standards: RFC 959, RFC 2228, RFC 2389, IETF Draft MLST-16 , GGF GFD.020.</simpara></listitem>
</itemizedlist>
</para>

<para>Other Supported Features
<itemizedlist>
  <listitem><simpara>On the client side we provide a scriptable tool called globus-url-copy.
    This tool can take advantage of all the GridFTP protocol features and can
    also do protocol translation between FTP, HTTP, HTTPS, and POSIX file IO
  on the client machine. </simpara></listitem>
  <listitem><simpara>We also provide a set of development libraries
    and APIs for developers wishing to add GridFTP functionality to their application.</simpara></listitem>
</itemizedlist>
Deprecated Features
<itemizedlist>
  <listitem><simpara>None</simpara></listitem>
</itemizedlist>
</para>
