<?xml version='1.0' encoding='UTF-8'?>
<para>New features since &previousversion;</para>
<itemizedlist>
    <listitem>
      <para>globus-job-*-ws command line tools included in release 
        <itemizedlist>
            <listitem>
              <simpara>Out-of-the-box support: no more dowloading of development packages required for globus-job-run-ws, globus-job-submit-ws, globus-job-get-output-ws, globus-job-clean-ws.</simpara>
            </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Database-based persistence.
        <itemizedlist>
          <listitem>
            <simpara>all persistence data is stored in a database</simpara>
          </listitem>
          <listitem>
            <simpara>an embedded Derby database is setup by default</simpara>
          </listitem>
          <listitem>
            <simpara>PostgreSQL 7.2 and 8.0 currently supported as alternatives to Derby</simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Job description extensions.
        <itemizedlist>
            <listitem>
              <simpara>specify elements beneath &lt;extensions&gt;</simpara>
            </listitem>
            <listitem>
              <simpara>Use &lt;multiAuthSubject&gt; to specify a credential subject for a multijob to use when authorizing subjob hosts.</simpara>
            </listitem>
            <listitem>
              <simpara>Out-of-the-box support: no more dowloading of development packages required.</simpara>
            </listitem>
            <listitem>
              <simpara>Use &lt;condorsubmit&gt; to specify arbitrary Condor directives.</simpara>
            </listitem>
            <listitem>
              <simpara>Use &lt;shouldTransferFiles&gt;, &lt;whenToTransferOutput&gt;, &lt;transferInputFiles&gt;, and &lt;transferOutputFiles&gt; to specify the similarly-named Condor directives.</simpara>
            </listitem>
            <listitem>
              <simpara>Use &lt;nodes&gt; directly or &lt;resourceAllocationGroup&gt; to specify PBS node requirements (i.e. translated to #PBS -l nodes=..." directive).</simpara>
            </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>SoftEnv support.
        <itemizedlist>
            <listitem>
              <simpara>Configure the service whether to use your .soft file on the compute node or not by default (Fork, PBS, and LSF only).</simpara>
            </listitem>
            <listitem>
              <simpara>Add &lt;softenv&gt; extension elements to specify explicit SoftEnv statements that override the lines in your .soft configuration file (Fork, PBS, and LSF only).</simpara>
            </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Independent resource manager adapter API.
        <itemizedlist>
            <listitem>
              <simpara>Create your own RM adapter implementation.  For example, if a resource manager has a java API for submitting and monitoring jobs, a new java only RM adapter could be written and used inplace of the GT provided Perl-based RM adapter.  A Windoows based GRAM service implementation would be easier / more straight forward.</simpara>
            </listitem>
            <listitem>
              <simpara>Use our GT Perl-based RM adapter and SEG monitoring in your own service.</simpara>
            </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Removed unnecessary depedency of WS GRAM on Pre-WS GRAM jobmanager package.
        <itemizedlist>
            <listitem>
              <simpara>Separated out Perl modules into their own globus_gram_job_manager_scripts package.</simpara>
            </listitem>
        </itemizedlist>
      </para>
    </listitem>
</itemizedlist>
