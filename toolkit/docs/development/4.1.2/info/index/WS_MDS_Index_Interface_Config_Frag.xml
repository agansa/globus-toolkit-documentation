<?xml version='1.0' encoding='UTF-8'?>

<section><title>Configuration overview</title>
  
<para>For a basic installation, the index service itself does not need any configuration changes from default; a default Index Service
  is available and automatically "registers" with the following GT web services based resources to allow monitoring and discovery: 
  CAS, <link linkend="rft-admin-autoregistration">RFT</link>, and WS GRAM (click the links for 
  information about what data is sent and how to change it).</para>
  
  <note><simpara>Auto-registration is turned on by default in GT 4.0.1. If you are using GT 4.0.0, we strongly encourage you to
    update to GT 4.0.1. However, if you must use 4.0.0, this capability can be turned on. See the per service links above for more information.</simpara></note>
  
<para>In order for information to appear in the index, the source of that information must be registered to the Index Service.
  Information sources are registered using tools like <xref linkend="mds-servicegroup-add"/>. Each
registration has a limited lifetime;
<command>mds-servicegroup-add</command> should be left running in the
background so that it can continue to refresh registrations.
Depending on administration preference, it may be run on the same
host as the index, on the same host as a member resource, or on any
  other host(s).</para>
  
<para>The Index service is built on <xref linkend="aggregator"/> and can use any <xref linkend="aggregator-sources"/> 
to collect information. In the most common case, the index service
uses the <constant>QueryAggregatorSource</constant> to gather resource
property values from the registered resource using one of the three
WS-Resource Properties operations to poll for information; the
polling method used depends on the configuration element supplied
  in the registration content.</para>
  
<para>Two other aggregator sources are supplied with the distribution:
the <constant>SubscriptionAggregatorSource</constant>, which gathers
resource property values through subscription/notification, and the
<constant>ExecutionAggregatorSource</constant>, which executes an external
  program to gather information.</para>
  
</section>
<section><title>Syntax of the interface</title>

<section id="index-specifying-source"><title>Defining the Aggregator Sources</title>
<para>The aggregation source used to collect data can be changed from
default by editing the aggregatorSources parameter in the JNDI
service configuration. See
<filename>$GLOBUS_LOCATION/etc/globus_wsrf_mds_index/jndi-config.xml</filename>:</para>
<screen>
&lt;resource name="configuration"
             type="org.globus.mds.aggregator.impl.AggregatorConfiguration"&gt;
  &lt;resourceParams&gt;
    &lt;parameter&gt;
      &lt;name&gt; factory&lt;/name&gt;
      &lt;value&gt;org.globus.wsrf.jndi.BeanFactory&lt;/value&gt;
    &lt;/parameter&gt;
    &lt;parameter&gt;
      &lt;name&gt;aggregatorSource&lt;/name&gt;
      <emphasis>&lt;value&gt;org.globus.mds.aggregator.impl.QueryAggregatorSource 
             org.globus.mds.aggregator.impl.SubscriptionAggregatorSource 
             org.globus.mds.aggregator.impl.ExecutionAggregatorSource
      &lt;/value&gt;</emphasis>
    &lt;/parameter&gt;
&lt;/resourceParams&gt;
</screen>
<para>This parameter specifies one or more Java classes that may be
used to collect data for the Index. By default it is set to use the
QueryAggregatorSource, SubscriptionAggregatorSource, and
ExecutionAggregatorSource. Details of the supplied sources are in
the <link linkend="aggregator-sources-configlist">
Aggregator Sources Reference</link>.</para>
</section>
</section>

<section><title>Configuring the Aggregator Framework</title>
  &WS_MDS_Aggregator_Interface_Config_Frag;
</section>