<chapter id="c-rft">
	<title>RFT Configuration</title>
<section id="s-rft-introduction"><title>Introduction</title>
<para>RFT is used to perform third-party transfers across GridFTP servers. It
  uses a database to store its state periodically
  so the transfers can be recovered from any failures. RFT uses
  standard grid security mechanisms for authorization and authentication
  of the users. So in order to effectively use RFT you should have
  installed and configured a database with RFT database schemas and have
  the necessary security infrastructure in place to perform a 3rd party
  transfer.</para>
<para>This is a partially-complete docbook translation of
        <ulink url="http://www-unix.globus.org/toolkit/docs/4.0/data/rft/admin-index.html">the RFT Admin Guide</ulink>.
        Please see that document for additional information.
</para>

</section>

<section id="s-rft-configuring"><title>Configuring </title>
<itemizedlist>
  <listitem><simpara><link linkend="postgresql">Required configuration: configuring the PostgreSQL
      database</link></simpara></listitem>
</itemizedlist>

<section id="postgresql"><title>Required configuration: configuring the PostgreSQL
  database</title>
<para>PostgreSQL (Version 7.1 or greater ) needs to be installed and configured for
  RFT to work. You can either use the packages which came with your operating
system (RPMs, DEBs, ...) or build from source. We used
    PostgreSQL version 7.3.2 for our testing and the following instructions are
  good for the same. </para>
<orderedlist>
  <listitem><simpara>Install PostgreSQL. Instructions on how to install/configure
PostgreSQL can be found <ulink
 url="http://www.postgresql.org/docs/manuals/">here</ulink>.</simpara></listitem>
  <listitem><simpara>Configure the postmaster daemon
    so that it accepts TCP connections. This can be done by adding -o "-i" switch
    to postmaster script.</simpara></listitem>
  <listitem><simpara>To create the database that is used for RFT, run:
      <command>createdb rftDatabase</command></simpara></listitem>
  <listitem><simpara>To populate the RFT database with appropriate schemas, run:
    <command>psql -d rftDatabase -f $GLOBUS_LOCATION/share/globus_wsrf_rft/rft_schema.sql</command>
      Now that you have created a database to store RFT's state, the following
      steps configure RFT to find the database:
  </simpara></listitem>
  <listitem><simpara>Open <filename> $GLOBUS_LOCATION/etc/globus_wsrf_rft/jndi-config.xml</filename></simpara></listitem>
  <listitem><simpara>Find the dbConfiguration section under ReliableFileTransferService &lt;service&gt; section. </simpara></listitem>
  <listitem><simpara>Change the connectionString to point to the machine on which
    you installed PostgreSQL and name of the database you used in step 2. 
    If you installed PostgreSQL on the same machine as your Globus install the
    default should work fine for you.</simpara></listitem>
  <listitem><simpara>Change the username to the name of the user who owns/created
    the database and do the same for the password. (It also depends on how you
    configured your database.)</simpara></listitem>
  <listitem><simpara>Don't worry about the other parameters in that section. The defaults should
    work fine for now.</simpara></listitem>
  <listitem><para>Edit the configuration section under ReliableFileTransferService.
		  There are two values that can be edited in this section.</para>
  <itemizedlist>
    <listitem><simpara>backOff: Time in seconds you want RFT to backoff
      before a failed transfer is retried by RFT. Default should work fine for
      now.</simpara></listitem>
    <listitem><simpara>maxActiveAllowed: This is the number of transfers
      the container can do at given point. Default should be fine for now.</simpara></listitem>
  </itemizedlist>
  </listitem>
</orderedlist>
</section>
</section>
<section id="s-rft-security_considerations"><title>Security Considerations </title>

	<para>import</para>

</section>
<section id="s-rft-troubleshooting"><title>Troubleshooting</title>
<para><emphasis>Problem:</emphasis> If RFT is not configured properly to talk to a PostgreSQL
  database, you will see this message displayed on the console when you start
the container : </para>
<screen>"Error creating RFT Home: Failed to connect to database ... 
Until this is corrected all RFT request will fail and all GRAM jobs that require staging will fail". </screen>
<para><emphasis>Solution:</emphasis> Usual mistake is Postmaster is not accepting TCP
  connections which means that you must restart Postmaster with -i option (
  see <ulink url="#step2">step 2 </ulink>). </para>
<para>
</para>
</section>
</chapter>
