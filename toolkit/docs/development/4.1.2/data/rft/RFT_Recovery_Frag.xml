<title> RFT Fault-Tolerance and Recovery </title>
<section id="s-rft-recovery-introduction">
<para> RFT uses Postgresql to check-point transfer state in the form of restart markers and recover from transient transfer failures, using retry mechanism with exponential backoff, during a transfer. RFT has been tested to recover from source and/or destination server crashes during a transfer, Network failures, Container failures ( When the machine running the container goes down ), File System failures etc.
RFT Resource is implemented as a PersistentResource, so resources are 
Please find more detailed description of fault-tolerance and recovery in RFT below:

- Source and/or Destination GridFTP failures: In this case RFT retries the transfer for a configurable number of maximum attempts with exponential backoff for each retry (the backoff time period is configurable too). If a failure happens in the midst of a transfer RFT uses the last restart marker that is stored in the database for that transfer and uses it to resume the transfer from where it failed before instead of restarting the whole file again. This failure is treated as a container wide backoff for the server in question. What that means is that all other transfers going to/from that server,across all the requests in a container will be backed off and retried. This is done in order to prevent further failures of the transfers by using knowledge available in the database.
- Network failures : Sometimes due to heavy load on a network or for any other reason packets are lost or connections get timedout. This failure is considered as a transient failure and RFT retries the transfer with exponential backoff for that particular transfer and not the whole container as with the previous case.
- Container failures: These type of failures occur when the machine running the container goes down or if the container is restarted with active transfers. When the container is restarted it restarts ReliableTransferHome which looks at the database for any active RFT resources and restarts them.
</para>
</section>
<section id="s-rft-recovery-unaddressed">
<title>Failure modes that are not addressed </title>
<para>
- Running out of disk space for the database.
</para>
</section>
