<title>GT 4.0 OGSA-DAI (Tech Preview): System Administrator's Guide</title>
<titleabbrev>System Administrator's Guide</titleabbrev>

<section id="s-ogsadai-admin-introduction"><title>Introduction</title>
<para>This guide contains advanced configuration information for system administrators
  working with OGSA-DAI. It provides references to information on procedures
  typically performed by system administrators, including installing, configuring,
 deploying, and testing the installation.</para>
 <important>
  <simpara> This information is in addition to the basic Globus Toolkit prerequisite, 
   overview, installation, security configuration instructions in the <ulink url="../../admin/docbook/">GT 4.0 System Administrator's Guide</ulink>.  
   Read through this guide before continuing!</simpara>  
 </important>
</section>


<section id="s-ogsadai-admin-installing"><title>Building and installing</title>
 <para>OGSA-DAI is not built and installed as part of the standard Globus Toolkit installation. 
  You will find the installation bundle in the contributions directory. You may find a binary and/or 
  a source distribution of the OGSA-DAI software. This documentation will outline how to build a 
  binary distribution from the source. You will need to install the Java WS-Core from the Globus distribution.</para>
<section id="s-ogsadai-admin-installing-prereq"><title>Prerequisites</title>
 <para>The deployment and use of the OGSA-DAI WSRF distribution will be easier if you are already familiar with:</para>
 <itemizedlist>
  <listitem>OGSA-DAI concepts and terms. Reading the user's guide included in the OGSA-DAI distribution 
   should provide you with this information.</listitem>
  <listitem>WS-Addressing concepts and terms. An introduction to WS-Addressing is available at 
   <ulink url="http://www-106.ibm.com/developerworks/library/specification/ws-add">http://www-106.ibm.com/developerworks/library/specification/ws-add</ulink>.</listitem>
  <listitem>Web Services Resource Framework (WSRF) concepts and terms.  The WSRF specifications can be found at <ulink url="http://www.globus.org/wsrf">http://www.globus.org/wsrf</ulink>.</listitem>
 </itemizedlist>
 <section><title>Prerequisite Software</title> 
<para>  To use OGSA-DAI WSRF you will need the following software:</para>
  
<itemizedlist>
<listitem> Java 1.4.0: OGSA-DAI WSRF has been tested on this version of Java though may work with other Java 1.4.x flavours.</listitem>
<listitem> Jakarta ANT 1.5: See <ulink url="http://ant.apache.org">http://ant.apache.org</ulink>.</listitem>
<listitem> Globus Toolkit Java WS Core
 <itemizedlist>
 <listitem>This provides a Java-based implementation of WSRF and is available at: <ulink url="http://www-unix.globus.org/toolkit/downloads/development">http://www-unix.globus.org/toolkit/downloads/development</ulink>.</listitem>
  <listitem>Information on Globus Toolkit 4.0 can also be found at:
   <ulink url="http://www-unix.globus.org/toolkit/docs/development/4.0-drafts/GT4Facts">http://www-unix.globus.org/toolkit/docs/development/4.0-drafts/GT4Facts</ulink>.</listitem>
 </itemizedlist>
</listitem>
</itemizedlist>
 </section>
 
</section>
 </section>
 <section id="s-ogsadai-admin-building"><title>Building OGSA-DAI WSRF</title>
 <para> This section describes how to build OGSA-DAI WSRF. If you are using the binary distribution then you can move to the deploying OGSA-DAI WSRF section.</para>
  
  <section id="s-ogsadai-admin-building-insertjar"><title>  Insert the Prerequisite JAR Files</title>  
   <para>First, download the prerequisite JAR files (listed above):</para>
  
<itemizedlist>  
 <listitem>jakarta-oro-2.0.7.jar</listitem>
  <listitem>lucene-1.4-final.jar</listitem>
<listitem>xmldb.jar</listitem>
</itemizedlist>
  
<para>  and put these into the OGSA-DAI distribution's lib directory.</para>
  </section>

  <section id="s-ogsadai-admin-building-compile"><title>  Compile GT4 core</title>  
  <para> Now, you need to compile Globus Toolkit 4 Web Services Core. The GT4 instructions tell you how to do this.</para>
  </section>
  
  <section id="s-ogsadai-admin-building-wsrf"><title>  Build OGSA-DAI WSRF</title>
  
 <para> To build OGSA-DAI WSRF:</para>
  <itemizedlist>
<listitem>Set a GLOBUS_LOCATION environment variable to point to the location of your GT4 distribution. For example, under UNIX, enter:
  
 <screen> $ export GLOBUS_LOCATION=/path/to/Globus/directory</screen></listitem>
  
<listitem>Run the following from within the OGSA-DAI distribution directory:
  
<screen>  $ ant createBinaryDistribution</screen>
  
  Progress messages will appear and if there are any problems - for example missing JARs - then you will be notified.</listitem>
  <listitem>When complete, you will have a ZIPped, TARred binary distribution within your OGSA-DAI source distribution directory. You will also have a binary directory containing the binary release.</listitem>
  </itemizedlist>
  <para>OGSA-DAI WSRF will then be built. You should now change into the binary directory. Note that before you can use OGSA-DAI 
   you must configure it. This is covered in the deployment section. </para>
 </section>
 </section>

<section id="s-ogsadai-admin-configuring"><title>Configuring </title>
<para>This information is in addition to the basic configuration instructions in the 
 <ulink url="http://www-unix.globus.org/toolkit/docs/4.0/admin/docbook/">GT4.0 System Administrator's Guide</ulink>.
 &OGSA_DAI_Interface_Config_Frag;
</para>

</section>

<section id="s-ogsadai-admin-deploying"><title>Deploying</title>
 <para>This section describes how to install OGSA-DAI WSRF onto the GT4 container or Apache Tomcat.</para>
<para> This section assumes that you have built the WSRF version of OGSA-DAI from source or are using a 
 binary distribution. Distributions of OGSA-DAI are bundled with the Globus Toolkit or are available from the 
 project website <ulink url="http://www.ogsadai.org.uk">www.ogsadai.org.uk</ulink>. Please consult the 
 bundled documentation in any of these distributions for more details about OGSA-DAI.</para>
 
<para> The OGSA-DAI WSRF binary distribution can be deployed onto the GT4 container or Apache Tomcat:</para>
 <itemizedlist>
 <listitem>Either via the Command-line</listitem>
<listitem> Or using a GUI</listitem></itemizedlist>
 <section id="s-ogsadai-admin-deploying-commandline">
<title> Deploying OGSA-DAI WSRF via the Command-line</title>
  <section id="s-ogsadai-admin-deploying-commandline-jar">
  <title>Insert the Prerequisite JAR Files</title>
 
<para> First, download the prerequisite JAR files (listed in the building section):</para>
 
<itemizedlist>
 <listitem>jakarta-oro-2.0.7.jar</listitem>
 <listitem>lucene-1.4-final.jar</listitem>
<listitem>xmldb.jar</listitem>
</itemizedlist>
 
 <para>and put these into the OGSA-DAI binary distribution lib directory. (IF you build your binary from a source 
  distribution you will already have these JARs and they will have been inserted into the binary lib directory as part 
  of the build).</para>
  </section>
  <section id="s-ogsadai-admin-deploying-commandline-gt4"> 
  <title>Deploying OGSA-DAI WSRF onto GT4</title>
 
 <para>If you wish to deploy OGSA-DAI WSRF onto the GT4 Web services container then keep reading. If however 
  you want to deploy OGSA-DAI WSRF onto Apache Tomcat then skip to the next section.</para>
 
<para> To deploy OGSA-DAI WSRF onto GT4:</para>
 
<itemizedlist>
 <listitem>Set a GLOBUS_LOCATION environment variable to point to the location of your GT4 distribution. For example, under UNIX, enter:
<screen> $ export GLOBUS_LOCATION=/path/to/Globus/directory</screen>
 </listitem>
 
<listitem>Run the following from within the OGSA-DAI binary distribution directory:
 
<screen> $ ant deployGT4</screen>
</listitem>
</itemizedlist>
 <para>OGSA-DAI WSRF will then be deployed.</para>
 </section>
  
  <section id="s-ogsadai-admin-deploying-commandline-tomcat"> 
 <title>Deploying OGSA-DAI WSRF onto Tomcat</title>
 
 <para>Before you can deploy OGSA-DAI WSRF onto Tomcat you will need to deploy GT4 onto Tomcat. 
  You can do this as follows, if you have not already done so:</para>
 
<itemizedlist>
 <listitem>Set a GLOBUS_LOCATION environment variable to point to the location of your GT4 distribution. 
  For example, under UNIX, enter:
 
<screen> $ export GLOBUS_LOCATION=/path/to/Globus/directory</screen></listitem>
 
<listitem> * Set a CATALINA_HOME environment variable to point to the location of Tomcat. For example, under UNIX, enter:
 
 <screen>$ export CATALINA_HOME=/path/to/Tomcat/directory</screen></listitem>
 
<listitem> * Run the following commands:
 
<screen> $ cd path/to/Globus/directory
 $ ant -f share/globus_wsrf_common/tomcat/tomcat.xml deployTomcat 
 -Dtomcat.dir=/path/to/Tomcat
 $ cd path/to/OGSA-DAI/binary/directory</screen>
</listitem>
 
<listitem>For more information see the GT4 installation instructions.</listitem></itemizedlist>
 
 <para>Now, to deploy OGSA-DAI WSRF onto Tomcat, run the following from within the OGSA-DAI binary distribution directory:</para>
 
 <screen>$ ant deployTomcat</screen>
 
<para> OGSA-DAI WSRF will then be deployed to Tomcat.</para>
 
 <note><simpara>As an alternative to setting CATALINA_HOME you can specify the Tomcat location at the command-line as follows:</simpara>
 
<screen> $ ant deployTomcat -Dtomcat.dir=/path/to/Tomcat/directory</screen>
 </note>
 </section>
  </section>
  
  <section id="s-ogsadai-admin-deploying-gui">
<title>  Deploying OGSA-DAI WSRF using a GUI</title>
   <section id="s-ogsadai-admin-deploying-gui-gt4">
  <title>Deploying OGSA-DAI WSRF onto GT4</title>
  
 <para> If you wish to deploy OGSA-DAI WSRF onto the GT4 Web services container then keep reading. If however 
  you want to deploy OGSA-DAI WSRF onto Apache Tomcat then skip to the next section.</para>
  
<para>  To deploy OGSA-DAI WSRF onto GT4:</para>
  
<itemizedlist>
 <listitem>Run the following from within the OGSA-DAI binary distribution directory:
<screen>  $ ant guiDeployGT4</screen></listitem>
  
<listitem>A GUI will appear and you can select your GT4 distribution by pressing the Select... button. If GLOBUS_LOCATION is set then this will be offered as the default selection.</listitem>
  <listitem>When you are happy with the Path, press Next.</listitem>
  <listitem> You now have to select the prerequisite JAR files (listed in the building section):
<itemizedlist>  
 <listitem>jakarta-oro-2.0.7.jar</listitem>
  <listitem>lucene-1.4-final.jar</listitem>
  <listitem>xmldb.jar</listitem></itemizedlist>
  </listitem>
  <listitem>Using the file browser on the left select a JAR file. Press Add to add it to the list of current JARs on the right.</listitem>
  <listitem>If you make a mistake then select the JAR on the right and press Remove to remove it from the list.</listitem>
  <listitem>When you are happy with your selections, press Next.</listitem>
  <listitem>You will now be requested to press Next so that the tool can deploy OGSA-DAI WSRF. If any problems occur then the tool will notify you of these.</listitem>
  <listitem>When the deployment has completed a completion window will be displayed. Press Finish to exit the tool.</listitem></itemizedlist>
   </section>
   <section id="s-ogsadai-admin-deploying-gui-tomcat">
   <title>Deploying OGSA-DAI WSRF onto Tomcat</title>
  
  <para>Before you can deploy OGSA-DAI WSRF onto Tomcat you will need to deploy GT4 onto Tomcat. You can do this as follows, if you have not already done so:</para>
  
<itemizedlist> 
 <listitem>Set a GLOBUS_LOCATION environment variable to point to the location of your GT4 distribution. For example, under UNIX, enter:
  
<screen>  $ export GLOBUS_LOCATION=/path/to/Globus/directory</screen></listitem>
  
<listitem>Set a CATALINA_HOME environment variable to point to the location of Tomcat. For example, under UNIX, enter:
  
 <screen> $ export CATALINA_HOME=/path/to/Tomcat/directory</screen></listitem>
  
  <listitem>Run the following commands:
  
<screen>  $ cd path/to/Globus/directory
  $ ant -f share/globus_wsrf_common/tomcat/tomcat.xml deployTomcat 
  -Dtomcat.dir=$CATALINA_HOME
  $ cd path/to/OGSA-DAI/binary/directory</screen></listitem>
  
  <listitem>For more information see the GT4 installation instructions.</listitem></itemizedlist>
  
<para>  Now, to deploy OGSA-DAI WSRF onto Tomcat:</para>
  
<itemizedlist>  
 <listitem>Run the following from within the OGSA-DAI binary distribution directory:
  
<screen>  $ ant guiDeployTomcat</screen></listitem>
  
 <listitem>A GUI will appear and you can select your Tomcat distribution by pressing the Select... button. If CATALINA_HOME is set then this will be offered as the default selection.</listitem>
  <listitem>When you are happy with the Path press Next.</listitem>
  <listitem> You now have to select the prerequisite JAR files (listed in admin building section):
<itemizedlist>
<listitem> jakarta-oro-2.0.7.jar</listitem>
<listitem> lucene-1.4-final.jar</listitem>
<listitem> xmldb.jar</listitem>
</itemizedlist>
  </listitem>
  <listitem>Using the file browser on the left select a JAR file. Press Add to add it to the list of current JARs on the right.</listitem>
  <listitem>If you make a mistake then select the JAR on the right and press Remove to remove it from the list.</listitem>
  <listitem>When you are happy with your selections, press Next.</listitem>
 <listitem>You will now be requested to press Next so that the tool can deploy OGSA-DAI WSRF. If any problems occur then the tool will notify you of these.</listitem>
<listitem>When the deployment has completed a completion window will be displayed. Press Finish to exit the tool.</listitem></itemizedlist>
  </section>
  </section>
 
 <section id="s-ogsadai-admin-deploying-dataresources"> <title>Exposing Data Resources using OGSA-DAI WSRF</title>
  
<para>  To expose a data resource via an OGSA-DAI WSRF data service is a three-step process:</para>
  
 <orderedlist> 
  <listitem>Deploy an OGSA-DAI data service. This data service initially exposes 0 data service resources.</listitem>
  <listitem>Deploy a data service resource. The data service resource contains information about a data resource and the activities clients can perform on that data resource via a data service.</listitem>
  <listitem>Add the data service resource to a data service. This instructs the data service to expose the data service resource and so allows clients to interact with the data service resource - thereby interacting with a data resource.</listitem>
 </orderedlist>
  
 <para> For those who want a quick introduction to OGSA-DAI WSRF we recommend:</para>
  
  <orderedlist>
   <listitem>Deploy a new data service as described here.</listitem>
  <listitem>Startup your Web services container.</listitem>
  <listitem>Test the data service resource using the ListResources client and ensuring that the service is available and exposes 0 data service resources. The ListResources client is described here.</listitem>
  <listitem>Shutdown your Web services container.</listitem>
  <listitem>Deploy a new data data service resource as described here.</listitem>
  <listitem>Add the data service resource to the data service as described here.</listitem>
  <listitem>Startup your Web services container.</listitem>
  <listitem>Submit a perform document to the data service resource exposed by your data service using the End-to-end client. The End-to-end client is described here.</listitem></orderedlist>
 </section>
 
<section id="s-ogsadai-admin-deploying-dataservices"> <title>Deploying Data Services</title>
 
 <para>This section describes how to deploy an OGSA-DAI data service which initially will expose 0 data service resources.</para>
 
 <para>You can:</para>
 
<itemizedlist> 
 <listitem>Deploy data services using the command-line.</listitem>
 <listitem>Deploy data services using a GUI.</listitem>
 <listitem>Check that a data service deployed correctly.</listitem>
</itemizedlist>
 <para> If you have already deployed some data service resources (as described in the next section) you can add these 
  to the data service as described on a following section.</para>
 
 <section id="s-ogsadai-admin-deploying-dataservices-commandline"><title>Deploying Data Services Using the Command-line</title>
 
<para> To deploy a data service under Tomcat:</para>
 
 <itemizedlist>
  <listitem>Run the following command from within the OGSA-DAI WSRF binary distribution directory:
<screen> $ ant deployDataServiceTomcat -Dtomcat.dir=/path/to/Tomcat/directory
 -Ddai.service.path=service/path</screen>
<itemizedlist> 
 <listitem><filename>dai.service.path</filename> specifies the local URL of the service. For example <filename>-Ddai.service.path=ogsadai/DataService</filename> specifies a data service whose URL will be <filename>http://HOST:PORT/wsrf/services/ogsadai/DataService</filename>.</listitem>
 <listitem><filename>tomcat.dir</filename> specifies the location of Tomcat. If this argument is omitted then the Tomcat location specified within CATALINA_HOME is used.</listitem>
 <listitem>Providing the flag <filename>-Ddai.service.config=y</filename> requests that the data service support dynamic service configuration. See the sections on configurable data services, adding data service resources to data services and updating role maps for more information.</listitem>
</itemizedlist>
  </listitem>
 <listitem>The data service will be deployed onto Tomcat. You will need to shutdown and restart Tomcat before clients are able to access the new data service.</listitem>
 </itemizedlist>
 <para>To deploy a data service under GT4 requires execution of the deployDataServiceGT4 target. This takes the same arguments as deployDataServiceTomcat. The exception is the tomcat.dir argument - this target instead accepts gt.dir which specifies the location of GT4. If this argument is omitted then the GT4 location specified within GLOBUS_LOCATION is used.</para>
 </section>
 
 <section id="s-ogsadai-admin-deploying-dataservices-gui"><title>Deploying Data Services Using a GUI</title>
 
<para> To deploy a data service under Tomcat:</para>
 
 <itemizedlist>
  <listitem>Run the following command from within the OGSA-DAI WSRF binary distribution directory:
<screen> $ ant guiDeployDataServiceTomcat</screen>
  </listitem>
 
 <listitem>A GUI will appear and you can select your Tomcat distribution by pressing the Select... button. If CATALINA_HOME is set then this will be offered as the default selection.</listitem>
<listitem>When you are happy with the Path press Next.</listitem>
<listitem>Now you will be asked to enter:
 
 <itemizedlist>
  <listitem>The local URL of the data service, for example <filename>ogsadai/DataService</filename>, in the Service Path field. For example ogsadai/DataService specifies a data service whose URL will be <filename>http://HOST:PORT/wsrf/services/ogsadai/DataService</filename>.</listitem>
 <listitem>Clicking on the Dynamically configurable? box requests that the data service support dynamic service configuration. See the sections on configurable data services, adding data service resources to data services and updating role maps for more information.</listitem>
 </itemizedlist></listitem>
 <listitem> Press Next when you have entered this information.</listitem>
 <listitem>You will now be requested to press Next so that the tool can deploy the data service. If any problems occur then the tool will notify you of these.</listitem>
 <listitem>When the deployment has completed a completion window will be displayed. Press Finish to exit the tool.</listitem>
 <listitem>You will need to shutdown and restart Tomcat before clients are able to access the new data service.</listitem></itemizedlist>
 
<para> To deploy data services under GT4 requires execution of the <filename>guiDeployDataServiceGT4</filename> target.</para>
 </section>
</section>
 <section id="s-ogsadai-admin-deploying-check"> <title>Checking the OGSA-DAI Data Service Deployment</title>
 
<para> To check that a service has deployed under Tomcat:</para>
<itemizedlist> 
 <listitem>Restart Tomcat.</listitem>
 <listitem>Using a Web browser, visit the following URL:
 
<screen> http://TOMCAT.HOST:TOMCAT.PORT/wsrf/services</screen></listitem>
 
 <listitem>Eventually a list of service URLs will be displayed. You should see one corresponding to your service. For example:
 
<screen> ogsadai/DataService (wsdl)</screen> </listitem>
 
<listitem>Click on the (wsdl) link and the WSDL describing the service should appear. For example:
 
<screen> &lt;?xml version="1.0" encoding="UTF-8" ?&gt; 
 &lt;wsdl:definitions name="DataService" 
 ... </screen></listitem>
  </itemizedlist>
<para>  To check that a service has deployed under GT4:</para>
  
<itemizedlist>
 <listitem>Start the GT4 container:
<screen>  $ cd $GLOBUS_LOCATION
  $ ./bin/globus-start-container -nosec</screen></listitem>
  
  <listitem>Eventually a list of service URLs will be displayed. You should see one corresponding to your service. For example:
  
<screen>  [22]: http://129.215.56.6:8080/wsrf/services/ogsadai/DataService</screen></listitem></itemizedlist>
  
 <para>An alternative is to test the service using the OGSA-DAI WSRF listResourcesClient client. We describe how to use this client in the next section.</para>
</section>

 <section id="s-ogsadai-admin-deploying-listresources"><title>ListResources Client</title>
 
 <para>OGSA-DAI comes with a client that allows you to list the data service resources exposed by an OGSA-DAI WSRF data service.</para>
 
 <para>To list the data service resources exposed by a data service:</para>
 
<itemizedlist>
 <listitem>Ensure that your Web services container is running.</listitem>
 <listitem>Ensure that the GLOBUS_LOCATION environment variable is set.</listitem>
 <listitem><simpara>Run the following command from within the OGSA-DAI WSRF binary distribution directory:</simpara>
 
<screen> $ ant listResourcesClient -Ddai.url=SERVICE-URL</screen>
 
 <simpara>where <filename>-Ddai.url=</filename> specifies the URL of the data service. 
  If omitted then a default URL of <filename>http://localhost:8080/wsrf/services/ogsadai/DataService</filename> is used.</simpara>
<simpara> For example:</simpara>
 
 <screen>$ ant listResourcesClient 
 -Ddai.url=http://localhost:8080/wsrf/services/ogsadai/MyDataService</screen>
 </listitem>
 
<listitem><simpara>The data service resources exposed by your service will be displayed. For example:</simpara>
 
<screen> [java] Contacting ... http://localhost:8080/wsrf/services/ogsadai/DataService
 [java] Service version: OGSA-DAI WSRF 1.0
 [java] This service exposes no resources!</screen>
 
<simpara> For example:</simpara>
 
<screen> [java] Contacting ... http://localhost:8080/wsrf/services/ogsadai/DataService
 [java] Service version: OGSA-DAI WSRF 1.0
 [java] Number of resources: 2
 [java] Resource: MySQLResource
 [java] Resource: AnotherResource</screen>
</listitem></itemizedlist>
 
<note><simpara>As an alternative to setting CATALINA_HOME or GLOBUS_LOCATION you can specify the Tomcat or GT4 locations using the -Dtomcat.dir=/path/to/Tomcat/directory or -Dgt.dir=/path/to/Globus/directory flags respectively. </simpara></note>
 </section>
 <section id="s-ogsadai-admin-deploying-dataserviceresources">
<title> Deploying Data Service Resources</title>
 
 <para>This section describes how to deploy a data service resource. Once deployed the data service resource can 
  then be added to the set of those exposed by a data service as described in the next section.</para>
 
 <para>The characteristics of a data service resources are specified in a data services resource file. We describe these below.</para>
 
 <para>There are a number of ways to create a data service resource file and deploy a data service resource. You can:</para>
 <itemizedlist>
 <listitem>Write or edit a data service resource file using an editor then deploy the data service resource using the command-line.</listitem>
 <listitem>Create new data service resource files and (optionally) deploy the data service resources using a GUI</listitem>
 <listitem>Load and edit existing data service resource files and (optionally) deploy the data service resources using a GUI</listitem>
 </itemizedlist>
  
<section> <title>Data Service Resource Files</title>
 
 <para>A data service resource file is used specify the properties of your data service resource. This is a simple properties file consisting of argument=value values. You can reuse the same file to deploy the same data service resource under different names or to customise a specific configuration in small or major ways. Alternatively you can just write a new file each time.</para>
 
<para> Within the OGSA-DAI WSRF distribution directory we provide an example - data.service.resource.properties. The file is fully commented.</para>
 
<para> The properties are as follows:</para>
 
<itemizedlist> 
 <listitem>dai.resource.id= - name for the data service resource.</listitem>
 <listitem>dai.data.resource.type=[Relational | XML | Files] - the type of data resource to which the data service resource provides access.</listitem>
 <listitem>dai.product.name= - data resource product name (optional).</listitem>
 <listitem>dai.product.vendor= - data resource product vendor (optional).</listitem>
 <listitem>dai.product.version= - data resource product version (optional).</listitem>
 <listitem>dai.data.resource.uri= - data resource URI. This must be compatible with the driver class specified next.</listitem>
 <listitem>dai.driver.class= - data resource driver class name. This is optional only if dai.data.resource.type=Files.</listitem>
 <listitem>dai.credential= - Grid certificate credentials of a user permitted to access the data resource. If omitted then any user will be allowed access.</listitem>
 <listitem>dai.user.name= - data resource user name. Optional only if there is no user name required for a database.</listitem>
 <listitem>dai.password= - corresponding data resource password. Optional if there is no user name required, or if the password is null.</listitem>
</itemizedlist> 
</section>
 <section><title>Deploying Data Service Resources Using the Command-line</title>
 
<para> To deploy a data service resource under Tomcat:</para>
 
 <itemizedlist>
  <listitem>Take a copy of data.service.resource.properties within the OGSA-DAI WSRF distribution directory.</listitem>
 <listitem>Load the file into an editor and provide values specifying your data service resource - the comments in the file should help you.</listitem>
<listitem> When done, save the file.</listitem>
 <listitem>Put all the JARs implementing the data resource driver within the drivers directory within the OGSA-DAI WSRF binary distribution directory.</listitem>
 <listitem>Run the following command from within the OGSA-DAI WSRF binary distribution directory:
 
<screen> $ ant deployResourceTomcat -Dtomcat.dir=/path/to/Tomcat/directory
 -Ddai.service.resource.file=DAI-SERVICE-RESOURCE-FILE</screen>
<itemizedlist> 
<listitem><filename>tomcat.dir</filename> specifies the location of Tomcat. If this argument is omitted then the Tomcat location specified within CATALINA_HOME is used.</listitem>
<listitem><filename>dai.service.resource.file</filename> specifies the location of a data service resource properties file. If no argument is given then a default location of data.service.resource.properties (within the OGSA-DAI WSRF distribution directory) is assumed.</listitem>
 </itemizedlist> 
  </listitem>
  <listitem>The data service resource will be deployed. For example:
 <screen> $ ant deployResourceTomcat -Ddai.service.resource.file=my.config
 ...
 [echo] Reading properties file my.config
 [echo] Data service resource ID: MySQLResource
 [echo] Data resource type: Relational
 [echo] Data resource product: MySQL
 [echo] Data resource vendor: MySQL
 [echo] Data resource version: 1.0
 [echo] Data resource URI: jdbc:mysql://myhost.example.com:3306/ogsadai/DATABASE
 [echo] Data resource credential: 
 [echo] Data resource user name: ogsadai
 [echo] Data resource password: ogsadai
 [echo] Data driver class: org.gjt.mm.mysql.Driver
 [echo] Deploying data service resource MySQLResource...
 ...
 [echo] Data service resource deployed!</screen>
 </listitem>
 <listitem>Values in the same data service resource file can be overridden at the command line via the use of -Dproperty=value flags.
 
<itemizedlist>  
 <listitem>For example to deploy another data service resource with the same configuration as held within my.config you can execute:
 
<screen> $ ant deployResourceTomcat -Ddai.service.resource.file=my.config
 -Ddata.resource.id=AnotherResource</screen></listitem>
 
<listitem>As another example, consider deploying a data service resource with the same configuration but with a different location:
 
<screen> $ ant deployResourceTomcat -Ddai.service.resource.file=my.config
 -Ddata.resource.id=YetAnotherResource
 -Ddai.data.resource.uri=jdbc:mysql://myhost:8080/some/other/DB</screen></listitem>
 
<listitem>Alternatively, you can just edit your data service resource file.</listitem>
 </itemizedlist>
 </listitem>
 </itemizedlist>
 
<para> To deploy data service resources under GT4 requires execution of the deployResourceGT4 target. 
 This takes the same arguments as deployResourceTomcat. The exception is the tomcat.dir argument - this target 
 instead accepts gt.dir which specifies the location of GT4. If this argument is omitted then the GT4 location specified 
 within GLOBUS_LOCATION is used.</para>
 </section> 
  
  <section><title>Creating new Data Service Resource Files and Deployment</title>
 
<para> To create a new data service resource file and (optionally) deploy the data service resource under Tomcat:</para>
 <itemizedlist>
<listitem>Run the following command from within the OGSA-DAI WSRF binary distribution directory:
 
<screen> $ ant guiCreateResourceTomcat</screen></listitem>
 
 <screen>A GUI will appear and you can select your database product from those offered.</screen>
 <screen>When you are happy with your selection, press Next.</screen>
 <listitem>You will now have to enter information about the data service resource and your database product. This information includes:

<itemizedlist>
 <listitem>Data Resource URI - data resource URI(required). This must be compatible with the driver class specified next.</listitem>
 <listitem>Data Resource Driver Class - data resource driver class name. This is optional only if you selected a Files and directories product on the previous window.</listitem>
 <listitem>Vendor - data resource product vendor (optional).</listitem>
 <listitem>Version - data resource product version (optional).</listitem>
 <listitem>Database access credential - Grid certificate credentials of a user permitted to access the data resource. If omitted then any user will be allowed access.</listitem>
 <listitem>Database user ID - data resource user name. Optional only if there is no user name required for a database.</listitem>
 <listitem>Database password - corresponding data resource password. Optional if there is no user name required, or if the password is null.</listitem>
 <listitem>Data Service Resource ID - name for the data service resource (required).</listitem></itemizedlist>
 </listitem>
 
  <listitem>When you are happy with your values, press Next.</listitem>
 <listitem>You now have to select the JARs that implement your database driver if these have not already been installed on the server.
 <itemizedlist>
  <listitem>Using the file browser on the left select a JAR file. Press Add to add it to the list of current driver JARs on the right.</listitem>
 <listitem>If you make a mistake then select the JAR on the right and press Remove to remove it from the list.</listitem>
 </itemizedlist>
 </listitem>
 <listitem>When you are happy with your selections, press Next.</listitem>
 <listitem>You should now enter a file name in which to save your values. These will be saved in a new data service resource file. Press the Select... button, enter a new file name in the File name field then press Select</listitem>
 <listitem> When you are happy with the Path press Next.</listitem>
 <listitem>You will now be given the choice of pressing Cancel to exit, or Next to proceed to deploy your data service resource.

  <itemizedlist><listitem>If you press Cancel you can always deploy your resource later using via the command-line as described above or a GUI as described below.</listitem></itemizedlist></listitem>
 
  <listitem>You can select your Tomcat distribution by pressing the Select... button. If CATALINA_HOME is set then this will be offered as the default selection.</listitem>
<listitem> When you are happy with the Path press Next.</listitem>
 <listitem>You will now be requested to press Next so that the tool can deploy the data service resource. If any problems occur then the tool will notify you of these.</listitem>
 <listitem>When the deployment has completed a completion window will be displayed. Press Finish to exit the tool.</listitem>
 </itemizedlist>
<para> To create and deploy data service resources under GT4 requires execution of the guiCreateResourceGT4 target.</para>
  </section>
 
  <section><title>Editing Existing Data Service Resource Files and Deployment</title>
 
<para> To edit an existing data service resource file and (optionally) deploy the data service resource under Tomcat:</para>
<itemizedlist> 
<listitem>Run the following command from within the OGSA-DAI WSRF binary distribution directory:
 
 <screen>$ ant guiDeployResourceTomcat</screen></listitem>
 
 <listitem>A GUI will appear and you can select your data service resource file by pressing the Select... button.</listitem>
 <listitem>When you are happy with the Path press Next.</listitem>
 <listitem>You can now edit the information about the data service resource and your database product.</listitem>
 <listitem>When you are happy with your values, press Next.</listitem>
 
 <listitem>You can now change the current selection of the JARs that implement your database driver.
  <itemizedlist>
   <listitem>Using the file browser on the left select a JAR file. Press Add to add it to the list of current driver JARs on the right.</listitem>
 <listitem>If you make a mistake or if some of the JARs are no longer valid or required then select the JAR on the right and press Remove to remove it from the list.</listitem>
 </itemizedlist>
 </listitem>
<listitem>When you are happy with your selections, press Next.</listitem>
 <listitem>You should now enter a file name in which to save your values. These will be saved in a new data service resource file. Press the Select... button, enter a new file name in the File name field then press Select</listitem>
<listitem>When you are happy with the Path press Next.</listitem>
<listitem>You can now select your Tomcat distribution by pressing the Select... button. If CATALINA_HOME is set then this will be offered as the default selection.</listitem>
<listitem>When you are happy with the Path press Next.</listitem>
 <listitem>You will now be requested to press Next so that the tool can deploy the data service resource. If any problems occur then the tool will notify you of these.</listitem>
<listitem>When the deployment has completed a completion window will be displayed. Press Finish to exit the tool.</listitem>
 </itemizedlist>
 <para>To edit existing data service resource files and deploy data service resources under GT4 requires execution of the guiDeployResourceGT4 target. </para>
  </section>
 </section>

 <section id="s-ogsadai-admin-deploying-adding">
<title> Adding Data Service Resources to Data Services</title>
 
 <para>This section describes how to add a data service resource to a data service, thereby allowing clients to access 
  and interact with the data service resource. It assumes that both the data service and data service resource have been 
  deployed.</para>
 
<para> You can:</para>
<itemizedlist> 
 <listitem>Add data service resources using the command-line.</listitem>
 <listitem>Add data service resources using a GUI.</listitem>
 <listitem>Dynamically add a data service resource using the command-line.</listitem>
 </itemizedlist>
 <section><title>Adding Data Service Resources Using the Command-line</title>
 
 <para>To add data service resources to data services under Tomcat:</para>
<itemizedlist> 
<listitem> Run the following command from within the OGSA-DAI WSRF binary distribution directory:
 
<screen> $ ant addResourceTomcat -Ddai.service.path=service/path 
 -Ddai.resource.id=ResourceID -Dtomcat.dir=/path/to/Tomcat/directory</screen>
 <itemizedlist>
 <listitem>dai.service.path specifies the local URL of the service. For example -Ddai.service.path=ogsadai/DataService specifies a data service whose URL will be http://HOST:PORT/wsrf/services/ogsadai/DataService.</listitem>
<listitem> -Ddai.resource.id= is the ID of the data service resource that the data service is to expose. This must be the name of a data service resource which you have already deployed as described in the previous section. For example -Ddai.service.resource=MySQLResource.</listitem>
<listitem> tomcat.dir specifies the location of Tomcat. If this argument is omitted then the Tomcat location specified within CATALINA_HOME is used.</listitem>
</itemizedlist>
</listitem>
<listitem>You will need to shutdown and restart Tomcat before clients are able to access the new data service resource via the data service.</listitem>
 </itemizedlist>
 <para>To add data service resources under GT4 requires execution of the addResourceGT4 target. This takes the same arguments as addResourceTomcat. The exception is the tomcat.dir argument - this target instead accepts gt.dir which specifies the location of GT4. If this argument is omitted then the GT4 location specified within GLOBUS_LOCATION is used.</para>
 
<para> After restarting your container, you can test whether the new data service resource was successfully added using the OGSA-DAI WSRF listResourcesClient client. We describe how to use this client in this section.</para>
 </section>
 
  <section><title>Adding Data Service Resources Using a GUI</title>
 
<para> To add data service resources to data services under Tomcat:</para>
<itemizedlist> 
<listitem> Run the following command from within the OGSA-DAI WSRF binary distribution directory:
 
<screen> $ ant guiAddResourceTomcat</screen></listitem>
 
 <listitem>A GUI will appear and you can select your Tomcat distribution by pressing the Select... button. If CATALINA_HOME is set then this will be offered as the default selection.</listitem>
 <listitem>When you are happy with the Path press Next.</listitem>
 <listitem>Now you will be asked to enter:
<itemizedlist>
 <listitem>The local URL of the data service, for example ogsadai/DataService, in the Service Path field.</listitem>
 <listitem>The ID of the data service resource, for example MyRelationalResource in the Data Service Resource ID field.</listitem>
</itemizedlist>
 </listitem>
 <listitem>Press Next when you have entered this information.</listitem>
 <listitem>You will now be requested to press Next so that the tool can add the data service resource to the data service. If any problems occur then the tool will notify you of these.</listitem>
<listitem>When the addition has completed a completion window will be displayed. Press Finish to exit the tool.</listitem>
 <listitem>You will need to shutdown and restart Tomcat before clients are able to access the new data service resource via the data service.</listitem>
 </itemizedlist>
<para> To add data service resources from data services under GT4 requires execution of the guiAddResourceGT4 target.</para>
 
 <para>After restarting your container, you can test whether the new data service resource was successfully added using the OGSA-DAI WSRF listResourcesClient client. We describe how to use this client in this section. </para>
  </section>
 </section>
 <section id="s-ogsadai-admin-deploying-dynamic">
  <title>Dynamically Add a Data Service Resource using the Command-line</title>
  
  <para>If your data service is configurable then you can request that the data service immediately expose the data 
   service resource, without having to restart your Web services container. This is done as follows:</para>
  
<itemizedlist>
 <listitem>Ensure that the GLOBUS_LOCATION environment variable is set.</listitem>
  <listitem>Run the following command from within the OGSA-DAI WSRF binary distribution directory:
  
<screen>  $ ant dataServiceClient -Ddai.url=SERVICE-URL
  -Ddai.resource.id=RESOURCE-ID -Ddai.action=deploy</screen>
  
  where
   
<itemizedlist>
 <listitem>dai.url specifies the URL of the data service. If omitted then a default URL of http://localhost:8080/wsrf/services/ogsadai/DataService is used.</listitem>
 <listitem>dai.resource.id specifies the name of the data service resource.</listitem></itemizedlist>
<simpara>   For example:</simpara>
<screen>   $ ant dataServiceClient 
   -Ddai.url=http://localhost:8080/wsrf/services/ogsadai/MyDataService
   -Ddai.resource.id=MyNewResource -Ddai.action=deploy</screen>
  </listitem>
 
 <listitem>The request will be forwarded to the data service. For example:
  
<screen>  [echo] Deploying resource  MyNewResource...
  [java] Contacting ... http://localhost:8080/wsrf/services/ogsadai/DataService
  [java] Service version: OGSA-DAI WSRF 1.0
  [java] Number of resources: 1
  [java] Resource: MySQLResource
  [java] Data Service Resource: MyNewResource
  [java] About to invoke Deploy...
  [java] Deploy completed!</screen>
 </listitem>
  
  <listitem>You can now use the listResourcesClient client (described in this section) to check if the deployment was successful.</listitem>
  </itemizedlist>
<para>  During a deployment the service will attempt to update a data service resources file on the server. If this fails then a ConfigurationFaultType will occur with a corresponding message. The new data service resource will still be available via the data service but not if the container is shutdown and restarted. If such a failure occurs you can always add the data service resource to the data service using the first two approaches above. </para>
 </section>
 
 <section id="s-ogsadai-admin-deploying-removing">
<title>Removing Data Service Resources from Data Services</title>
  
  <para>This section describes how to remove a data service resource from a data service - the data service will no longer expose the data service resource. It assumes that both the data service and data service resource have been deployed and that the data service resource has been added to the data service (as described on the previously.</para>
  
<para>You can:</para>
  
<itemizedlist>
 <listitem>Remove data service resources using the command-line</listitem>
<listitem>Remove data service resources using a GUI</listitem>
</itemizedlist>
  
<section>  
 <title>Removing Data Service Resources Using the Command-line</title>
  
 <para> To remove data service resources from data services under Tomcat:</para>
  
<itemizedlist>
 <listitem>Run the following command from within the OGSA-DAI WSRF binary distribution directory:
  
<screen>  $ ant removeResourceTomcat -Dtomcat.dir=/path/to/Tomcat/directory
  -Ddai.service.path=service/path -Ddai.resource.id=ResourceID</screen>
  
 <itemizedlist>
  <listitem>tomcat.dir specifies the location of Tomcat. If this argument is omitted then the Tomcat location specified within CATALINA_HOME is used.</listitem>
<listitem>dai.service.path specifies the local URL of the service. For example -Ddai.service.path=ogsadai/DataService specifies a data service whose URL will be http://HOST:PORT/wsrf/services/ogsadai/DataService.</listitem>
  <listitem>dai.resource.id is the ID of the data service resource that the data service is no longer to expose. For example -Ddai.service.resource=MyRelationalResource</listitem>
 </itemizedlist>
 </listitem>
  <listitem>You will need to shutdown and restart Tomcat before the changes take effect.</listitem>
  </itemizedlist>
  <para>To remove data service resources from data services under GT4 requires execution of the removeResourceGT4 target. This takes the same arguments as removeResourceTomcat. The exception is the tomcat.dir argument - this target instead accepts gt.dir which specifies the location of GT4. If this argument is omitted then the GT4 location specified within GLOBUS_LOCATION is used.</para>
</section> 
  <section> <title>Removing Data Service Resources Using a GUI</title>
  
<para>  To remove data service resources from data services under Tomcat:</para>
  
<itemizedlist>
 <listitem>Run the following command from within the OGSA-DAI WSRF binary distribution directory:
  
  <screen>$ ant guiRemoveResourceTomcat</screen></listitem>
  
  <listitem>The tool will appear and you can select your Tomcat distribution by pressing the Select... button. If CATALINA_HOME is set then this will be offered as the default selection.</listitem>
  <listitem>When you are happy with the Path press Next.</listitem>
  <listitem>* Now you will be asked to enter:
<itemizedlist>   
  <listitem>The local URL of the data service, for example ogsadai/DataService, in the Service Path field.</listitem>
  <listitem>The ID of the data service resource, for example MyRelationalResource in the Data Service Resource ID field.</listitem>
  </itemizedlist>
  </listitem>
  <listitem>Press Next when you have entered this information.</listitem>
  <listitem>You will now be requested to press Next so that the tool can remove the data service resource from the data service. If any problems occur then the tool will notify you of these.</listitem>
  <listitem>When the removal has completed a completion window will be displayed. Press Finish to exit the tool.</listitem>
 <listitem>You will need to shutdown and restart Tomcat before the changes take effect.</listitem>
</itemizedlist>
      <para> To remove data service resources from data services under GT4 requires execution of the guiRemoveResourceGT4 </para>
  </section>
 </section>
    
    <section id="s-ogsadai-admin-deploying-updating"><title>Updating Data Service Resource Role Maps</title>
        
        <para>If you have deployed a configurable data service then you can make changes to the role maps file of any data service resources exposed by that data service. You can then request that the data service resource exposed by the service read in and use the updated role maps.</para>
        
        <para> To update the role maps that a data service resource exposed by a specific data service uses:</para>
        
        <itemizedlist>
            <listitem>Make the changes to the role maps document for the specific data service resource of interest:
                <itemizedlist>
                    
                    <listitem>Within the GT4 container the role maps for a specific data service resource can be found in:
                        
                        <screen> etc/ogsadai_wsrf/ResourceID/DatabaseRoles.xml</screen>
                        
                        where ResourceID is the ID of the data service resource.</listitem>
                    <listitem>Within Tomcat container the role maps for a specific data service resource can be found in:
                        
                        <screen> webapps/wsrf/WEB-INF/etc/ogsadai_wsrf/ResourceID/DatabaseRoles.xml</screen>
                        
                        where ResourceID is the ID of the data service resource.</listitem></itemizedlist>
            </listitem>
            <listitem>Ensure that the GLOBUS_LOCATION environment variable is set.</listitem>
            <listitem>Run the following command from within the OGSA-DAI WSRF binary distribution directory:
                
                <screen> $ ant dataServiceClient -Ddai.url=SERVICE-URL
                    -Ddai.resource.id=RESOURCE-ID -Ddai.action=updateRoleMaps</screen>
                
                where
                <itemizedlist>  
                    <listitem>dai.url specifies the URL of the data service. If omitted then a default URL of http://localhost:8080/wsrf/services/ogsadai/DataService is used.</listitem>
                    <listitem>dai.resource.id specifies the data service resource at which the request is targeted.</listitem>
                </itemizedlist>
                For example:
                
                <screen> $ ant dataServiceClient 
                    -Ddai.url=http://localhost:8080/wsrf/services/ogsadai/MyDataService
                    -Ddai.resource.id=MySQLResource -Ddai.action=updateRoleMaps</screen>
            </listitem>
            
            <listitem>The request will be forwarded to the data service. For example:
                
                <screen> [echo] Updating roleMaps for resource MySQLResource...
                    [java] Contacting ... http://localhost:8080/wsrf/services/ogsadai/DataService
                    [java] Service version: OGSA-DAI WSRF 1.0
                    [java] Number of resources: 1
                    [java] Resource: MySQLResource
                    [java] Data Service Resource: MySQLResource
                    [java] About to invoke UpdateRoleMaps...
                    [java] UpdateRoleMaps completed!</screen></listitem>
            
            <listitem>If you see the following message:
                
                <screen> [echo] Updating roleMaps for resource MySQLResource...
                    ...
                    [java] About to invoke UpdateRoleMaps...
                    [java] This service does not support the updateRoleMaps operation!</screen>
                
                Then the data service is not configurable i.e. it does not allow data service resources to dynamically update their role maps.</listitem>
        </itemizedlist>
    </section>
    
    <section id="s-ogsadai-admin-deploying-endtoend"><title>End-to-end Client</title>
        
        <para> OGSA-DAI comes with a client that allows you to:</para>
        
        <itemizedlist> 
            <listitem>Contact a data service and get a list of the data service resources it exposes.</listitem>
            <listitem> Submit a Perform document to the data service and print the resulting Response document.</listitem>
        </itemizedlist>
        
        <para>To submit a Perform document to a data service resource exposed by a data service and so perform some data resource-related activities (e.g. query a database):</para>
        <itemizedlist>
            <listitem>Ensure that your Web services container is running.</listitem>
            <listitem>Ensure that the GLOBUS_LOCATION environment variable is set.</listitem>
            <listitem>Run the following command from within the OGSA-DAI WSRF binary distribution directory:
                
                <screen> $ ant dataServiceClient -Ddai.url=SERVICE-URL
                    -Ddai.resource.id=RESOURCE-ID
                    -Ddai.action=PERFORM-DOC-LOCATION</screen>
                
                where
                <itemizedlist>
                    <listitem>-Ddai.url= specifies the URL of the data service. If omitted then a default URL of http://localhost:8080/wsrf/services/ogsadai/DataService is used.</listitem>
                    <listitem>-Ddai.resource.id= specifies the data service resource at which the Perform document is targeted.</listitem>
                    <listitem>-Ddai.action= specifies the location of an OGSA-DAI Perform document.</listitem>
                </itemizedlist>
                
                For example: 
                <screen> $ ant dataServiceClient 
                    -Ddai.url=http://localhost:8080/wsrf/services/ogsadai/MyDataService
                    -Ddai.resource.id=MySQLResource
                    -Ddai.action=examples/GDSPerform/JDBC/query/select1Row.xml </screen>
            </listitem>
            <listitem>The Perform document will be forwarded to the data service and executed by the specified data service resource. For example:
                
                <screen> [echo] Executing Perform document on resource One...
                    [java] Contacting ... http://localhost:8080/wsrf/services/ogsadai/MyDataService
                    [java] Service version: OGSA-DAI WSRF 1.0
                    [java] Number of resources: 2
                    [java] Resource: MySQLResource
                    [java] Resource: AnotherResource
                    [java] Data Service Resource: MySQLResource
                    [java] About to invoke Perform...
                    [java] Perform completed!
                    [java] Response: 
                    [java] &lt;?xml version="1.0" encoding="UTF-8"?&gt;
                    [java] &lt;ns1:response xmlns:ns1="http://ogsadai.org.uk/namespaces/2005/03/types"&gt;
                    [java] &lt;request status="COMPLETED"
                    xmlns="http://ogsadai.org.uk/namespaces/2005/03/service/types"/&gt;
                    ...</screen></listitem>
        </itemizedlist>
        
        <note><simpara>As an alternative to setting CATALINA_HOME or GLOBUS_LOCATION you can specify the Tomcat or GT4 locations using the -Dtomcat.dir=/path/to/Tomcat/directory or -Dgt.dir=/path/to/Globus/directory flags respectively.</simpara></note> 
    </section>
    
    <section id="s-ogsadai-admin-deploying-configuring"> <title>Configurable Data Services</title>
        
        <para>Configurable data services are a special type of data service. Asides from all the operations and capabilities offered by services a configurable data service provides operations allowing the state of the service or the data service resources it exposes to be updated while the service is running.</para>
        
        <para>These operations are intended for use by service deployers rather than clients of the service.</para>
        <section><title>Configuration Operations</title>
            
            <section><title>The Deploy Operation</title>
                
                <para> This operation is not directed at a specific data service resource. Instead it contains the name of a data service resource which the data service is to expose. Upon completion of the operation clients will be able to access the named data service resource via the service.</para>
                
                <para> It is the responsibility of the service deployer to ensure that the information required to configure the data service resource is available within the Web service container hosting the service.</para>
            </section>
            <section><title> The UpdateRoleMaps Operation</title>
                
                <para> This operation is directed at a specific data service resource - (specified within the WS-Addressing Endpoint Reference). The operation requests that a data service resource re-read its role maps file which resides on the server.</para>
                
                <para> This operation allows service deployers to change the list of clients authorised to access a data resource known to a data service resource and then to ensure that these changes take force immediately. </para>
            </section>
        </section>
    </section>
    
    <section id="s-ogsadai-admin-deploying-undeploying"> <title>Undeploying OGSA-DAI WSRF</title>
        
        <para> The OGSA-DAI WSRF binary distribution can be undeployed from the GT4 container or Apache Tomcat:</para>
        
        <itemizedlist>
            <listitem>Either via the Command-line</listitem>
            <listitem>Or using a GUI</listitem>
        </itemizedlist>
        
        <para> Undeployment erases all OGSA-DAI XML Schema, OGSA-DAI-specific JAR files and configuration files from the destination.</para>
        <section><title> Undeploying OGSA-DAI WSRF via the Command-line</title>
            <section><title> Undeploying OGSA-DAI WSRF from GT4</title>
                
                <para> To undeploy OGSA-DAI WSRF from GT4:</para>
                
                <itemizedlist>
                    <listitem>Set a GLOBUS_LOCATION environment variable to point to the location of your GT4 distribution. For example, under UNIX, enter:
                        
                        <screen> $ export GLOBUS_LOCATION=/path/to/Globus/directory</screen></listitem>
                    
                    <listitem>Run the following from within the OGSA-DAI binary distribution directory:
                        
                        <screen> $ ant undeployGT4</screen></listitem>
                </itemizedlist>
                
                <para> OGSA-DAI WSRF will then be undeployed.</para>
            </section>
            <section><title>Undeploying OGSA-DAI WSRF from Tomcat</title>
                
                <para> To undeploy OGSA-DAI WSRF from Tomcat:</para>
                
                <itemizedlist>
                    <listitem> Set a CATALINA_HOME environment variable to point to the location of Tomcat. For example, under UNIX, enter:
                        
                        <screen> $ export CATALINA_HOME=/path/to/Tomcat/directory</screen></listitem>
                    
                    <listitem>Run the following from within the OGSA-DAI binary distribution directory:
                        
                        <screen> $ ant undeployTomcat</screen></listitem></itemizedlist>
                
                <para>OGSA-DAI WSRF will then be undeployed from Tomcat.</para>
                
                <note><simpara>As an alternative to setting CATALINA_HOME you can specify the Tomcat location at the command-line as follows:</simpara>
                    
                    <screen> $ ant undeployTomcat -Dtomcat.dir=/path/to/Tomcat/directory</screen></note>
            </section>
        </section>
        <section> <title>Undeploying OGSA-DAI WSRF using a GUI</title>
            
            <section> <title>Undeploying OGSA-DAI WSRF from GT4</title>
                
                <para> To undeploy OGSA-DAI WSRF from GT4:</para>
                
                <itemizedlist>
                    <listitem>Run the following from within the OGSA-DAI binary distribution directory:
                        
                        <screen> $ ant guiUndeployGT4</screen></listitem>
                    
                    <listitem>A GUI will appear and you can select your GT4 distribution by pressing the Select... button. If GLOBUS_LOCATION is set then this will be offered as the default selection.</listitem>
                    <listitem> When you are happy with the Path press Next.</listitem>
                    <listitem>You will now be requested to press Next so that the tool can deploy OGSA-DAI WSRF. If any problems occur then the tool will notify you of these.</listitem>
                    <listitem>When the undeployment has completed a completion window will be displayed. Press Finish to exit the tool.</listitem>
                </itemizedlist>
            </section>
            
            <section><title>Undeploying OGSA-DAI WSRF from Tomcat</title>
                
                <para> To undeploy OGSA-DAI WSRF from Tomcat:</para>
                
                <itemizedlist>
                    <listitem>Run the following from within the OGSA-DAI binary distribution directory:
                        
                        <screen>$ ant guiUndeployTomcat</screen></listitem>
                    
                    <listitem>A GUI will appear and you can select your Tomcat distribution by pressing the Select... button. If CATALINA_HOME is set then this will be offered as the default selection.</listitem>
                    <listitem>When you are happy with the Path press Next.</listitem>
                    <listitem>You will now be requested to press Next so that the tool can deploy OGSA-DAI WSRF. If any problems occur then the tool will notify you of these.</listitem>
                    <listitem> When the undeployment has completed a completion window will be displayed. Press Finish to exit the tool.</listitem>
                </itemizedlist>
            </section>
        </section>
    </section>
    <section id="s-ogsadai-admin-deploying-where">
        <title>Where Does Stuff Go?</title>
        
        <para>This section describes the locations of OGSA-DAI related files after deployment on Tomcat or GT4.</para>
        
        <para> Under GT4, OGSA-DAI resides in the following places:</para>
        <itemizedlist>
            <listitem>share/schema/ogsadai/ - OGSA-DAI XML Schema and WSDL.</listitem>
            <listitem>lib/ - OGSA-DAI JAR files.</listitem>
            <listitem>etc/ogsadai_wsrf/ - OGSA-DAI configuration files - see below.</listitem>
        </itemizedlist>
        <para> Under Tomcat, OGSA-DAI resides in the following places:</para>
        
        <itemizedlist>
            <listitem>webapps/wsrf/share/schema/ogsadai/ - OGSA-DAI XML Schema and WSDL.</listitem>
            <listitem>webapps/wsrf/WEB-INF/lib/ - OGSA-DAI JAR files.</listitem>
            <listitem>webapps/wsrf/WEB-INF/etc/ogsadai_wsrf/ - OGSA-DAI configuration files - see below.</listitem>
        </itemizedlist>
        <para> The OGSA-DAI WSRF configuration files residing in the etc/ogsadai_wsrf directories are as follows:</para>
        
        <itemizedlist>
            <listitem>server-config.wsdd - deployment descriptors for the current OGSA-DAI services.</listitem>
            <listitem>jndi-config.xml - JNDI deployment descriptors for the current OGSA-DAI services (see the GT4 documentation for more information).</listitem>
            <listitem>Data service resource files for each current data service. There will be one of these XML files for each current OGSA-DA service. These files maintain a list of the current data service resources for each data service. The file name is derived from the service path e.g. a service with relative service path ogsadai/DataService has a file _ogsadai_DataService.dsr.xml.</listitem>
            <listitem>Data service resource directories. There is one such directory for each deployed data service resource - the directory shares the name of the data service resource e.g. MyRelationalResource Each directory contains:
                
                <itemizedlist> o dataResourceConfig.xml - data resource configuration file for the data service resource.
                    <listitem>activityConfig.xml - activity configuration file for the data service resource.</listitem>
                    <listitem>DatabaseRoles.xml - roleMaps file for the data service resource.</listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>
    </section>
    
    <!-- This is the end tag for the Deploying section -->
</section>

<section id="s-ogsadai-admin-testing"><title>Testing</title>
    <para>Please see the deployment section for information on testing and configuring OGSA-DAI.</para>
</section>

<section id="s-ogsadai-admin-security_considerations"><title>Security considerations</title>
    &OGSA_DAI_Security_Considerations_Frag;
</section>

<section id="s-ogsadai-admin-troubleshooting"><title>Troubleshooting</title>
    <para>Generating verbose log output is a critical aid in troubleshooting of the DRS and is useful 
        when communicating problems to Globus support lists. To increase logging detail, add the following 
        line to the <computeroutput>$GLOBUS_LOCATION/container-log4j.properties</computeroutput> file.</para>
    <screen>
        ...
        log4j.category.org.globus.replica=DEBUG
        ...
    </screen>
    <section id="s-ogsadai-admin-troubleshooting-sqlexception">
        <title>I am using MySQL and keep on getting a java.sql.SQLException: Cannot connect to MySQL server on localhost:3306 exception - what is the problem?</title>
        
        <para>The MySQL JDBC driver recommended in the OGSA-DAI documentation is not compatible with the latest versions of MySQL. This is the case for MySQL 4.1.6 and 4.1.7 and may be the case for other versions. This problem usually causes the following error message to be logged:</para>
        
        <screen>java.sql.SQLException: Cannot connect to MySQL server on localhost:3306.</screen>
    </section>
    <section id="s-ogsadai-admin-troubleshooting-mysqlrunning">
        <title>Is there a MySQL server running on the machine/port you are trying to connect to? (java.lang.NumberFormatException)</title>
        
        <para>To address this problem all you need to do is use a newer version of the MySQL JDBC driver JAR which can be downloaded from:</para>
        
        <para> <ulink url="http://www.mysql.com/products/connector/j/">http://www.mysql.com/products/connector/j/</ulink></para>
        
        <para> If you have already deployed services using the incompatible JAR, follow these steps:</para>
        
        <itemizedlist> 
            <listitem>Stop your container.</listitem>
            <listitem>Replace the JAR file in the lib directory in the container. See Where Does Stuff Go? above.</listitem>
            <listitem>Restart the container.</listitem>
        </itemizedlist>
    </section>
    
    <section id="s-ogsadai-admin-troubleshooting-exception">
        <title>Why do I get Exception in thread "main" java.lang.IllegalAccessError: tried to access field...?</title>
        
        <para> This error can arise due to clashes of Xalan shipped with certain versions of Java and that shipped with the 
         Globus Toolkit. Please see the OGSA-DAI FAQ at <ulink url="http://www.ogsadai.org.uk/docs/current/doc/misc/FAQ.html#IllegalAccessError">http://www.ogsadai.org.uk/docs/current/doc/misc/FAQ.html#IllegalAccessError</ulink> for more information.</para>
        
     <para> Please check up the OGSA-DAI website (<ulink url="http://www.ogsadai.org.uk">www.ogsadai.org.uk</ulink>) for any updates. In particular the OGSA-DAI FAQ although note that this also caters for the non-WSRF distributions of OGSA-DAI. </para>
    </section>
    </section>
    <!-- TODO Add troubleshooting help for problems related to:
    1) database setup
    2) security security
    3) RLS
    4) RFT
    -->

