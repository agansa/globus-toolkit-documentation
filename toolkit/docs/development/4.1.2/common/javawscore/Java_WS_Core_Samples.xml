<title> GT 4.0 Samples for Java WS Core</title>

<section id="s-javawscore-Core_Samples-counter"><title>Counter Sample</title>

<para>
Using <computeroutput>counter-client</computeroutput>.
</para>

<informaltable frame="none">  
<tgroup cols="2"><tbody>

  <row valign="top">
   <entry>1.</entry>
   <entry><para>Change to <computeroutput>$GLOBUS_LOCATION</computeroutput> directory:</para>
    <screen> $ cd $GLOBUS_LOCATION</screen>
  </entry>
 </row>

  <row valign="top">
    <entry>2.</entry>
    <entry><para>Start the container by running:</para>
      <screen> $ bin/globus-start-container -nosec</screen>
   </entry>
  </row>

  <row valign="top">
    <entry>3.</entry>
    <entry><para>In another window, run:</para>
      <screen> $ bin/counter-client -s http://localhost:8080/wsrf/services/CounterService</screen>
    <para>As a result you should see something like the following:</para>
    <screen>
 $ bin/counter-client -s http://localhost:8080/wsrf/services/CounterService
   Counter service: http://localhost:8080/wsrf/services/CounterService
   Got notification with value: 3
   Counter has value: 3
   Got notification with value: 13</screen>
   <para>
     Please note if secure container is used (started without the <computeroutput>-nosec</computeroutput> argument) please make sure to pass the correct service url (https protocol, right port number) to <computeroutput>counter-client</computeroutput> and add <computeroutput><ulink url="Java_WS_Core_Public_Interfaces.html#common">-z</ulink></computeroutput> argument at the end of the command line. For example:
  </para>
  <screen> $ bin/counter-client -s https://localhost:8443/wsrf/services/CounterService -z none</screen>
  <para>
   The <computeroutput>-z none</computeroutput> option disables client-side authorization. By default the client performs <emphasis>host</emphasis> authorization and if the server is not running with host credentials the client authorization will fail. Also, the server must be properly configured to authorize the client. Please see the security documentation for details.
   </para>
   </entry>
  </row>

</tbody></tgroup>
</informaltable>

<para>
Using <computeroutput>counter-create</computeroutput>, <computeroutput>counter-add</computeroutput> clients.
</para>


<informaltable>
<tgroup cols="2"><tbody>

 <row valign="top">
   <entry>1.</entry>
   <entry><para>Change to <computeroutput>$GLOBUS_LOCATION</computeroutput> directory:</para>
    <screen> $ cd $GLOBUS_LOCATION</screen>
  </entry>
 </row>

  <row valign="top">
    <entry>2.</entry>
    <entry><para>Start the container by running:</para>
      <screen> $ bin/globus-start-container -nosec</screen>
   </entry>
  </row>

  <row valign="top">
    <entry>3.</entry>
    <entry><para>In another window, run:</para>
      <screen> $ bin/counter-create -s http://140.221.36.11:8080/wsrf/services/CounterService > epr</screen>
    <para>If successful, a new counter resource will be created and the endpoint information of that resource will be saved in the file called <computeroutput>epr</computeroutput>.
    That <computeroutput>epr</computeroutput> file can be passed to a number of the basic <computeroutput>wsrf-*</computeroutput> and <computeroutput>wsn-*</computeroutput> clients using the <computeroutput><ulink url="Java_WS_Core_Public_Interfaces.html#common">-e</ulink></computeroutput> option.
    </para>
   <para>
     Please note if secure container is used (started without the <computeroutput>-nosec</computeroutput> argument) please make sure to pass the correct service url (https protocol, right port number) to <computeroutput>counter-create</computeroutput> and add <computeroutput><ulink url="Java_WS_Core_Public_Interfaces.html#common">-z</ulink></computeroutput> argument to the command line. For example:
  </para>
  <screen> $ bin/counter-create -s https://localhost:8443/wsrf/services/CounterService -z none > epr</screen>

    </entry>
  </row>

  <row valign="top">
    <entry>4.</entry>
    <entry><para>In the same window, run (a couple of times):</para>
      <screen> $ bin/counter-add -e epr 2</screen>
    <para>As a result you should see something like the following:</para>
    <screen> $ bin/counter-add -e epr 2
   2          
 $ bin/counter-add -e epr 2
   4</screen>
   <para>
    Please note that if secure container was used you might need to add <computeroutput><ulink url="Java_WS_Core_Public_Interfaces.html#common">-z</ulink></computeroutput> argument to the command line. For example:
   </para>
   <screen> $ bin/counter-add -e epr -z none 2</screen>
    </entry>
  </row>

</tbody></tgroup>
</informaltable>
</section>




