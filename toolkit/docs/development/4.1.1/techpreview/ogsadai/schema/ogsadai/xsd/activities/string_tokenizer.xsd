<?xml version="1.0" encoding="UTF-8"?>
<!-- (c) International Business Machines Corporation, 2002 - 2004.--> 
<!-- (c) University of Edinburgh, 2002 - 2004.-->
<!-- See OGSA-DAI-Licence.txt for licencing information.-->

<xsd:schema targetNamespace="http://ogsadai.org.uk/namespaces/2004/09/service/types"
  xmlns:gds="http://ogsadai.org.uk/namespaces/2004/09/service/types"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="qualified">

  <!--
    Import the schema containing the basic grid data service types.
    Note: the schemaLoaction attribute is currently set to a relative 
    location that assumes this file is placed in the activities schema 
    directory.
  -->
       
  <xsd:include schemaLocation="../../types/data_service_types.xsd"/>

  <!--
    Describe the structure of the stringTokenizer element by defining
    a complex type named StringTokenizerType.
  -->

  <xsd:complexType name="StringTokenizerType">
    <xsd:complexContent>
      <xsd:extension base="gds:ActivityType">
        <xsd:sequence>

          <!-- The stream of input data to tokenize. -->
          
          <xsd:element name="stringBlocksInput" minOccurs="1" maxOccurs="1">
            <xsd:complexType mixed="true">
              <xsd:complexContent>
                <xsd:extension base="gds:ActivityInputType"/>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>

          <!-- The delimiter(s) to tokenize around. -->
          
          <xsd:element name="delimiters" minOccurs="0" maxOccurs="1">
            <xsd:complexType>
              <xsd:attribute name="value" use="required">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string"/>
			    </xsd:simpleType>
              </xsd:attribute>
            </xsd:complexType>
          </xsd:element>

          <!-- The stream of output tokens that the activity will generate. -->
          
          <xsd:element name="stringTokensOutput" minOccurs="1" maxOccurs="1">
            <xsd:complexType>
              <xsd:complexContent mixed="true">
                <xsd:extension base="gds:ActivityOutputType"/>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>

        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <!-- 
    Define the stringTokenizer activity element and reference the
    StringTokenizerType described above.
  -->

  <xsd:element name="stringTokenizer" type="gds:StringTokenizerType" substitutionGroup="gds:activity"/>

</xsd:schema>