<chapter id="c-install">
	<title>Installing GT 4.0</title>

    <orderedlist>
        <listitem>
            <para>
                Create a user named "globus". This
                non-privileged user will be used to
                perform administrative tasks such as
                starting and stopping the container,
                deploying services, etc.   Pick an
		installation directory, and make sure this
                account has read and write permissions
                in the installation directory.
            </para>
	    <tip><para>You might need to create the target directory
			    as root, then chown it to the globus user:
<screen>
# mkdir /usr/local/globus-4.0.0
# chown globus:globus /usr/local/globus-4.0.0</screen>
</para>
</tip>
            <important><para>
                If for some reason you do 
                <emphasis>not</emphasis> create a user named "globus", be 
                sure to run the installation as a
                <emphasis>non-root</emphasis> user.
                In that case, make sure to pick an install
                directory that your user account has write access to.
                </para>
            </important>
        </listitem>
        <listitem>
            <para>
		    Download the required software noted 
		    in <xref linkend="c-prereq"/>.
            </para>
	    <tip>
            <para>
                Be aware that Apache Ant will use the Java
                referred to by JAVA_HOME,
                <emphasis>not</emphasis> necessarily the
                first Java executable on your PATH. Be sure to
                set JAVA_HOME to the top-level directory of your
                Java installation before installing.
	    </para>
	    <para>
		Also, check the <xref linkend="s-platform"/>
		if your OS includes ant already.  Your
		<filename>/etc/ant.conf</filename> is probably
		configured to use gcj, which will fail
		to compile the Toolkit.
            </para>
            </tip>
        </listitem>
        <listitem>
            <para>
                In this guide we will assume that you are installing
                to <filename>/usr/local/globus-4.0.0</filename>, but you 
                may replace <filename>/usr/local/globus-4.0.0</filename>
                with whatever directory you wish to install to.
            </para>
            <para>As the globus user, run:</para>
            <screen>globus$ export GLOBUS_LOCATION=<replaceable>/usr/local/globus-4.0.0</replaceable>
globus$ ./configure --prefix=$GLOBUS_LOCATION</screen>
            <para>
                You can use command line arguments to ./configure 
                for a more custom install.  Here are the lines to enable
                features which are disabled by default:
            </para>
            <programlisting>
Optional Features:
  --enable-prewsmds       Build pre-webservices mds. Default is disabled.
  --enable-wsgram-condor  Build GRAM Condor scheduler interface. Default is disabled.
  --enable-wsgram-lsf     Build GRAM LSF scheduler interface. Default is disabled.
  --enable-wsgram-pbs     Build GRAM PBS scheduler interface. Default is disabled.
  --enable-i18n           Enable internationalization. Default is disabled.
  --enable-drs            Enable Data Replication Service. Default is disabled.
  [...]
Optional Packages:
  [...]
  --with-iodbc=dir        Use the iodbc library in dir/lib/libiodbc.so.
                          Required for RLS builds.
  --with-gsiopensshargs="args"
                          Arguments to pass to the build of GSI-OpenSSH, like
                          --with-tcp-wrappers
</programlisting>
<para>
	For a full list of options, see <command>./configure --help</command>.
	For a list of GSI-OpenSSH options, see <xref linkend="s-openssh-admin-configure"/>.
        For more information about our packaging, see <xref linkend="packaging"/>.
</para>
        </listitem>

        <listitem>
            <para>
                Run:
            </para>
            <screen>globus$ make</screen>
            <para>
                Note that this command can take several hours to complete.
                If you wish to have a log file of the build, use 
                <command>tee</command>:
            </para>
            <screen>globus$ make 2>&amp;1 | tee build.log</screen>
            <para>
                The syntax above assumes a Bourne shell. If you are
                using another shell, redirect stderr to stdout and
                then pipe it to <command>tee</command>.
            </para>
        </listitem>

	<listitem>
		<para>
			Finally, run:
		</para>
		<screen>globus$ make install</screen>
		<para>
			This completes your installation.  Now
			you may move on to the configuration
			sections of the following chapters.
                <para>
			We recommend that you install any security
                        advisories available for your installation,
which are available from the <ulink url="http://www.globus.org/toolkit/advisories.html">
			Advisories page</ulink>.  You may also
be interested in subscribing to some <ulink url="http://www.globus.org/toolkit/support.html#mailinglists">mailing lists</ulink> for general discussion
and security-related announcements.
		</para>
	</listitem>
    </orderedlist>
    <para>
	    Your next step is to setup security, which
	    includes picking a CA to trust,
	    getting host certificates, user certificates, 
	    and creating a grid-mapfile.  The next three
	    chapters cover these topics.
    </para>
    <para>
	    With security setup, you may start a GridFTP server, 
	    configure a database for RFT, and configure WS-GRAM.
	    You may also start a GSI-OpenSSH daemon, setup
	    a MyProxy server, run RLS, and use CAS.  The
	    following chapters will explain how to configure
	    these technologies.  If you follow the chapters
	    in order, you will make sure of performing tasks
	    in dependency order.
    </para>
</chapter>
