<?xml version='1.0' encoding='UTF-8'?>

<refentry id="cas-proxy-init">

  <refmeta>

    <refentrytitle>cas-proxy-init</refentrytitle>

    <manvolnum>1</manvolnum>

  </refmeta>

  <refnamediv>

    <refname>cas-proxy-init</refname>

    <refpurpose>Generate a CAS proxy</refpurpose>

  </refnamediv>

  <refsynopsisdiv>

    <cmdsynopsis>

      <command>cas-proxy-init</command>

    </cmdsynopsis>

  </refsynopsisdiv>

  <refsect1><title>Tool description</title>

    <para>The <command>cas-proxy-init</command> command contacts a CAS server, obtains an
    assertion for the user, and embeds it in a credential. This
    credential can be used to access CAS-enabled services.</para>

  </refsect1>

  <refsect1><title>Command syntax</title>

    <screen><prompt>casAdmin$</prompt> <command>cas-proxy-init [<option><link linkend="cas-proxy-inity-common-options">options</link></option>] [ -t <replaceable>tag</replaceable> | -p <replaceable>proxyfile</replaceable>]</command></screen>

    <table><title>cas-proxy-init Options</title>

      <tgroup cols="2">

        <tbody>

          <row>

            <entry>

              <para><emphasis>-p</emphasis> <emphasis>proxyfile</emphasis></para>

            </entry>

            <entry><para>Specify the file in which to store the CAS credential. Cannot be used with the <emphasis>-t</emphasis> option.</para></entry>

          </row>

          <row>

            <entry>

              <para><emphasis>-t</emphasis> <emphasis>tag</emphasis></para>

            </entry>

            <entry><para>Choose a filename in which to store the CAS credential based on the value <emphasis>tag</emphasis>. Cannot be used with the <emphasis>-p</emphasis> option.</para></entry>

          </row>

          <row>

            <entry>

              <para><emphasis>-c</emphasis> <emphasis>url</emphasis></para>

            </entry>

            <entry>

              <para>Contact URL for the CAS server. This typically looks like 

  <screen>http://<emphasis>Host</emphasis>:<emphasis>Port</emphasis>/wsrf/services/CASService</screen>where <emphasis>Host</emphasis> and <emphasis>Port</emphasis> are the host and port where

  the container with the CAS service is running.

   </para>

            </entry>

          </row>

          <row>

            <entry>

              <para><emphasis>-s</emphasis> <emphasis>server_identity</emphasis></para>

            </entry>

            <entry>

              <para>When doing mutual authentication with the CAS server,

  expect <emphasis>server_identity</emphasis> as the remote identity.</para>

            </entry>

          </row>

          <row>

            <entry>

              <para><emphasis>-f</emphasis> <emphasis>policy_file</emphasis></para>

            </entry>

            <entry>

              <para>Generate a CAS credential that includes only those permissions

specified in file <emphasis>policy_file</emphasis> (the default is to generate a

credential with all the user&apos;s permissions). Details about the template of the file is provided at end of this table.</para>

            </entry>

          </row>

          <row>

            <entry>

              <para><emphasis>-l</emphasis> <emphasis>hours</emphasis></para>

            </entry>

            <entry>

              <para>Generate a credential which has an assertion with a lifetime of <emphasis>hours</emphasis>

  hours. This is just a request for lifetime, but may be overruled by the CAS server, if the request exceeds a set maximum for the lifetime of assertions it issues.</para>

            </entry>

          </row>

          <row>

            <entry>

              <para><emphasis>-m</emphasis> <emphasis>messageType</emphasis></para>

            </entry>

            <entry>Used to set the chosen security mechanism. It can be set to &apos;msg&apos; for Secure Message, &apos;conv&apos; for Secure Conversation and &apos;trans&apos; for <glossterm baseform="transport-level security">Transport security</glossterm>. If not set and the server URL starts with &apos;https&apos;, Transport Security is used, otherwise Secure Message is used. </entry>

          </row>

          <row>

            <entry>

              <para><emphasis>-n</emphasis> <emphasis>protectionType</emphasis></para>

            </entry>

            <entry>Used to set the protection type. Can be set to &apos;sig&apos; or &apos;enc&apos; to indicate signature or encryption. Defaults to signature. </entry>

          </row>
          
        </tbody>

      </tgroup>

    </table>
    
    <table id="cas-proxy-inity-common-options"><title>CAS Common Options</title>
      
      <tgroup cols="2">
        
        <tbody>
          
          
          &WS_AA_CAS_Interface_Commandline_Common_Options_Frag;
          
        </tbody>
        
      </tgroup>
      
    </table>

    
    <refsect2 id="cas-proxy-init-specific-permissions"><title>Requesting specific permissions from the CAS server</title>
    <para>It is possible to request specific permissions from the CAS server

using the <emphasis>-f</emphasis> option. This option causes <emphasis>cas-proxy-init</emphasis>

to read a set of requested rights from a file.</para>

    <para>This file should contain one or more resource identifiers:

<screen>Resource: <emphasis>ResourceNamesapce</emphasis>|<emphasis>ResourceName </emphasis></screen></para>

    <para>For each resource, there should be one or more action identifiers:

<screen><emphasis>serviceType action </emphasis></screen></para>

    <para>For example, if the client needed assertions for



&quot;file/read&quot; service/action for resource

&quot;ftp://sample.org&quot; and &quot;ftp://sample3.org&quot;, both

in &quot;FTPNamespace&quot; and &quot;directory/read&quot; and

&quot;directory/write&quot; permissions on the former resource only,

the policy file should have the following entries:



<screen>Resource: FTPNamespace|ftp://sample1.org

file read

directory read

directory write

Resource: FTPNamespace|ftp://sample3.org

file read</screen></para>

    <para>To indicate any resource, the following wildcard notation should

be used:

<screen>uri:samlResourceWildcard</screen></para>

    <para>To indicate any action, the following wildcard notation for

serviceType and action should be used. Note that this should be the

first (and clearly the only action) in the list of action

specified. All other actions in the list are ignored and if it is not

the first, it is not treated as a wildcard.

<screen>uri:samlActionNSWildcard uri:samlActionWildcard</screen></para>

    <para>For example, if the client needs assertions for all resources and

all actions, the policy file should look like:

<screen>Resource: uri:samlResourceWildcard

uri:samlActionNSWildcard uri:samlActionWildcard</screen></para>

    <para>If the client needs assertions for all actions on resource

&quot;FTPNamespace|ftp://sample1.org&quot;, the policy file should be

as follows:



<screen>Resource: FTPNamespace|ftp://sample1.org

uri:samlActionNSWildcard uri:samlActionWildcard</screen>

</para></refsect2>

  </refsect1>

</refentry>

        <refentry id="cas-wrap">
                <refmeta>
                        <refentrytitle>cas-wrap</refentrytitle>
                        <manvolnum>1</manvolnum>
                </refmeta>
                <refnamediv>
                        <refname>cas-wrap</refname>
                        <refpurpose>Runs program with CAS credentials</refpurpose>
                </refnamediv>
                <refsynopsisdiv><cmdsynopsis>
                                <command>cas-wrap</command>
                        </cmdsynopsis>
                </refsynopsisdiv>
          
          <refsect1><title>Tool description</title>
          
          <para>The <command>cas-wrap</command> command runs a grid-enabled program, causing it
          to use previously-generated CAS credentials.
          </para>
          </refsect1>
          
          <refsect1><title>Command syntax</title>
            
            <screen><prompt>casAdmin$</prompt> <command>cas-wrap [-t <replaceable>tag</replaceable> | -p <replaceable>proxyfile</replaceable>] <replaceable>command args</replaceable></command></screen>
            
          </refsect1>
          
          <refsect1><title>Command options</title>

          <para>The <command>cas-wrap</command> command invokes the given command with the given argument
           using the specified previously-generated CAS credential. For
            example: </para>
            
          <screen>% cas-wrap -t my-community gsincftp myhost.edu</screen>
            
            <para>will look for a credential generated by a previous execution of:</para>
            
            <screen>% cas-proxy-init -t my-community</screen>

            <para>and then set the environment to use that credential while
              running the command:</para>
            
            <screen>% gsincftp myhost.edu</screen>
            
            <para>The second form should be used if <command>cas-proxy-init </command> was
              run with the <option>-p</option> option. For example:</para>
            
            <screen>% cas-wrap -p /path/to/my/cas/credential gsincftp myhost.edu</screen>
            
            <para>will look for a credential generated by a previous
              execution of:</para>

             <screen>% cas-proxy-init -p /path/to/my/cas/credential </screen>
            
            <para>and then set the environment to use that credential while
              running the command:</para>
                        
            <screen>% gsincftp myhost.edu</screen>

            
            
            <table id="cas-wrap-common-options"><title>CAS Common Options</title>
              
              <tgroup cols="2">
                
                <tbody>
                  
                 
                  &WS_AA_CAS_Interface_Commandline_Common_Options_Frag;
                  
                </tbody>
                
              </tgroup>
              
            </table>

          
          </refsect1>
        </refentry>

        <refentry id="cas-enroll">
                <refmeta>
                        <refentrytitle>cas-enroll</refentrytitle>
                        <manvolnum>8</manvolnum>
                </refmeta>
                <refnamediv>
                        <refname>cas-enroll</refname>
                  <refpurpose>Enroll a CAS Object</refpurpose>
                </refnamediv>
                <refsynopsisdiv><cmdsynopsis>
                                <command>cas-enroll</command>
                        </cmdsynopsis>
                </refsynopsisdiv>

                <refsect1><title>Tool description</title>
                  <para>This command line client is used to enroll a CAS Object, which includes trust anchors, namespaces, objects and service types. 
                    
                    [mention general requirements - will get more specific when we drill down]</para>
                  

                </refsect1>
          
          <refsect1 id="cas-enroll-command-syntax"><title>Command syntax</title>
            <screen><prompt>casAdmin$</prompt> <command>cas-enroll [<replaceable><link linkend="cas-enroll-common-options">options</link></replaceable>] <replaceable>CAS Object</replaceable> <replaceable>userGpName</replaceable> <replaceable>parameters</replaceable></command></screen>


  
            <para>This following sections show the options and parameters available for enrolling each type of CAS Object.</para>
          
            <refsect2 id="cas-enroll-trust-anchors"><title>Enrolling Trust Anchors</title>
              
              <para>To enroll a trust anchor<indexterm><primary>enrolling in CAS</primary> <secondary>trust anchors</secondary></indexterm>, 
                the user must have cas/enroll_trustAnchor
                permission on that cas server object (that is, the user must have permission to
                perform the enroll_trustAnchor action on the CAS service type).  The
                enroll operation allows the user to choose a user group to which
                cas/grantAll permission on the enrolled object should be granted. The
                nickname should be unique across the CAS database and is used to refer
                to this trust anchor.</para>
              
              <para>To enroll trust anchors:</para>
              
              <screen>casAdmin$ cas-enroll [<emphasis><link linkend="cas-enroll-common-options">options</link></emphasis>] trustAnchor <emphasis>userGpName</emphasis> <emphasis>nickname</emphasis> <emphasis>authMethod</emphasis> <emphasis>authData</emphasis></screen>
              
            
            <table><title>cas-enroll Parameters for Trust Anchors</title>
                    
                    <tgroup cols="2">
                      
                      <tbody>
                        

                        
                        <row>
                          
                          <entry>
                            
                            <para><command>userGpName</command></para>
                            
                          </entry>
                          
                          <entry>
                            
                            <para>The user group to which cas/grantAll permission should be granted on this trust anchor entity.
                            </para>
                            
                          </entry>
                          
                        </row>
                        
                        <row>
                          
                          <entry>
                            
                            <para><command>nickname</command></para>
                            
                          </entry>
                          
                          <entry>
                            
                            <para>The trust anchor nickname.</para>
                            
                          </entry>
                          
                        </row>
                        
                        <row>
                          
                          <entry>
                            
                            <para><command>authMethod</command></para>
                            
                          </entry>
                          
                          <entry><para>The authentication method used by the trust anchor.</para></entry>
                          
                        </row>
                        
                        <row>
                          
                          <entry>
                            
                            <para><command>authData</command></para>
                            
                          </entry>
                          
                          <entry><para>Data used for authentication, typically the DN.</para></entry>
                          
                        </row>
                        
                      </tbody>
                      
                    </tgroup>
                    
            </table>
            
            </refsect2>
            
            <refsect2 id="cas-enroll-namespaces"><title>Enrolling Namespaces</title>
              
              <para>To enroll a namespace<indexterm><primary>enrolling in CAS</primary> <secondary>namespaces</secondary></indexterm>, 
                the user must have cas/enroll_namespace
              permission (that is, the user must have permission to perform the
              enroll_namespace action on the cas service type).  The enroll
              operation allows the user to choose a userGroup to have cas/grantAll
              permission on the enrolled object. The comparison algorithm specified
              should be the name of the Comparison class that needs to be used to
              compare objects that belong to this namespace. The nickname should be
                unique across the CAS database and is used to refer to this user.</para>
              
              <para>To enroll namespaces:</para>
              
              <screen>casAdmin$ cas-enroll [<emphasis><link linkend="cas-enroll-common-options">options</link></emphasis>] namespace <emphasis>userGpName</emphasis> <emphasis>nickname</emphasis> <emphasis>basename</emphasis> <emphasis>comparisonAlg</emphasis></screen>
              
              <para> Also two namespaces are added to the CAS database at boot up time,
                other than the inherent CAS Namespace.</para>
              
              <itemizedlist>
                <listitem><simpara>FTPDirectoryTree: Uses the WildCardComparison Algorithm and has
                  the base URL set to the current directory.</simpara></listitem>
                <listitem><simpara>FTPExact: Uses the ExactComparison Algorithm and has the base
                  URL set to the current directory.</simpara></listitem>
              </itemizedlist>
            
            <table><title>cas-enroll Parameters for Namespaces</title>
                
                <tgroup cols="2">
                  
                  <tbody>
                    
                    <row>
                      
                      <entry>
                        
                        <para><command>userGpName</command></para>
                        
                      </entry>
                      
                      <entry><para>The user group to which cas/grantAll permission should be
                        granted on this trust anchor entity</para>
                      </entry>
                      
                    </row>
                    
                    <row>
                      
                      <entry>
                        
                        <para><command>nickname</command></para>
                        
                      </entry>
                      
                      <entry><para>The nickname of the namespace.</para>
                        
                        <para>If the trust anchor nickname specified does not exist, an error is
                          <emphasis>not</emphasis> thrown. If the unenroll operation is successful all
                          policy data on that trust anchor is purged.</para></entry>
                      
                    </row>
                    
                    <row>
                      <entry>
                        <command>
                          basename
                        </command>
                      </entry>
                      <entry>
                        <para>
                          The base URL for the namespace.
                        </para>
                      </entry>
                    </row>
                    
                    <row>
                      <entry>
                        <command>
                          comparisonAlg
                        </command>
                      </entry>
                      <entry>
                        <para>
                          The comparison algorithm to be used. Unless the standard
                          comparison algorithms described below are used, the
                          fully qualified name of the class that needs to be used
                          should be given. The class needs to extend from the
                          abstract class
                          <computeroutput>org.globus.cas.impl.service.ObjectComparison</computeroutput>.
                        </para>
                        <para>        
                          The two comparison classes provided as a part of the distribution are:
                        </para>
                        <itemizedlist>
                          
                          <listitem><simpara>ExactComparison: This class does a case-sensitive exact comparison
                            of the object names. If comparisonAlg in the above method is set to
                            "ExactComparison", the class in the distribution is loaded and used.
                          </simpara></listitem>
                          <listitem><simpara>WildcardComparison: This class does wild card matching as described
                            in "CAS Simple Policy Language". (FIXME link to that doc) It assumes
                            that the wild card character is "*" and "/" is the file separator. If
                            comparisonAlg in the above method is set to "WildCardComparison", the
                            class in the distribution is loaded and used. </simpara></listitem>
                        </itemizedlist>
                        
                      </entry>
                    </row>
                   
                  </tbody>
                  
                </tgroup>
                
              </table>

            </refsect2>
            
            <refsect2 id="cas-enroll-objects"><title>Enrolling Objects</title>
              
              <para>To enroll an object<indexterm><primary>enrolling in CAS</primary> <secondary>objects</secondary></indexterm>, 
                the user must have cas/enroll_object permission
                (that is, the use must have permission to perform the enroll_object action on
                the cas service type).  The enroll operation allows the user to choose a
                userGroup to have cas/grantAll permission on the enrolled object. The
                name of the object and the the namespace this object belongs to
                identifies an object in the database and should be unique across the
                CAS database.</para>
              
              <para>To enroll objects:</para>
              
              <screen>casAdmin$ cas-enroll [<emphasis><link linkend="cas-enroll-common-options">options</link></emphasis>] object <emphasis>userGpName</emphasis> <emphasis>objectName</emphasis> <emphasis>namespaceNick</emphasis></screen>
            
            <table><title>cas-enroll Parameters for Objects</title>
              
              <tgroup cols="2">
                
                <tbody>
                  
                  <row>
                    
                    <entry>
                      
                      <para><command>userGpName</command></para>
                      
                    </entry>
                    
                    <entry><para>The user group to which cas/grantAll permission should be granted on this trust anchor entity.</para>
                      
                    </entry>
                    
                  </row>
                  
                  <row>
                    
                    <entry>
                      
                      <para><command>objectName</command></para>
                      
                    </entry>
                    
                    <entry><para>The name of the object.</para>
                      
                    </entry>
                    
                  </row>
                  
                  <row>
                    
                    <entry>
                      
                      <para><command>namespaceNick</command></para>
                      
                    </entry>
                    
                    <entry><para>The nickname of the namespace to which this object belongs.</para>
                      
                    </entry>
                    
                  </row>
                  
                </tbody>
                
              </tgroup>
              
            </table>  
            
            </refsect2>
            
            <refsect2 id="cas-enroll-service-types"><title>Enrolling Service Types</title>
              
              <para>To enroll a service type, the user must have cas/enroll_serviceType
                permission (that is, the user must have permission to perform the
                enroll_serviceType action on the cas service type).  The enroll
                operation allows the user to choose a userGroup to have cas/grantAll
                permission on the enrolled service type. The service type name should
                be unique across the CAS database.</para>
              
              <para>To enroll service types:</para>
              
              <screen>casAdmin$ cas-enroll [<emphasis><link linkend="cas-enroll-common-options">options</link></emphasis>] serviceType <emphasis>userGpName</emphasis> <emphasis>serviceTypeName</emphasis></screen>
              
            <table><title>cas-enroll Parameters for Service Types</title>
              
              <tgroup cols="2">
                
                <tbody>
                  
                  <row>
                    
                    <entry>
                      
                      <para><command>userGpName</command></para>
                      
                    </entry>
                    
                    <entry><para>The user group to which cas/grantAll permission should be granted on this trust anchor entity.</para>
                      
                    </entry>
                    
                  </row>
                  
                  <row>
                    
                    <entry>
                      
                      <para><command>serviceTypeName</command></para>
                      
                    </entry>
                    
                    <entry><para>The service type name.</para>
                      
                    </entry>
                    
                  </row>
                  
                </tbody>
                
              </tgroup>
              
            </table>
            </refsect2>
            
            <refsect2 id="cas-enroll-common-options"><title>Common Options</title>
              
            <table><title>CAS Common Options</title>
                
                <tgroup cols="2">
                  
                  <tbody>
                    
                    &WS_AA_CAS_Interface_Commandline_Common_Options_Frag;
                    
                  </tbody>
                  
                </tgroup>
                
              </table>
            </refsect2>
            
          </refsect1>   
  
        <refsect1><title>Example Usage</title>
          
          <para>Example of enrolling trust anchors:</para>
          
          <screen>FIXME</screen>
          
            <para>Example of enrolling namespaces:</para>

            <screen>FIXME</screen>
          
          <para>Example of enrolling objects<indexterm><primary>enrolling in CAS</primary> <secondary>objects</secondary></indexterm>:</para>
          
          <screen>FIXME</screen>
          
          <para>Example of enrolling service types:</para>
          
            <screen>FIXME</screen>
          
        </refsect1>
          
        </refentry>
        
        <refentry id="cas-remove">
          <refmeta>
                        <refentrytitle>cas-remove</refentrytitle>
                        <manvolnum>8</manvolnum>
                </refmeta>
                <refnamediv>
                        <refname>cas-remove</refname>
                        <refpurpose>Remove a CAS object from the database</refpurpose>
                </refnamediv>
                <refsynopsisdiv><cmdsynopsis>
                                <command>cas-remove</command>
                        </cmdsynopsis>
                </refsynopsisdiv>

          <refsect1><title>Tool description</title>
                  
                <para>FIXME - need general description</para>

                </refsect1>
          
          <refsect1><title>Command syntax</title>
            
            <screen><prompt>casAdmin$</prompt> <command>cas-remove [<replaceable><link linkend="cas-remove-common-options">options</link></replaceable>] <replaceable>type</replaceable> <replaceable>nickname</replaceable></command></screen>

            <para>This following sections show the options and parameters available for removing each type of CAS Object.</para>
            
            <refsect2 id="cas-remove-trust-anchors"><title>Removing Trust Anchors</title>
              
              <para>To remove a trust anchor<indexterm><primary>removing from CAS</primary> <secondary>trust anchors</secondary></indexterm>, the user must have cas/remove permission
                on that trust anchor.  The trust anchor must also be unused (that is, there may not be any users in the database that have this trust
                anchor or it may not be a part of any object group).</para>
              
              <para>To remove trust anchors:</para>
              
              <screen>casAdmin$ cas-remove [<emphasis><link linkend="cas-remove-common-options">options</link></emphasis>] trustAnchor <emphasis>nickname</emphasis></screen>
              
              <table><title>cas-remove Parameters for Trust Anchors</title>
                
                <tgroup cols="2">
                  
                  <tbody>
                    
                    <row>
                      
                      <entry>
                        
                        <para><emphasis>nickname</emphasis></para>
                        
                      </entry>
                      
                      <entry><para>The nickname of the trust anchor to be unenrolled.</para>
                        
                        <para>If the trust anchor nickname specified does not exist, an error is
                          <emphasis>not</emphasis> thrown. If the unenroll operation is successful all
                          policy data on that trust anchor is purged.</para></entry>
                      
                    </row>
                    
                    
                  </tbody>
                  
                </tgroup>
                
              </table>
            </refsect2>
            
            <refsect2 id="cas-remove-namespaces"><title>Removing Namespaces</title>
              
              <para>To remove a namespace, the user must have cas/remove permission on
                that namespace.  The namespace must also be unused&mdash;that is, there may
                not be any object in the database that belongs to this namespace.</para>
              
              <screen>casAdmin$ cas-remove [<emphasis><link linkend="cas-remove-common-options">options</link></emphasis>] namespace <emphasis>nickname</emphasis></screen>
              
              <table><title>cas-remove Parameters for Namespaces</title>
                
                <tgroup cols="2">
                  
                  <tbody>
                    
                    <row>
                      
                      <entry>
                        
                        <para><emphasis>nickname</emphasis></para>
                        
                      </entry>
                      
                      <entry><para>The nickname of the namespace to be unenrolled.</para>
                        
                        <para>If the namespace nickname specified does not exist, an error is
                          <emphasis>not</emphasis> thrown. If the unenroll operation is successful all
                          policy data on that trust anchor is purged.</para></entry>
                      
                    </row>
                    
                  </tbody>
                  
                </tgroup>
                
              </table>
              
            </refsect2>
            
            <refsect2 id="cas-remove-objects"><title>Removing Objects</title>
              
          <para>To remove an object the user must have cas/remove permission on
            that object.  The object must also be unused &mdash; that is, there may not
            be any object group in the database that this object belongs to.</para>
        
              <screen>casAdmin$ cas-remove [<emphasis><link linkend="cas-remove-common-options">options</link></emphasis>] object <emphasis>objName</emphasis> <emphasis>namespaceNick</emphasis></screen>
        
        <table>
            
            <title>cas-remove Parameters for Objects</title>
            
            <tgroup cols="2">
                
                <tbody>
                    
                    <row>
                        
                        <entry>
                            
                            <para><emphasis>objName</emphasis></para>
                            
                        </entry>
                        
                        <entry><para>The name of the object to be removed.</para>
                            
                        </entry>
                        
                    </row>
                    
                    <row>
                        
                        <entry>
                            
                            <para><emphasis>namespaceNick</emphasis></para>
                            
                        </entry>
                        
                        <entry><para>The nickname of the namespace to which this object belongs.</para>
                            
                            <para>If the object specified does not exist, an error is <emphasis>not</emphasis> 
                              thrown. If the remove operation is successful, all policy data on
                                that object is purged.</para>
                            
                        </entry>
                        
                    </row>
                    
                </tbody>
                
            </tgroup>
            
        </table>
              
              
            </refsect2>
            
            <refsect2 id="cas-remove-service-types"><title>Removing Service Types</title>
              
              <para>To remove a service type the user must have cas/remove permission
                on that service type.  The service type must also be unused&mdash;that is,
                there may not be any service type to action mapping.</para>
              
              <screen>casAdmin$ cas-remove [<emphasis><link linkend="cas-remove-common-options">options</link></emphasis>] serviceType <emphasis>serviceTypeName</emphasis></screen>
              
              <table><title>cas-remove Parameters for Service Types</title>
                
                <tgroup cols="2">
                  
                  <tbody>                    
                    
                    <row>
                      
                      <entry>
                        
                        <para><emphasis>serviceTypeName</emphasis></para>
                        
                      </entry>
                      
                      <entry><para>The service type name.</para>
                        
                        <para>If the service type specified does not exist, an error is <emphasis>not</emphasis> 
                          thrown. If the remove operation is successful, all policy data on that
                          service type is purged.</para>
                        
                      </entry>
                      
                    </row>
                    
                  </tbody>
                  
                </tgroup>
                
              </table>
            </refsect2>
            
            <refsect2 id="cas-remove-common-options"><title>Common Options</title>
              <table><title>CAS Common Options</title>
                
                <tgroup cols="2">
                  
                  <tbody>
                    
                    &WS_AA_CAS_Interface_Commandline_Common_Options_Frag;
                    
                  </tbody>
                  
                </tgroup>
                
              </table>
            </refsect2>
            
          </refsect1>   
          
          <refsect1><title>Example Usage</title>
            
            <para>Example of removing trust anchors:</para>
            
            <screen>FIXME</screen>
            
            <para>Example of removing namespaces:</para>
            
            <screen>FIXME</screen>
            
            <para>Example of removing objects<indexterm><primary>enrolling in CAS</primary> <secondary>objects</secondary></indexterm>:</para>
            
            <screen>FIXME</screen>
            
            <para>Example of removing service types:</para>
            
            <screen>FIXME</screen>
            
          </refsect1>

        </refentry>

  <refentry id="cas-action">
    <refmeta>
      <refentrytitle>cas-action</refentrytitle>
      <manvolnum>8</manvolnum>
    </refmeta>
    <refnamediv>
      <refname>cas-action</refname>
      <refpurpose>Maintains service types</refpurpose>
    </refnamediv>
    <refsynopsisdiv><cmdsynopsis>
      <command>cas-action</command>
    </cmdsynopsis>
    </refsynopsisdiv>
    
    <refsect1><title>Tool description</title>
      
      <para>Use this command to add an action mapping to a service type or remove an action mapping from a service type.</para>
      
      
      <para>To add an action mapping to a service type, the user must have
        cas/create_group_entry permission on the service type.</para>
      
      <para>To remove a service type action mapping the user must have
        cas/delete_group_entry permission on the service type.</para>
      
      <para>If the group member being removed does not exist, an error is
        <emphasis>not</emphasis> thrown.</para>
      
    </refsect1>
    
    <refsect1><title>Command syntax</title>
      
      <screen><prompt>casAdmin$</prompt> <command>cas-action [<replaceable><link linkend="cas-action-common-options">options</link></replaceable>] ['add' | 'remove'] <replaceable>serviceTypeName</replaceable> <replaceable>actionName</replaceable></command></screen>

      
      
        <table><title>cas-action Parameters</title>
            
            <tgroup cols="2">
                
                <tbody>        
                  
                  <row>
                    
                    <entry>
                      
                      <para><emphasis>add</emphasis></para>
                      
                    </entry>
                    
                    <entry><para>Adds the action to the service type.</para>
                      
                    </entry>
                    
                  </row>
                  
                  <row>
                    
                    <entry>
                      
                      <para><emphasis>remove</emphasis></para>
                      
                    </entry>
                    
                    <entry><para>Removes the action from the service type.</para>
                      
                    </entry>
                    
                  </row>
                  
                    <row>
                        
                        <entry>
                            
                            <para><emphasis>serviceTypeName</emphasis></para>
                            
                        </entry>
                        
                        <entry><para>The service type name.</para>
                            
                        </entry>
                        
                    </row>
                    
                    <row>
                        
                        <entry>
                            
                            <para><emphasis>actionName</emphasis></para>
                            
                        </entry>
                        
                        <entry><para>The action name.</para>
                            
                        </entry>
                      
                    </row>
                  
                </tbody>
              
            </tgroup>
          
        </table>
 
     
      <refsect2 id="cas-action-common-options"><title>Common Options</title>
        <table><title>CAS Common Options</title>
          
          <tgroup cols="2">
            
            <tbody>
              
              &WS_AA_CAS_Interface_Commandline_Common_Options_Frag;
              
            </tbody>
            
          </tgroup>
          
        </table>
      </refsect2>
      
    </refsect1>   
    
    
    
    <refsect1><title>Example Usage</title>
      
      <para>Example of adding an action mapping to a service type:</para>
      
      <screen>FIXME</screen>
      
      <para>Example of removing an action mapping from a service type:</para>
      
      <screen>FIXME</screen>
      
    </refsect1>
    
</refentry>
    
    <refentry id="cas-group-admin">
      <refmeta>
        <refentrytitle>cas-group-admin</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>cas-group-admin</refname>
        <refpurpose>Maintains user groups, object groups, or serviceAction groups</refpurpose>
      </refnamediv>
      <refsynopsisdiv><cmdsynopsis>
        <command>cas-group-admin</command>
      </cmdsynopsis>
      </refsynopsisdiv>
      
      <refsect1><title>Tool description</title>
        
        <para>Use <command>cas-group-admin</command> to create or delete user groups, object groups, or serviceAction groups. 
          Note: to add or delete entries to these groups, see [link to other clients].</para> 

      </refsect1>
      
      <refsect1><title>Command syntax</title>
        
        <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<replaceable><link linkend="cas-group-admin-common-options">options</link></replaceable>] <replaceable>type</replaceable>  <replaceable>action</replaceable> [<replaceable>command args</replaceable>]</command></screen>
        
        
       
        <refsect2 id="cas-group-admin-adding-user-group"><title>Adding user groups</title>
          
          <para>To create a new user group the user must have cas/create_user_group
            permission (that is, the user must have permission to perform the create_user_group
            action on the cas service type). The user group name should be unique
            across the CAS database. The create operation allows the user to
            choose a user group to have cas/grantAll permission on the created
            user group.  If the user group that is chosen to have cas/grantAll
            permission is the new group created, then the user making this request
            is added to the new group.</para>
          
          <para>To add a user group:</para>
          
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<option><link linkend="cas-group-admin-common-options">options</link></option>] user create <replaceable>userGpName</replaceable> <replaceable>groupName</replaceable> </command></screen>
          
          
          <table><title>cas-group-admin Options For Adding A New User Group</title>
            
            <tgroup cols="2">
              
              <tbody>                    
                
                <row>
                  
                  <entry>
                    
                    <para><emphasis>userGpName</emphasis></para>
                    
                  </entry>
                  
                  <entry><para>The user group to which cas/grantAll permission should be
                    granted on this trust anchor entity.</para>
                    
                  </entry>
                  
                </row>
                
                <row>
                  
                  <entry>
                    
                    <para><emphasis>groupName</emphasis></para>
                    
                  </entry>
                  
                  <entry><para>The name of the user group being created.</para>
                    
                  </entry>
                  
                </row>
                
              </tbody>
              
            </tgroup>
            
          </table>
          
         </refsect2>
        
        <refsect2 id="cas-group-admin-deleting-user-group"><title>Deleting user groups</title>
          
               <para>To delete a user group, the user must have cas/delete_user_group entry
            permission on that user group. The group must be empty and also must not be
            referenced from other entities in the database (for example, it should not
                 be a member of some object group).</para>
          
          <para>If the user group specified does not exist, an error is <emphasis>not</emphasis> thrown. If the delete operation is successful,  
            all policy data on that user group is purged.</para>
        
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<option><link linkend="cas-group-admin-common-options">options</link></option>] user delete <replaceable>groupName</replaceable></command></screen>

        
        <table>
            <title>cas-group-admin Options For Deleting A User Group</title>
            <tgroup cols="2">
                <tbody>                    
                    <row>
                        <entry>
                            <para><emphasis>groupName</emphasis></para>
                        </entry>
                        <entry><para>The name of the user group to be deleted.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        </refsect2>
        
        <refsect2 id="cas-group-admin-creating-object-group"><title>Creating An Object Group</title>
          
        <para>To create a new object group, the user must have
            cas/create_object_group permission (that is, the user must have permission to
            perform the create_object_group action on the CAS service type). The object
            group name should be unique across the CAS database. The create
            operation allows the user to choose a user group to have cas/grantAll
            permission on the created object group.</para>
        
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<option><link linkend="cas-group-admin-common-options">options</link></option>] object create <replaceable>userGpName</replaceable> <replaceable>groupName</replaceable></command></screen>
        
        <table>
            <title>cas-group-admin Options For Creating An Object Group</title>
            <tgroup cols="2">
                <tbody>  
                    <row>
                        <entry>
                            <para><emphasis>userGpName</emphasis></para>
                        </entry>
                        <entry><para>The user group to which cas/grantAll permission should be
                          granted on this object group.</para>
                        </entry>
                    </row>
                  <row>
                    <entry>
                      <para><emphasis>groupName</emphasis></para>
                    </entry>
                    <entry><para>The object group name.</para>
                    </entry>
                  </row>
                </tbody>
            </tgroup>
        </table>
        </refsect2>
        
        <refsect2 id="cas-group-admin-deleting-object-group"><title>Deleting An Object Group</title>
          
        <para> To delete an object group, the user must have cas/delete_user_group entry
          permission on that object group. The group must be empty.</para>
          
          <para>If the object group specified does not exist, an error is <emphasis>not</emphasis> thrown. If the delete operation is successful, all policy data on that object group is purged.</para>
        
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<option><link linkend="cas-group-admin-common-options">options</link></option>] object delete <replaceable>groupName</replaceable></command></screen>

        <table>
            <title>cas-group-admin Options For Deleting An Object Group</title>
            <tgroup cols="2">
                <tbody>  
                    <row>
                        <entry>
                            <para><emphasis>groupName</emphasis></para>
                        </entry>
                        <entry><para>The name of the object group to be deleted.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        
        </refsect2>
        
        <refsect2 id="cas-group-admin-creating-serviceAction-group"><title>Creating A Service/Action Group</title>
          
        <para>To create a new service/action group, the user must have
            cas/create_serviceAction_group permission (that is, the user must have
            permission to perform the create_serviceAction_group action on the CAS service
            type). The serviceAction group name should be unique across the CAS
            database. The create operation allows the user to choose a user group
            to have cas/grantAll permission on the created serviceAction group.</para>
        
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<option><link linkend="cas-group-admin-common-options">options</link></option>] serviceAction create <replaceable>userGpName</replaceable> <replaceable>groupName</replaceable></command></screen>
        
        <table>
            <title>cas-group-admin Options For Creating A Service/Action Group</title>
            <tgroup cols="2">
                <tbody>  
                    <row>
                        <entry>
                            <para><emphasis>userGpName</emphasis></para>
                        </entry>
                        <entry><para>The user group to which cas/grantAll permission should be
                          granted on this service/action group.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><emphasis>groupName</emphasis></para>
                        </entry>
                      <entry><para>The name of the service/action group being created.</para>
                      </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
          
        </refsect2>
        
        <refsect2 id="cas-group-admin-deleting-serviceAction-group"><title>Deleting A Service/Action Group</title>
          
       <para>To delete a service/action group, the user must have cas/delete_user_group
         entry permission on that service/action group. The group must be empty
            and also must not be referenced from any other entity in the
         database. For example, it should not be a member of some object group.</para>
          
          <para>If the service/action group specified does not exist, an error is
            <emphasis>not</emphasis> thrown. If the delete operation is successful, all
            policy data on that service/action group is purged.</para>
        
          <screen><prompt>casAdmin$</prompt> <command>cas-group-admin [<option><link linkend="cas-group-admin-common-options">options</link></option>] serviceAction delete <replaceable>groupName</replaceable></command></screen>

        <table>
            <title>cas-group-admin Options For Deleting A Service/Action Group</title>
            <tgroup cols="2">
                <tbody>  
                    <row>
                        <entry>
                            <para><emphasis>groupName</emphasis></para>
                        </entry>
                        <entry><para> The name of the service/action group to be deleted.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>        
          
        </refsect2>
        
        <refsect2  id="cas-group-admin-common-options"><title>Common Options</title>
          <table><title>CAS Common Options</title>
            
            <tgroup cols="2">
              
              <tbody>
                
                &WS_AA_CAS_Interface_Commandline_Common_Options_Frag;
                
              </tbody>
              
            </tgroup>
            
          </table>    
        </refsect2>
        
        
      </refsect1>   
      
      
      
      <refsect1><title>Example Usage</title>
        
        <para>Example of adding a user group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of deleting a user group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of adding an object group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of deleting an object group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of adding a service/action group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of deleting a service/action group:</para>
        
        <screen>FIXME</screen>
        
      </refsect1>
      
    </refentry>
    
    <refentry id="cas-group-add-entry">
      <refmeta>
        <refentrytitle>cas-group-add-entry</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>cas-group-add-entry</refname>
        <refpurpose>Adds CAS objects to CAS groups</refpurpose>
      </refnamediv>
      <refsynopsisdiv><cmdsynopsis>
        <command>cas-group-add-entry</command>
      </cmdsynopsis>
      </refsynopsisdiv>
      
      <refsect1><title>Tool description</title>
        
        <para>Use <command>cas-group-add-entry</command> to add users to a user group, objects to an object group, or service/actions to service/action groups. 
          Note: to add or delete groups, see [link to other clients].</para> 
        
      </refsect1>
      
      <refsect1><title>Command syntax</title>
        
        <screen><prompt>casAdmin$</prompt> <command>cas-group-add-entry [<replaceable><link linkend="cas-group-add-entry-common-options">options</link></replaceable>] <replaceable>type</replaceable>  [<replaceable>command args</replaceable>]</command></screen>
        
        
        
        <refsect2 id="cas-group-add-entry-user"><title>Adding Member To A User Group</title>
          
        <para>To add a member (in this case, a user) to a user group, the user must have
            cas/add_group_entry permission on that particular user group. Only
            user nicknames that exist in the CAS database can be valid members.</para>
        
        <screen><prompt>casAdmin$</prompt> <command>cas-group-add-entry [<option><link linkend="cas-group-add-entry-common-options">options</link></option>] user <replaceable>groupName</replaceable> <replaceable>nickname</replaceable></command></screen>

        <table>
            
            <title>cas-group-add-entry Options For Adding A User To A User Group</title>
            
            <tgroup cols="2">
                
                <tbody>                    
                    
                    <row>
                        
                        <entry>
                            
                            <para><emphasis>groupName</emphasis></para>
                            
                        </entry>
                        
                        <entry><para>The user group name to which the member needs to be added.</para>
                            
                        </entry>
                        
                    </row>
                    
                    <row>
                        
                        <entry>
                            
                            <para><emphasis>nickname</emphasis></para>
                            
                        </entry>
                        
                        <entry><para>The nickname of the user to be added to this group.</para>
                            
                        </entry>
                        
                    </row>
                    
                </tbody>
                
            </tgroup>
            
        </table>
          
        </refsect2>
        
        <refsect2 id="cas-group-add-entry-object"><title>Adding Member To An Object Group</title>
          
         <para>To add a member (an object group can have the following CasObjects
            as members: object, user, user group, service type, namespace or trust
            anchor) to an object group, the user must have cas/add_group_entry
            permission on that particular object group.</para>
        
        <screen><prompt>casAdmin$</prompt> <command>cas-group-add-entry [<option><link linkend="cas-group-add-entry-common-options">options</link></option>] object <replaceable>groupName</replaceable> <replaceable>objectSpecDesc</replaceable> <replaceable>objectSpec</replaceable></command></screen>
        
        <para>
            where:
        </para>
        
        <table>
            <title>cas-group-add-entry Options For Adding A Member To An Object Group</title>
            <tgroup cols="2">
                <tbody>  
                    <row>
                        <entry>
                            <para><emphasis>groupName</emphasis></para>
                        </entry>
                        <entry><para>The object group name to which the member needs to be added.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><emphasis>objectSpecDesc</emphasis></para>
                        </entry>
                        <entry><para>The type of CasObject. Can be one of the following options:</para>
                          <itemizedlist>
                            <listitem><simpara><option>trustAnchor</option></simpara></listitem>
                            <listitem><simpara><option>user</option></simpara></listitem>
                            <listitem><simpara><option>userGroup</option></simpara></listitem>
                            <listitem><simpara><option>object</option></simpara></listitem>
                            <listitem><simpara><option>namespace</option></simpara></listitem>
                            <listitem><simpara><option>serviceType</option></simpara></listitem>
                          </itemizedlist>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><emphasis>objectSpec</emphasis></para>
                        </entry>
                      <entry><para>The identifier for the CasObject the user is adding. Can be one of the following:</para>
                        <itemizedlist>
                          <listitem><simpara>nickname if adding a trustAnchor or user</simpara></listitem>
                          <listitem><simpara>groupName if adding a userGroup</simpara></listitem>
                          <listitem><simpara>objectNamespace objectName if adding an object</simpara></listitem>
                          <listitem><simpara>nickname if adding a namespace</simpara></listitem>
                          <listitem><simpara>serviceTypeName if adding a serviceType</simpara></listitem>
                        </itemizedlist>
                      </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
          
          
        </refsect2>
        
        <refsect2 id="cas-group-add-entry-serviceAction"><title>Adding Service/Action To A Service/Action Group</title>
          
       <para>To add a service/action to a serviceAction group, the user must have
            cas/add_group_entry permission on that particular serviceAction group
            (that is, the user must have permission to perform add_group_entry action on
            that service action group).</para>
        
          <screen><prompt>casAdmin$</prompt> <command>cas-group-add-entry [<option><link linkend="cas-group-add-entry-common-options">options</link></option>] serviceAction <replaceable>groupName</replaceable> <replaceable>serviceTypeName</replaceable> <replaceable>actionName</replaceable></command></screen>

        <table>
            <title>cas-group-add-entry Options For Adding A Service/Action To A Service/Action Group</title>
            <tgroup cols="2">
                <tbody>  
                    <row>
                        <entry>
                            <para><emphasis>groupName</emphasis></para>
                        </entry>
                        <entry><para> The user group name to which the member needs to be added.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><emphasis>serviceTypeName</emphasis></para>
                        </entry>
                        <entry><para>The service type name part of the mapping to be added to the group.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><emphasis>actionName</emphasis></para>
                        </entry>
                      <entry><para>The action name part of the mapping to be added to the group.</para>
                      </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
          
          
        </refsect2>
        
         
        <refsect2  id="cas-group-add-entry-common-options"><title>Common Options</title>
          <table><title>CAS Common Options</title>
            
            <tgroup cols="2">
              
              <tbody>
                
                &WS_AA_CAS_Interface_Commandline_Common_Options_Frag;
                
              </tbody>
              
            </tgroup>
            
          </table>    
        </refsect2>
        
        
      </refsect1>   
      
      
      
      <refsect1><title>Example Usage</title>
        
        <para>Example of adding a user to a user group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of adding a CAS object to an object group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of adding a service/action to a service/action group:</para>
        
        <screen>FIXME</screen>
        
      </refsect1>
      
    </refentry>
    
    <refentry id="cas-group-remove-entry">
      <refmeta>
        <refentrytitle>cas-group-remove-entry</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>cas-group-remove-entry</refname>
        <refpurpose>Removing CAS objects from CAS groups</refpurpose>
      </refnamediv>
      <refsynopsisdiv><cmdsynopsis>
        <command>cas-group-remove-entry</command>
      </cmdsynopsis>
      </refsynopsisdiv>
      
      <refsect1><title>Tool description</title>
        
        <para>Use <command>cas-group-remove-entry</command> to remove users from a user group, objects from an object group, or service/actions from a service/action groups. 
          Note: to add or delete groups, see [link to other clients].</para> 
        
      </refsect1>
      
      <refsect1><title>Command syntax</title>
        
        <screen><prompt>casAdmin$</prompt> <command>cas-group-remove-entry [<replaceable><link linkend="cas-group-remove-entry-common-options">options</link></replaceable>] <replaceable>type</replaceable>  [<replaceable>command args</replaceable>]</command></screen>
        
        <refsect2 id="cas-group-remove-entry-user"><title>Removing User From A User Group</title>
          
         <para>To remove a user from a user group, the user must have
           cas/remove_group_entry permission on that particular user group.</para>
          
          <para>If the group member being removed does not exist, an error is
            <emphasis>not</emphasis> thrown. </para>
        
        <screen><prompt>casAdmin$</prompt> <command>cas-group-remove-entry [<option><link linkend="cas-group-remove-entry-common-options">options</link></option>] user <replaceable>groupName</replaceable> <replaceable>nickname</replaceable></command></screen>

          <table>
            <title>cas-group-remove-entry Options For Removing A User From A User Group</title>
            <tgroup cols="2">
                <tbody>                    
                    <row>
                        <entry>
                            <para><emphasis>groupName</emphasis></para>
                        </entry>
                        <entry><para>The user group name from which the member needs to be removed.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><emphasis>nickname</emphasis></para>
                        </entry>
                        <entry><para>The nickname of the user to be removed from this group.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>

        </refsect2>
        
        <refsect2 id="cas-group-remove-entry-object"><title>Removing Member From An Object Group</title>
          
       <para>To remove an object from an object group the user must have
         cas/remove_group_entry permission on that particular object group:</para>
          
          <para>If the group member being removed does not exist, an error is
            <emphasis>not</emphasis> thrown.</para>
        
        <screen><prompt>casAdmin$</prompt> <command>cas-group-remove-entry [<option><link linkend="cas-group-remove-entry-common-options">options</link></option>] object <replaceable>groupName</replaceable> <replaceable>objectSpec</replaceable> <replaceable>objectSpecDesc</replaceable></command></screen>

        <table>
            <title>cas-group-remove-entry Options For Removing An Object From An Object Group</title>
            <tgroup cols="2">
                <tbody>  
                    <row>
                        <entry>
                            <para><emphasis>groupName</emphasis></para>
                        </entry>
                        <entry><para>The object group name from which the member needs to be removed.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><emphasis>objectSpecDesc</emphasis></para>
                        </entry>
                        <entry><para>The type of CasObject. Can be one of the following options:</para>
                          <itemizedlist>
                            <listitem><simpara><option>trustAnchor</option></simpara></listitem>
                            <listitem><simpara><option>user</option></simpara></listitem>
                            <listitem><simpara><option>userGroup</option></simpara></listitem>
                            <listitem><simpara><option>object</option></simpara></listitem>
                            <listitem><simpara><option>namespace</option></simpara></listitem>
                            <listitem><simpara><option>serviceType</option></simpara></listitem>
                          </itemizedlist>
                        </entry>
                    </row>
                  <row>
                    <entry>
                      <para><emphasis>objectSpec</emphasis></para>
                    </entry>
                    <entry><para>The identifier for the CasObject the user is adding. Can be one of the following:</para>
                      <itemizedlist>
                        <listitem><simpara>nickname if adding a trustAnchor or user</simpara></listitem>
                        <listitem><simpara>groupName if adding a userGroup</simpara></listitem>
                        <listitem><simpara>objectNamespace objectName if adding an object</simpara></listitem>
                        <listitem><simpara>nickname if adding a namespace</simpara></listitem>
                        <listitem><simpara>serviceTypeName if adding a serviceType</simpara></listitem>
                      </itemizedlist>
                    </entry>
                  </row>
                </tbody>
            </tgroup>
        </table>
          
        </refsect2>
        
        <refsect2 id="cas-group-remove-entry-serviceAction"><title>Removing A Service/Action From A Service/Action Group</title>
          
          <para>To remove a service/action from a service/action group, the user must have
            cas/remove_group_entry permission on that particular service/action group.</para>
          
          <para>        
            If the action being removed does not exist, an error is <emphasis>not</emphasis> thrown.
          </para>
        
          <screen><prompt>casAdmin$</prompt> <command>cas-group-remove-entry [<option><link linkend="cas-group-remove-entry-common-options">options</link></option>] serviceAction <replaceable>groupName</replaceable> <replaceable>serviceTypeName</replaceable> <replaceable>actionName</replaceable></command></screen>

        <table>
            <title>cas-group-remove-entry Options For Removing A Service/Action From A Service/Action Group</title>
            <tgroup cols="2">
                <tbody>  
                    <row>
                        <entry>
                            <para><emphasis>groupName</emphasis></para>
                        </entry>
                        <entry><para> The serviceAction group name from which the service/action needs to be removed.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><emphasis>serviceTypeName</emphasis></para>
                        </entry>
                        <entry><para>The service type name part of the mapping to be removed from the group.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para><emphasis>actionName</emphasis></para>
                        </entry>
                        <entry><para>The action name part of the mapping to be removed from the group.</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>        
          
        </refsect2>
        
        <refsect2  id="cas-group-remove-entry-common-options"><title>Common Options</title>
          <table><title>CAS Common Options</title>
            
            <tgroup cols="2">
              
              <tbody>
                
                &WS_AA_CAS_Interface_Commandline_Common_Options_Frag;
                
              </tbody>
              
            </tgroup>
            
          </table>    
        </refsect2>
        
        
      </refsect1>   
      
      
      
      <refsect1><title>Example Usage</title>
        
        <para>Example of removing a user from a user group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of removing a CAS object from an object group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of removing a service/action from a service/action group:</para>
        
        <screen>FIXME</screen>
        
      </refsect1>
      
    </refentry>
    
    
    <refentry id="cas-rights-admin">
      <refmeta>
        <refentrytitle>cas-rights-admin</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>cas-rights-admin</refname>
        <refpurpose>Granting or revoking permissions</refpurpose>
      </refnamediv>
      <refsynopsisdiv><cmdsynopsis>
        <command>cas-rights-admin</command>
      </cmdsynopsis>
      </refsynopsisdiv>
      
      <refsect1><title>Tool description</title>
        
        <para>Use <command>cas-rights-admin</command> to grant or revoke rights ...</para> 
        
      </refsect1>
      
      <refsect1><title>Command syntax</title>
        
        <screen><prompt>casAdmin$</prompt> <command>cas-rights-admin [<option><link linkend="cas-rights-admin-common-options">options</link></option>] [grant|revoke]  [<replaceable>command args</replaceable>]</command></screen>
        
        <refsect2 id="cas-rights-admin-grant"><title>Granting Permissions To A User Group On An Object/Object Group</title>
          
       <para>The user may grant permissions to a user group on an object or object group to perform a service action or service action group (that is, to
            perform any action that is a member of the service action group to
            which permission is granted), provided the user has has both:</para>
        
        <itemizedlist>
            <listitem><simpara>cas/grant permission on the object or object group, and</simpara></listitem>
            <listitem><simpara>permission to perform the service action or service action
                group on the object or object group.</simpara></listitem>
            
        </itemizedlist>
        
          <screen><prompt>casAdmin$</prompt> <command>cas-rights-admin [<option><link linkend="cas-rights-admin-common-options">options</link></option>] grant <replaceable>userGroupName</replaceable> <replaceable>objectSpecDesc</replaceable> <replaceable>objectSpec</replaceable> <replaceable>actionSpecDesc</replaceable> <replaceable>actionSpec</replaceable></command></screen>
        
        <table>
            <title>cas-rights-admin Options For Granting Permissions To A User Group On An Object Or Object Group</title>
            <tgroup cols="2">
                <tbody>  
                    <row>
                        <entry>
                            <para><emphasis>userGroupName</emphasis></para>
                        </entry>
                      <entry><para> The user group to be granted permission.</para>
                      </entry>
                    </row>
                  <row>
                    <entry>
                      <para><emphasis>objectSpec</emphasis></para>
                    </entry>
                    <entry><para>The identifier for the object or object group.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para><emphasis>objectSpecDesc</emphasis></para>
                    </entry>
                    <entry><para>The type (object or objectGroup).</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para><emphasis>actionSpec</emphasis></para>
                    </entry>
                    <entry><para>The identifier for action or action group.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para><emphasis>actionSpecDesc</emphasis></para>
                    </entry>
                    <entry><para>The type (serviceAction or serviceActionGp).</para>
                    </entry>
                  </row>
                </tbody>
            </tgroup>
        </table>        
          
          
        </refsect2>
        
        <refsect2 id="cas-rights-admin-revoke"><title>Revoking A Policy In The CAS Database</title>
          
      <para>The user may revoke a policy in the CAS database if the user has
            cas/revoke permission on the object or object group on which the policy
            is defined.</para>
        
          <screen><prompt>casAdmin$</prompt> <command>cas-rights-admin [<option><link linkend="cas-rights-admin-common-options">options</link></option>] revoke <replaceable>userGroupName</replaceable>  <replaceable>objectSpecDesc</replaceable> <replaceable>objectSpec</replaceable>  <replaceable>actionSpecDesc</replaceable> <replaceable>actionSpec</replaceable></command></screen>

        <table>
            <title>cas-rights-admin Options For Revoking A Policy In The CAS Database</title>
            <tgroup cols="2">
                <tbody>  
                    <row>
                        <entry>
                            <replaceable>userGroupName</replaceable>
                        </entry>
                        <entry>
                          <para>The user group for which you want to grant permission.</para>
                        </entry>
                    </row>
                  <row>
                    <entry>
                      <replaceable>objectSpecDesc</replaceable>
                    </entry>
                    <entry>
                      <para>The type of CasObject. Can be one of the following:</para>
                      <itemizedlist>
                        <listitem><simpara>trustAnchor</simpara></listitem>
                        <listitem><simpara>user</simpara></listitem>
                        <listitem><simpara>userGroup</simpara></listitem>
                        <listitem><simpara>object</simpara></listitem>
                        <listitem><simpara>namespace</simpara></listitem>
                        <listitem><simpara>serviceType</simpara></listitem>
                        <listitem><simpara>userGroup</simpara></listitem>
                      </itemizedlist>
                    </entry>
                  </row>
                    <row>
                        <entry>
                            <replaceable>objectSpec</replaceable>
                        </entry>
                        <entry><para>The identifier for the object or object group.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <emphasis>actionSpec</emphasis>
                        </entry>
                        <entry><para>The identifier for the action or action group.</para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <emphasis>actionSpecDesc</emphasis>
                        </entry>
                        <entry><para>The type (serviceAction or serviceActionGp).</para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>        
          
        </refsect2>
        
        
        <refsect2  id="cas-rights-admin-common-options"><title>Common Options</title>
          <table><title>CAS Common Options</title>
            
            <tgroup cols="2">
              
              <tbody>
                
                &WS_AA_CAS_Interface_Commandline_Common_Options_Frag;
                
              </tbody>
              
            </tgroup>
            
          </table>    
        </refsect2>
        
        
      </refsect1>   
      
      
      
      <refsect1><title>Example Usage</title>
        
        <para>Example of granting permissions to a user group on an object/object group:</para>
        
        <screen>FIXME</screen>
        
        <para>Example of revoking a policy in the CAS database:</para>
        
        <screen>FIXME</screen>
        
      </refsect1>
      
    </refentry>
