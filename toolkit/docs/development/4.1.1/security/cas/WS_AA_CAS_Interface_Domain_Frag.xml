<?xml version='1.0' encoding='UTF-8'?>

<itemizedlist>

  <listitem>

    <para>To  get a handle for the CAS service port type, the <constant>org.globus.cas.impl.client.CasClientSetup</constant> class can be used.</para>

    <para>Sample Code:

</para>

    <para>To get a handle to a CAS service with instance URL <replaceable>instanceURL</replaceable> and identity <replaceable>serviceIdentity</replaceable>: 



<screen>CasClientSetup clientSetup = new CasClientSetup();

CommunityAuthorizationServicePortType casPort = 

    clientSetup.getCASPort(instanceURL, serverIdentity);</screen></para>

  </listitem>

  <listitem>

    <para>To generate a proxy with embedded CAS assertions 

the API in the class

<constant>org.globus.cas.impl.client.CasProxyHelper</constant> can be used. The class <constant>org.globus.cas.impl.client.ClientParams</constant>

is used  to pass in appropriate parameters and the  datatype

<constant>org.globus.cas.impl.client.ResourceActionsMap</constant> is used to

represent the resource/actions mapping for which assertions are

requested on.</para>

    <para>Listed below is sample code that uses the client side util API to generate a proxy with CAS assertions embedded in it.<orderedlist>

        <listitem>

          <para>The ClientParams class is used to construct the parameter. If the

default constructor is used and none of the values are set then the requested

assertion lifetime is set to 24 hours, the default proxy file is used and the

proxy  containing the embedded assertions is named with a &quot;.cas&quot;  extension at

the end of the proxy file.



<screen>ClientParams clientParams = new ClientParams();</screen></para>

        </listitem>

        <listitem>

          <para>The following is used to set assertion lifetime. If not set then 24 hours is used.

<screen>clientParams.setAssertionLifetime(lifetime);</screen></para>

        </listitem>

        <listitem>

          <para>Set the file name of the proxy to use. If not set then the default credential is used.

<screen>clientParams.setProxyFileName(proxyFilename);</screen></para>

        </listitem>

        <listitem>

          <para>Set the file name  that the proxy with CAS assertions  will be written

to. If not set then original proxy file name is appended with a tag.



<screen>clientParams.setCasProxyFileName(casProxyFilename);</screen></para>

        </listitem>

        <listitem>

          <para>Set  the extension to append to the original proxy filename. If not set then the

 extension &quot;.cas&quot; is used. The  extension is only used if a filename for the CAS proxy is not set.

<screen>clientParams.setCasProxyTag(tag);</screen></para>

        </listitem>

        <listitem>

          <para>Set the resource/actions for which the assertion is requested on. It

uses an array of data type <emphasis>ResourceActionsMap</emphasis> (explained below).



<screen>clientParams.setResourceActionsMap(resActions);</screen></para>

        </listitem>

        <listitem>

          <para>The <constant>ResouceActionsMap</constant> datatype is used to represent the

resource and the actions on the resource for which the permissions are

required. It  uses a String to represent the resource and a vector of strings

to represent the actions.

</para>

          <para>The resource should be of the form

&quot;<replaceable>objectNamespace</replaceable>|<replaceable>objectName</replaceable>&quot;. The action

should be of the form &quot;<replaceable>serviceType actionName</replaceable>&quot;.

</para>

        </listitem>

        <listitem>

          <para>Create an instance of the Helper class:

<screen>CasProxyHelper casProxyHelper = new CasProxyHelper(instanceURL, serverIdentity);</screen></para>

          <para>Where: 

<itemizedlist>

              <listitem>

                <simpara><replaceable>instanceURL</replaceable> is the URL used to contact the CAS service.</simpara>

              </listitem>

              <listitem>

                <simpara><replaceable>serverIdentity</replaceable> is the expected identity of the server. If null, host authorization is used.</simpara>

              </listitem>

            </itemizedlist></para>

        </listitem>

        <listitem>

          <para>Generate the proxy with CAS assertions:

<screen>String casProxyFilename = casProxyHelper.getCasProxy(clientParams);</screen></para>

          <para>This method contacts the CAS service, retrieves assertions, embeds the assertions in

 a proxy credential and returns the path to the proxy file.

</para>

        </listitem>

      </orderedlist>

</para>

  </listitem>

</itemizedlist>

