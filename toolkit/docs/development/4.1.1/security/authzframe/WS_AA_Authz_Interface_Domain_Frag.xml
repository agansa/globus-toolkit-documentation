<?xml version='1.0' encoding='UTF-8'?>
<section>
  <title>Interface introduction</title>
  <para>On the client side the authorization configuration is set on the stub instance used for method invocation. Properties can be set directly on the stub or set using a client security descriptor.</para>
  <para><itemizedlist>
      <listitem>
        <para>Setting property on the stub:

<programlisting>// Create endpoint reference EndpointReferenceType
endpoint = new EndpointReferenceType(); 
// Set address of service
String counterAddr = 
   &quot;http://localhost:8080/wsrf/services/CounterService&quot;;
// Get handle to stub object
CounterPortType port = 
   locator.getCounterPortTypePort(endpoint);
<emphasis>// set client authorization to self ((Stub)port)._setProperty(Constants.AUTHORIZATION, SelfAuthorization.getInstance());</emphasis></programlisting></para>
      </listitem>
      <listitem>
        <para>Setting properties using client descriptor:

<programlisting><emphasis>// Client security descriptor file String CLIENT_DESC = &quot;org/globus/wsrf/samples/counter/client/client-security-config.xml&quot;;</emphasis>
// Create endpoint reference EndpointReferenceType
endpoint = new EndpointReferenceType();
// Set address of service
String counterAddr =  
   &quot;http://localhost:8080/wsrf/services/CounterService&quot;;
// Get handle to port 
CounterPortType port = 
   locator.getCounterPortTypePort(endpoint);
<emphasis>//Set descriptor on Stub ((Stub)port)._setProperty(Constants.CLIENT_DESCRIPTOR_FILE, CLIENT_DESC);</emphasis></programlisting>
</para>
        <para>The descriptor file is defined by the following <emphasis>
            <ulink url="http://www-unix.globus.org/toolkit/docs/development/4.0-drafts/security/authzframe/client_security_descriptor.xsd">Client Security Descriptor Schema</ulink>
          </emphasis>. A sample is shown below that  contains security settings
equivalent to the previous example (self authorization):</para>
        <screen>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;securityConfig xmlns=&quot;http://www.globus.org&quot;&gt;
&lt;authz value=&quot;self&quot;/&gt;
&lt;/securityConfig&gt;</screen>
      </listitem>
    </itemizedlist>
</para>
</section>
<section>
  <title>Syntax of the interface</title>
  <para>To set authorization on a stub, use
      the<constant>org.globus.wsrf.impl.security.Constants.AUTHORIZATION property</constant>.
      The value of this property must be a object that implements the <constant>org.globus.wsrf.impl.security.authorization.Authorization</constant> interface.
</para>
  <para>To set the authorization mechanism using a security descriptor  use the element <emphasis>&lt;authz value=&quot;someMethod&quot;/&gt;</emphasis>.
        Currently the following methods are supported:
</para>
  <para><table>
      <title>WS Authorization methods</title>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry>
              <constant>none</constant>
            </entry>
            <entry>No authorization is performed. </entry>
          </row>
          <row>
            <entry>
              <constant>self</constant>
            </entry>
            <entry>
              <para>Assures that the client and service have the same identity</para>
            </entry>
          </row>
          <row>
            <entry>
              <constant>host</constant>
            </entry>
            <entry>Host authorization is performed.</entry>
          </row>
          <row>
            <entry>
              <constant>
                <replaceable>identity of service</replaceable>
              </constant>
            </entry>
            <entry>Identity authorization with the specified value is performed.</entry>
          </row>
        </tbody>
      </tgroup>
    </table></para>
  <note>
    <para> If no  authorization mechanism has been specified, host authorization
    is performed.</para>
  </note>
</section>
