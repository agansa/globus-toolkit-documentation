<title>GT 4.0 Reliable File Transfer (RFT) Service: System Administrator's Guide</title>
<titleabbrev> System Administrator's Guide</titleabbrev> 

<section id="s-rft-admin-introduction"><title>Introduction</title>
<para>This guide contains advanced configuration information for system administrators
  working with RFT. It provides references to information on procedures
  typically performed by system administrators, including installation, configuring,
deploying, and testing the installation.</para>
    <important>
        <simpara> This information is in addition to the basic Globus Toolkit prerequisite, 
          overview, installation, security configuration instructions in the <ulink url="../../admin/docbook/">GT 4.0 System Administrator's Guide</ulink>.  
          Read through this guide before continuing!</simpara>  
    </important>
<para>RFT is used to perform third-party transfers across GridFTP servers. It
  uses a database to store its state periodically
  so the transfers can be recovered from any failures. RFT uses
  standard grid security mechanisms for authorization and authentication
  of the users. In order to effectively use RFT you should have
  installed and configured a database with RFT database schemas and have
  the necessary security infrastructure in place to perform a 3rd party
  transfer.</para>
</section>

<section id="s-rft-admin-installing"><title>Building and Installing</title>
<para>RFT is built and installed as part
      of a default GT 4.0 installation. For basic installation instructions,
      see the <ulink url="../../admin/docbook/">GT 4.0 System Administrator's
      Guide</ulink>. No extra installation steps
are required for this component.</para>
<para>The following are specialized instructions for advanced
  developers who want to deploy latest code from CVS:</para>
<orderedlist><title>Build RFT from CVS:</title>
      <listitem><para>Configure your CVSROOT to point to globus cvs location.</para></listitem>
      <listitem><para>Run:</para>
          <screen>cvs co ws-transfer</screen></listitem>
      <listitem><para>Run:</para>
          <screen>cd ws-transfer/reliable</screen></listitem>
      <listitem><para>Set GLOBUS_LOCATION to point to your globus installation.</para></listitem>
      <listitem><para>Run:</para>
          <screen>ant deploy </screen></listitem>
</orderedlist>
</section>

<section id="s-rft-admin-configuring"><title>Configuring </title>

<section id="s-rft-admin-postgresql"><title>Required configuration: configuring the PostgreSQL
  database</title>
<para>PostgreSQL (Version 7.1 or greater ) needs to be installed and configured&nbsp; for
  RFT to work. You can either use the packages which came with your operating
system (RPMs, DEBs, ...) or build from source. We used
    PostgreSQL version 7.3.2 for our testing and the following instructions are
  good for the same. </para>

<orderedlist>
  <listitem><para>Install Postgresql. Instructions on how to install/configure
postgresql can be found <ulink
 url="http://www.postgresql.org/docs/manuals/">here</ulink>.</para></listitem>
  <listitem><para>Configure the postmaster daemon
    so that it accepts TCP connections. This can be done by adding -o "-i" switch
    to postmaster script (This can be init.d script found in /etc/init.d/postgresql or /var/lib/ depending on how you installed postgresql). Follow the intstructions <ulink url="http://www.postgresql.org/docs/7.4/static/postmaster-start.html"> here </ulink> to start the postmaster with -i option.  </para></listitem> 
<listitem><para> You will now need to create a postgresql user that would connect to 
    the database. This is usually the account under which the container is 
    running. You can create a postgresql user by running the following command:
    <computeroutput> su postgres </computeroutput>
    <computeroutput> createuser globus </computeroutput>. If you get the following error :
    <computeroutput>
    psql: could not connect to server: No such file or directory
        Is the server running locally and accepting
        connections on Unix domain socket "/tmp/.s.PGSQL.5432"?
</computeroutput> 
This generally  means that 1. either your postmaster is not started with -i option
or 2. you did'nt restart the postmaster after above mentioned step</para></listitem>

    <listitem><para> Now you need to set security on the database you are about to create. You can do it by following the steps below: </para>
	    <para>
   <computeroutput>sudo vi /var/lib/pgsql/data/pg_hba.conf </computeroutput> and append the following line to the file:
    </para>
    <para>
    <computeroutput>
        host    rftDatabase "username" "host-ip" 255.255.255.255 "password"
        </computeroutput>
        </para>

    <para><computeroutput> sudo /etc/init.d/postgresql restart </computeroutput>
    </para></listitem>
      <listitem><para>To create the database that is used for RFT, run ( as user globus):
      <computeroutput>createdb rftDatabase</computeroutput></para></listitem>
  <listitem><para>To populate the RFT database with appropriate schemas, run:
      <computeroutput>psql -d rftDatabase -f $GLOBUS_LOCATION/share/globus_wsrf_rft/rft_schema.sql
      
      </computeroutput>Now that you have created a database to store RFT's state, the following
      steps configure RFT to find the database:
  </para></listitem>
  <listitem><para>Open <computeroutput> $GLOBUS_LOCATION/etc/globus_wsrf_rft/jndi-config.xml</computeroutput></para></listitem>
  <listitem><para>Find the <computeroutput>dbConfiguration</computeroutput> section under <computeroutput>ReliableFileTransferService &lt;service&gt;</computeroutput> section. </para></listitem>
  <listitem><para>Change the <computeroutput>connectionString</computeroutput> to point to the machine on which
    you installed Postgres and name of the database you used in step 2. 
    If you installed Postgres on the same machine as your Globus install, the
    default should work fine for you.</para></listitem>
  <listitem><para>Change the <computeroutput>userName</computeroutput> to the name of the user who owns/created
    the database and do the same for the password. (It also depends on how you
    configured your database.)</para></listitem>
  <listitem><para>Don't worry about the other parameters in that section. The defaults should
    work fine for now.</para></listitem>
  <listitem><para>Edit the configuration section under <computeroutput>ReliableFileTransferService</computeroutput>.
    There are two values that can be edited in this section. </para></listitem>
  <listitem><para><itemizedlist>
    <listitem><para><computeroutput>backOff</computeroutput>&nbsp; : Time in seconds you want RFT to backoff
      before a failed transfer is retried by RFT. Default should work fine for
      now.</para></listitem>
    <listitem><para><computeroutput>maxActiveAllowed</computeroutput>:&nbsp; This is the number of transfers
      the container can do at given point. Default should be fine for now.</para></listitem>
  </itemizedlist></para></listitem>
</orderedlist>
</section>
</section>

<section id="s-rft-admin-deploying"><title>Deploying</title>
<para>RFT is deployed as part of a standard toolkit installation. Please refer to <ulink url="../../admin/docbook/"> System Adminstrator's Guide</ulink> for details.</para>
</section>

<section id="s-rft-admin-testing"><title>Testing</title>
<orderedlist><title>RFT Testing</title>
      <listitem>
      <para>set <computeroutput> $GLOBUS_LOCATION </computeroutput> to point to your Globus install.</para>
      </listitem>
      <listitem>
      <para>Start a gridftp server on the machine you are running the
tests on default port. This can be done by running: </para>
      <screen>$GLOBUS_LOCATION/sbin/globus-gridftp-server -p 2811 &amp;</screen>
      </listitem>
      <listitem><para>Start the container with RFT deployed in it.</para></listitem>
      <listitem>
      <para>Edit $GLOBUS_LOCATION/share/globus_wsrf_rft_test/test.properties. Put in appropriate values for properties like authzValue(self or host), HOST - host ip of container, PORT- port on which container is listening, sourceHost,destinationsHost - hostnames of gridftp servers. The default values will work fine if you are running the tests with a standard stand-alone container started with user credentials (self authorization is done in this case). If the container is started using host credentials change authzVal to host. If the gridftp servers you are using for your testing are started as user, you need to supply subject names of the users in sourceSubject, destinationSubject for authorization with gridftp servers. If both source and destination servers are started as one user you can just fillin user's subject in subject field of test.properties.
<emphasis> If you are getting Authentication/Authorization Failures because of mismatched subject names then your authzVal and authType (uses transport security by default) need to be changed depending on how you start the container. If you started the container with -nosec option then you need to change authType to GSI_MESSAGE, PROTOCOL to http and PORT to 8080. </emphasis> </para>
      </listitem>
      <listitem>
      <para>The *.xfr files in  $GLOBUS_LOCATION/share/globus_wsrf_rft_test/ are the transfer files that will be used in the tests. Again the default values work fine if you followed the instructions so far.</para>
      </listitem>
    <listitem>
    <para>Run the following command which will run all the rft unit tests:</para>
    <screen>ant -Dtests.jar=$GLOBUS_LOCATION/lib/globus_wsrf_rft_test.jar -f share/globus_wsrf_rft_test/runtests.xml</screen>
    </listitem>
    <listitem>
    <para>Run the following command to generate the test-reports in html form:</para>
    <screen> ant -f  share/globus_wsrf_rft_test/runtests.xml generateTestReport</screen>
    </listitem>
</orderedlist>
</section>


<section id="s-rft-admin-security_considerations"><title>Security Considerations </title>
&RFT_Security_Considerations_Frag;
</section>

<section id="s-rft-admin-troubleshooting"><title>Troubleshooting</title>
<section><title>PostgreSQL not configured</title>
  <para><emphasis>Problem:</emphasis> If RFT is not configured properly to talk to a PostgreSQL
  database, you will see this message displayed on the console when you start
the container : </para>

<screen>"Error creating RFT Home: Failed to connect to database ... 
Until this is corrected all RFT request will fail and all GRAM jobs that require staging will fail". </screen>
<para><emphasis>Solution:</emphasis> Usual mistake is Postmaster is not accepting TCP
  connections which&nbsp; means that you must restart Postmaster with -i option&nbsp; (
  see <xref linkend="s-rft-admin-postgresql"/>). </para>
</section>
  
  <section><title>More verbose error messages</title>
  <para><emphasis>Problem:</emphasis> Make RFT print more verbose error messages: </para>
<para><emphasis>Solution:</emphasis> Edit $GLOBUS_LOCATION/container-log4j.properties 
and add following line to it: 
<computeroutput> log4j.category.org.globus.transfer=DEBUG </computeroutput>. For more verbosity add
<computeroutput> log4j.category.org.globus.ftp=DEBUG </computeroutput> which will print out Gridftp
messages too.
</para></section>
    &RFT_Recovery_Frag;


</section>

<section id="s-rft-admin-usage"><title>Usage statistics collection by the Globus Alliance </title>
&RFT_Usage_Statistics_Frag;
</section>



