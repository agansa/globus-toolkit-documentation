<section><title>Configuration overview</title>
<para>Configuring an Aggregating Service Group to perform a data
aggregation is performed by specifying an AggregatorContent object
as the content parameter of a ServiceGroup <emphasis><emphasis>add</emphasis></emphasis> method
invocation. An AggregatorContent object is composed of two
xsd:any arrays: AggregatorConfig and AggregatorData:</para>
<itemizedlist>
<listitem><simpara>AggregatorConfig is used to specify parameters that are to be
passed to the underlying AggregatorSource when the ServiceGroup
<emphasis><emphasis>add</emphasis></emphasis> method is invoked. These parameters are
generally type-specific to the implementation of the
AggregatorSource and/or AggregatorSink being used.</simpara></listitem>
<listitem><simpara>The AggregatorData xsd:any array is used as the storage
location for aggregated data that is the result of message
deliveries to the AggregatorSink. Generally, the
AggregatorData parameter of the AggregatorContent is not populated
when the ServiceGroup <emphasis><emphasis>add</emphasis></emphasis> method is invoked, but
rather is populated by message delivery from the
AggregatorSource.</simpara></listitem>
</itemizedlist>
</section>
<section><title>Syntax of the interface</title>
<itemizedlist>
<listitem><simpara><ulink url="#aggregatortypes">The AggregatorContent Service Group Entry Type:  aggregator-types.xsd</ulink></simpara></listitem>
<listitem><simpara><ulink url="#specifying-source">Specifying the Aggregator
Sources</ulink></simpara></listitem>
<listitem><simpara><ulink url="#configuring_source">Configuring the Aggregator
Sources</ulink></simpara></listitem>
<listitem><simpara><ulink url="#configuring_aggregatorsink">Configuring the
Aggregator Sink</ulink></simpara></listitem>
</itemizedlist>
</section>
<section id="aggregatortypes"><title>
The AggregatorContent Service Group Entry Type:  aggregator-types.xsd</title>
<para>The basic structure of the AggregatorContent type is defined in
the file <emphasis>aggregator-types.xsd</emphasis>, the relevant fragment
of which is shown below. In addition, there are per-source and
per-sink configuration elements, which should be placed in the
AggregatorConfig element of a registration if the appropriate
source or sink is being used. These are detailed in a table
below.</para>
<screen>
&lt;xsd:complexType name="AggregatorConfig"&gt;
  &lt;annotation&gt;&lt;documentation&gt;
    This type encapsulates multiple arbitrary aggregator configuration data
  &lt;/documentation&gt;&lt;/annotation&gt;
  &lt;xsd:sequence&gt;
    &lt;xsd:any namespace="##any" minOccurs="0" maxOccurs="unbounded"/&gt;
  &lt;/xsd:sequence&gt;
&lt;/xsd:complexType&gt;

&lt;xsd:complexType name="AggregatorData"&gt;
  &lt;annotation&gt;&lt;documentation&gt;
    This type encapsulates multiple arbitrary aggregated content data.
  &lt;/documentation&gt;&lt;/annotation&gt;
  &lt;xsd:sequence&gt;
    &lt;xsd:any namespace="##any" minOccurs="0" maxOccurs="unbounded"/&gt;
  &lt;/xsd:sequence&gt;
&lt;/xsd:complexType&gt;

&lt;xsd:complexType name="AggregatorContent"&gt;
  &lt;annotation&gt;&lt;documentation&gt;
    This type encapsulates the Aggregator's ServiceGroup content element, 
    which is composed of two xsd:any arrays, one storing the aggregator  
    configuration, the other storing the aggregated data. 
   &lt;/documentation&gt;&lt;/annotation&gt;
  &lt;xsd:sequence&gt;
    &lt;xsd:element name="AggregatorConfig"
                 type="tns:AggregatorConfig" 
                 minOccurs="1" maxOccurs="1"/&gt; 
    &lt;xsd:element name="AggregatorData"
                 type="tns:AggregatorData"
                 minOccurs="1" maxOccurs="1"/&gt; 
    &lt;/xsd:sequence&gt;
&lt;/xsd:complexType&gt; 
</screen>
</section>
<section id="specifying-source"><title>
Specifying the Aggregator Sources</title>
<para>The aggregator sources used to collect data can be set by
editing the aggregatorSources parameter in the implementing
service's JNDI configuration file. See
<filename>$GLOBUS_LOCATION/etc/globus_wsrf_mds_index/jndi-config.xml</filename>
or
<filename>$GLOBUS_LOCATION/etc/globus_wsrf_mds_trigger/jndi-config.xml</filename>:</para>
<screen>
  &lt;resource name="configuration"
               type="org.globus.mds.aggregator.impl.AggregatorConfiguration"&gt;
    &lt;resourceParams&gt;
      &lt;parameter&gt;
        &lt;name&gt; factory&lt;/name&gt;
        &lt;value&gt;org.globus.wsrf.jndi.BeanFactory&lt;/value&gt;
      &lt;/parameter&gt;
      &lt;parameter&gt;
        &lt;name&gt;aggregatorSource&lt;/name&gt;
        <emphasis>&lt;value&gt;org.globus.mds.aggregator.impl.QueryAggregatorSource 
               org.globus.mds.aggregator.impl.SubscriptionAggregatorSource 
               org.globus.mds.aggregator.impl.ExecutionAggregatorSource
        &lt;/value&gt;</emphasis>
      &lt;/parameter&gt;
    &lt;/resourceParams&gt;
</screen>
<para>This parameter specifies one or more Java classes that may be
used to collect data for the service. Details of the supplied
sources are in the <ulink url=
"http://www-unix.globus.org/toolkit/docs/development/4.0-drafts/info/aggregator/developer/#introduction">
Aggregator Framework Developers Guide</ulink>.</para>
</section>
<section id="configuring_source"><title>Configuring the Aggregator Sources</title>
&WS_MDS_Aggregator_Sources_Frag;
</section>
<section id="configuring_aggregatorsink"><title>
Configuring the Aggregator
Sink</title>
<para>
An aggregator sink may require sink-specific configuration (the MDS
Trigger service requires sink-specific configuration; the MDS Index
service does not). See the documentation for the specific
aggregator service being used for details on sink-specific
documentation.</para>
 </section>
