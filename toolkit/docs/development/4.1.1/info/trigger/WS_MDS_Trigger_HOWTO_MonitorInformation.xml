<?xml version='1.0' encoding='UTF-8'?>
<chapterinfo><date>updated: December 2006</date></chapterinfo>
<title>Trigger Service HOWTO - Using Triggers To Monitor Information </title>

    <para>In this HowTo, we will use a GT4/MDS4 Trigger as a way to monitor resource information from another GT4 service. We will go step-by-step from 
        start to finish. The current GT 4.1 <ulink url="http://www-unix.globus.org/toolkit/docs/development/4.1.0/info/trigger/">documentation</ulink> serves as a reference, but for those of you who would like to get
        something working without going through all of the documentation, this document will be a good start for you.</para>
    <para>We will be writing a simple trigger from scratch, and setting it up completely. To get the basic idea of how this is done, we will use elements available in the default GT4 installation to show you how to use triggers.</para>
    
    <section id="trigger-howto-monitor-prereq"><title>Prerequisites</title>
    <itemizedlist>
        <listitem><para><ulink url="http://www.globus.org/toolkit/downloads/development/">GT 4.1</ulink> installation. (including Java WS Core and WS MDS Aggregator Framework)</para></listitem>
        <listitem><para><ulink url="http://en.wikipedia.org/wiki/Portable_Batch_System">PBS</ulink> installation.  PBS should be properly configured for your GT4 installation.  Be sure to enable PBS support when compiling GT4 (<screen>./configure --prefix=your-install-location --enable-wsgram-pbs</screen>)</para></listitem>
    </itemizedlist>
    </section>

    <section id="trigger-howto-monitor-environment"><title>Step 1 - Set up the GT4 environment</title>
            <orderedlist>
                <listitem><para><emphasis>Install</emphasis> a recent version of <ulink url="http://www.globus.org/toolkit/downloads/development/">GT 4.1</ulink>.  
                    Apply recent <ulink url="http://www-unix.globus.org/toolkit/downloads/development/">patches</ulink> if necessary, and/or use a <ulink url="http://dev.globus.org/wiki/How_to_contribute">CVS</ulink>
                    install. More recent versions and installs provide better functionality and are thus recommended. If you're new to using GT4, you may wish to follow the <ulink url="http://www.globus.org/toolkit/docs/development/4.1.0/admin/docbook/quickstart.html">GT 4.1.0 Quickstart</ulink>.
                    If you do not have PBS installed, you'll want to gain access to a cluster running GT4 with PBS. In this tutorial, we are using a local GT4.1 install and we will be accessing an external cluster running GT4
                    with PBS. Also, if you do not have PBS, consider using Fork instead of PBS.</para></listitem>
                <listitem><para><emphasis>Login</emphasis> to whatever machine you'll be using, set your <computeroutput>$GLOBUS_LOCATION</computeroutput> environment variable:</para>
                    <para><emphasis role="strong"><computeroutput>setenv GLOBUS_LOCATION /your-install-location/</computeroutput></emphasis></para>
                    <para>or (depending on your system)</para>
                    <para><computeroutput>export GLOBUS_LOCATION="/your-install-location"</computeroutput></para></listitem>
                <listitem><para><emphasis>Set up security</emphasis></para><para><emphasis role="strong"><computeroutput>source $GLOBUS_LOCATION/etc/globus-user-env.csh</computeroutput></emphasis></para>
                    <para><emphasis role="strong"><computeroutput>$GLOBUS_LOCATION/bin/grid-proxy-init -verify -debug</computeroutput></emphasis></para>
                    <para>Again if this is new to you please refer to the <ulink url="http://www.globus.org/toolkit/docs/development/4.1.0/admin/docbook/quickstart.html">GT 4.1.0 Quickstart</ulink>.</para></listitem>
                <listitem><para><emphasis>Test access</emphasis> to the cluster running <ulink url="http://en.wikipedia.org/wiki/Portable_Batch_System">PBS</ulink>.</para>
                       <para>We can use <computeroutput>wsrf-query</computeroutput> to poll the DefaultIndexService running on the PBS cluster.  Here is a sample query along with sample output:</para>
                    <screen>$GLOBUS_LOCATION/bin/wsrf-query
            -s
            https://cluster-location-with-pbs:8443/wsrf/services/DefaultIndexService
            "//*/glue:GLUECE//glue:ComputingElement[glue:Info/@glue:LRMSType='PBS'
            and glue:State/@glue:FreeCPUs&gt;0]" &lt;-- Be sure this query is all in one line</screen>
                    <para>The following output has been formatted for clarity.</para>
                    <screen>            &lt;ns1:ComputingElement ns1:Name="normal" ns1:UniqueID="normal"
            xmlns:ns1="http://mds.globus.org/glue/ce/1.1"&gt;
            &lt;ns1:Info ns1:GRAMVersion="4.0.3"
            ns1:LRMSType="PBS"
            ns1:LRMSVersion="2.1.2"
            ns1:TotalCPUs="96"/&gt;
            &lt;ns1:State ns1:EstimatedResponseTime="0"
            ns1:FreeCPUs="82"
            ns1:RunningJobs="2"
            ns1:Status="enabled"
            ns1:TotalJobs="2"
            ns1:WaitingJobs="0"
            ns1:WorstResponseTime="0"/&gt;
            &lt;ns1:Policy ns1:MaxCPUTime="-1"
            ns1:MaxRunningJobs="-1"
            ns1:MaxTotalJobs="-1"
            ns1:MaxWallClockTime="2880"
            ns1:Priority="0"/&gt;
            &lt;/ns1:ComputingElement&gt;
                    </screen>
                    <para>What we've done here is queried the DefaultIndexService on a GT4 deployment which has collected PBS cluster information, and here we can see the
                        results of that query. In this HowTo, the relevant resource information will be the "FreeCPUs" (highlighted in red).</para>
                </listitem>
            </orderedlist>
        </section>
    
    <section id="trigger-howto-monitor-config"><title>Step 2 - Write the trigger configuration file</title>
    <orderedlist>
        <listitem><para><emphasis>Overview</emphasis>:Let's talk about what we will be doing. We will be using a local GT4 install
            to monitor a cluster running GT4 with PBS. The above query showed us that there are some resources that we can track using our local trigger
            service. We will set up a trigger to monitor FreeCPUs on the cluster, and to log this information at regular intervals.</para></listitem>
        <listitem><para><emphasis>Write the configuration file</emphasis>:</para>
            <para>Create the configuration file: <emphasis role="strong"><filename>$GLOBUS_LOCATION/etc/globus_wsrf_mds_trigger/our-simple-trigger-config.xml</filename></emphasis>.</para>
            <para>You can copy the contents of the following XML (and be sure to change the elements highlighted in red [FIXME: update for docbook] to your particular setup): </para>
            <screen>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
                &lt;ServiceGroupRegistrations
                xmlns="http://mds.globus.org/servicegroup/client"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
                xmlns:agg="http://mds.globus.org/aggregator/types"&gt;
                &lt;defaultServiceGroupEPR&gt;
                &lt;wsa:Address&gt;
                https://your-install-location:8081/wsrf/services/DefaultTriggerService
                &lt;/wsa:Address&gt;
                &lt;/defaultServiceGroupEPR&gt;
                &lt;ServiceGroupRegistrationParameters
                xmlns="http://mds.globus.org/servicegroup/client"
                xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
                xmlns:agg="http://mds.globus.org/aggregator/types"
                xmlns:trigger="http://mds.globus.org/2004/08/trigger/types"&gt;
                &lt;RegistrantEPR
                xmlns:gram="http://www.globus.org/namespaces/2004/10/gram/job"
                xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
                &lt;wsa:Address&gt;
                https://cluster-location-with-pbs:8443/wsrf/services/ManagedJobFactoryService
                &lt;/wsa:Address&gt;
                &lt;wsa:ReferenceProperties&gt;
                &lt;gram:ResourceID&gt;PBS&lt;/gram:ResourceID&gt;
                &lt;/wsa:ReferenceProperties&gt;
                &lt;/RegistrantEPR&gt;
                &lt;RefreshIntervalSecs&gt;600&lt;/RefreshIntervalSecs&gt;
                &lt;Content xsi:type="agg:AggregatorContent"
                xmlns:agg="http://mds.globus.org/aggregator/types"&gt;
                &lt;agg:AggregatorConfig xsi:type="agg:AggregatorConfig"&gt;
                &lt;agg:GetResourcePropertyPollType
                xmlns:glue="http://mds.globus.org/glue/ce/1.1"&gt;
                &lt;agg:PollIntervalMillis&gt;60000&lt;/agg:PollIntervalMillis&gt;
                &lt;agg:ResourcePropertyName&gt;glue:GLUECE&lt;/agg:ResourcePropertyName&gt;
                &lt;/agg:GetResourcePropertyPollType&gt;
                &lt;trigger:TriggerRuleType&gt;
                &lt;trigger:matchingRule&gt;
                //*/glue:GLUECE//glue:ComputingElement[@glue:Name='normal' 
                and glue:Info/@glue:LRMSType='PBS' 
                and glue:State/@glue:FreeCPUs&gt;0]
                &lt;/trigger:matchingRule&gt;
                &lt;trigger:namespaceMappings&gt;
                xmlns:glue=http://mds.globus.org/glue/ce/1.1
                &lt;/trigger:namespaceMappings&gt;
                &lt;trigger:actionScript&gt;our-simple-trigger&lt;/trigger:actionScript&gt;
                &lt;trigger:minimumFiringInterval&gt;60&lt;/trigger:minimumFiringInterval&gt;
                &lt;trigger:minimumMatchTime&gt;30&lt;/trigger:minimumMatchTime&gt;
                &lt;trigger:enableFilteredActionScriptInput&gt;true&lt;/trigger:enableFilteredActionScriptInput&gt;
                &lt;trigger:disableUnmodifiedActionScriptInput&gt;true&lt;/trigger:disableUnmodifiedActionScriptInput&gt;
                &lt;/trigger:TriggerRuleType&gt;
                &lt;/agg:AggregatorConfig&gt;
                &lt;agg:AggregatorData /&gt;
                &lt;/Content&gt;
                &lt;/ServiceGroupRegistrationParameters&gt;
                &lt;/ServiceGroupRegistrations&gt;
            </screen>
            <para>Let's break this down to examine a few important parts.</para>
            <informaltable>
                <tgroup cols="2">
                    <colspec colnum="1" colname="col1"/>
                    <colspec colnum="2" colname="col2"/>
                    <tbody>
                        <row>
                            <entry  namest="col1" nameend="col2">A. Preliminaries</entry>
                        </row>
                        <row>
                            <entry>
                                <screen><emphasis role="strong">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
                                    &lt;ServiceGroupRegistrations
                                    xmlns="http://mds.globus.org/servicegroup/client"
                                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                                    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
                                    xmlns:agg="http://mds.globus.org/aggregator/types"&gt;
                                    &lt;/ServiceGroupRegistrations&gt;</emphasis>
                                </screen>
                            </entry>
                            
                            <entry>As this is an XML document, it must be properly formatted XML.
                                Start your file with the appropriate header, including relevant
                                namespaces.The ServiceGroupRegistration node is the root of the document.</entry>
                        </row>
                        
                        <row>
                            <entry  namest="col1" nameend="col2">B. Aggregator Sink / Service Group Registration Information (for more information, go 
                            <ulink url="http://www.globus.org/toolkit/docs/4.0/info/aggregator/Query_Aggregator_Source.html">here</ulink>).</entry>
                        </row>
                        
                        <row>
                            <entry>
                                <screen>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
                                    &lt;ServiceGroupRegistrations
                                    xmlns="http://mds.globus.org/servicegroup/client"
                                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                                    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
                                    xmlns:agg="http://mds.globus.org/aggregator/types"&gt;
                                    <emphasis>&lt;defaultServiceGroupEPR&gt;
                                        &lt;/defaultServiceGroupEPR&gt;</emphasis>
                                    &lt;/ServiceGroupRegistrations&gt;
                                </screen>
                            </entry>
                            <entry>Although many service group registration blocks may be present, in this example we'll only create one.</entry>
                        </row>
                        <row>
                            <entry>
                                <screen>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
                                    &lt;ServiceGroupRegistrations
                                    xmlns="http://mds.globus.org/servicegroup/client"
                                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                                    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
                                    xmlns:agg="http://mds.globus.org/aggregator/types"&gt;
                                    &lt;defaultServiceGroupEPR&gt;
                                    <emphasis>&lt;wsa:Address&gt;
                                        https://your-install-location:8081/wsrf/services/DefaultTriggerService
                                        &lt;/wsa:Address&gt;</emphasis>
                                    &lt;/defaultServiceGroupEPR&gt;
                                    &lt;/defaultServiceGroupEPR&gt;
                                    &lt;/ServiceGroupRegistrations&gt;
                                    
                                </screen>
                            </entry>
                            <entry>
                                <para>We will be using the local DefaultTriggerService as our main service group. All registrations from this configuration will be
                                    registered to this service.</para>
                                <para>You can test that the DefaultTriggerService is up and functioning by typing (in one line):</para>
                                <para><screen>$GLOBUS_LOCATION/bin/wsrf-query -s https://your-install-location:8081/wsrf/services/DefaultTriggerService</screen></para>
                                <para>Although there may not be much useful output, if you get some XML output, your trigger service should be up and running.</para>
                            </entry>
                        </row>
                        
                        <row>
                            <entry  namest="col1" nameend="col2">C. Aggregator Source Configuration (for more information, go <ulink url="http://www.globus.org/toolkit/docs/4.0/info/aggregator/Query_Aggregator_Source.html">here</ulink>).</entry>
                        </row>
                        
                        <row>
                            <entry>
                                <screen>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
                                    &lt;ServiceGroupRegistrations
                                    xmlns="http://mds.globus.org/servicegroup/client"
                                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                                    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
                                    xmlns:agg="http://mds.globus.org/aggregator/types"&gt;
                                    &lt;defaultServiceGroupEPR&gt;
                                    &lt;wsa:Address&gt;
                                    https://your-install-location:8081/wsrf/services/DefaultTriggerService
                                    &lt;/wsa:Address&gt;
                                    &lt;/defaultServiceGroupEPR&gt;
                                    <emphasis role="strong">&lt;ServiceGroupRegistrationParameters
                                        xmlns="http://mds.globus.org/servicegroup/client"
                                        xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
                                        xmlns:agg="http://mds.globus.org/aggregator/types"
                                        xmlns:trigger="http://mds.globus.org/2004/08/trigger/types"&gt;
                                        &lt;/ServiceGroupRegistrationParameters&gt;</emphasis>
                                    &lt;/ServiceGroupRegistrations&gt;
                                </screen>
                            </entry>
                            <entry>Now we will specify the parameters used to register a resource
                                (e.g. information provider) to the service group (i.e. our trigger
                                service).</entry>
                        </row>
                        
                        <row>
                            <entry>
                                <screen>...
                                    &lt;ServiceGroupRegistrationParameters
                                    xmlns="http://mds.globus.org/servicegroup/client"
                                    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
                                    xmlns:agg="http://mds.globus.org/aggregator/types"
                                    xmlns:trigger="http://mds.globus.org/2004/08/trigger/types"&gt;
                                    <emphasis role="strong">&lt;RegistrantEPR
                                        xmlns:gram="http://www.globus.org/namespaces/2004/10/gram/job"
                                        xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
                                        &lt;wsa:Address&gt;
                                        https://cluster-location-with-pbs:8443/wsrf/services/ManagedJobFactoryService
                                        &lt;/wsa:Address&gt;
                                        &lt;wsa:ReferenceProperties&gt;
                                        &lt;gram:ResourceID&gt;PBS&lt;/gram:ResourceID&gt;
                                        &lt;/wsa:ReferenceProperties&gt;
                                        &lt;/RegistrantEPR&gt;</emphasis>
                                    &lt;/ServiceGroupRegistrationParameters&gt;
                                    ...
                                </screen>
                            </entry>
                            <entry>We will set the <emphasis role="strong">RegistrantEPR</emphasis> to the entity (or information
                                provider) to be monitored, in this case we will be monitoring the
                                ManagedJobFactoryService of a GT4 deployment on a cluster with PBS. We
                                must also set the ResourceID to: <emphasis role="strong">PBS</emphasis></entry>
                        </row>
                        
                        <row>
                            <entry>
                                <screen>...
                                    &lt;ServiceGroupRegistrationParameters
                                    xmlns="http://mds.globus.org/servicegroup/client"
                                    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
                                    xmlns:agg="http://mds.globus.org/aggregator/types"
                                    xmlns:trigger="http://mds.globus.org/2004/08/trigger/types"&gt;
                                    &lt;RegistrantEPR
                                    xmlns:gram="http://www.globus.org/namespaces/2004/10/gram/job"
                                    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
                                    &lt;wsa:Address&gt;
                                    https://cluster-location-with-pbs:8443/wsrf/services/ManagedJobFactoryService
                                    &lt;/wsa:Address&gt;
                                    &lt;wsa:ReferenceProperties&gt;
                                    &lt;gram:ResourceID&gt;PBS&lt;/gram:ResourceID&gt;
                                    &lt;/wsa:ReferenceProperties&gt;
                                    &lt;/RegistrantEPR&gt;
                                    <emphasis role="strong">&lt;RefreshIntervalSecs&gt;600&lt;/RefreshIntervalSecs&gt;</emphasis>
                                    &lt;/ServiceGroupRegistrationParameters&gt;
                                    
                                    ...
                                </screen>
                            </entry>
                            <entry>Set the <emphasis role="strong">RefreshIntervalSecs</emphasis> parameter to the number of
                                seconds upon which the registration will be renewed (this is to keep
                                the registration from expiring): <emphasis role="strong">600</emphasis>"600" means that we'll renew the registration every 10 minutes.</entry>
                        </row>
                        
                        <row>
                            <entry>
                                <screen>...
                                    &lt;ServiceGroupRegistrationParameters
                                    xmlns="http://mds.globus.org/servicegroup/client"
                                    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
                                    xmlns:agg="http://mds.globus.org/aggregator/types"
                                    xmlns:trigger="http://mds.globus.org/2004/08/trigger/types"&gt;
                                    &lt;RegistrantEPR
                                    xmlns:gram="http://www.globus.org/namespaces/2004/10/gram/job"
                                    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"&gt;
                                    &lt;wsa:Address&gt;
                                    https://cluster-location-with-pbs:8443/wsrf/services/ManagedJobFactoryService
                                    &lt;/wsa:Address&gt;
                                    &lt;wsa:ReferenceProperties&gt;
                                    &lt;gram:ResourceID&gt;PBS&lt;/gram:ResourceID&gt;
                                    &lt;/wsa:ReferenceProperties&gt;
                                    &lt;/RegistrantEPR&gt;
                                    &lt;RefreshIntervalSecs&gt;600&lt;/RefreshIntervalSecs&gt;
                                    <emphasis role="strong">&lt;Content xsi:type="agg:AggregatorContent"
                                        xmlns:agg="http://mds.globus.org/aggregator/types"&gt;
                                        &lt;agg:AggregatorConfig xsi:type="agg:AggregatorConfig"&gt;
                                        &lt;/agg:AggregatorConfig&gt;
                                        &lt;/Content&gt;</emphasis>
                                    &lt;/ServiceGroupRegistrationParameters&gt;
                                    ...
                                </screen>
                            </entry>
                            
                            <entry>Now we configure aggregator-source-specific configuration parameters.</entry>
                        </row>
                        <row>
                            <entry>
                                <screen>...
                                    &lt;Content xsi:type="agg:AggregatorContent"
                                    xmlns:agg="http://mds.globus.org/aggregator/types"&gt;
                                    &lt;agg:AggregatorConfig xsi:type="agg:AggregatorConfig"&gt;
                                    <emphasis role="strong">&lt;agg:GetResourcePropertyPollType
                                        xmlns:glue="http://mds.globus.org/glue/ce/1.1"&gt;
                                        &lt;agg:PollIntervalMillis&gt;60000&lt;/agg:PollIntervalMillis&gt;
                                        &lt;/agg:GetResourcePropertyPollType&gt;</emphasis>
                                    &lt;/agg:AggregatorConfig&gt;
                                    &lt;agg:AggregatorData /&gt;
                                    &lt;/Content&gt;
                                    ...
                                </screen>
                            </entry>
                            <entry>Set this to how often you'll be polling the information provider for data and refreshing the current information: 
                                <emphasis role="strong">60000</emphasis>"60000" means that you'll be checking the information provider every minute.</entry>
                        </row>
                        
                        <row>
                            <entry>
                                <screen>...
                                    &lt;Content xsi:type="agg:AggregatorContent"
                                    xmlns:agg="http://mds.globus.org/aggregator/types"&gt;
                                    &lt;agg:AggregatorConfig xsi:type="agg:AggregatorConfig"&gt;
                                    &lt;agg:GetResourcePropertyPollType
                                    xmlns:glue="http://mds.globus.org/glue/ce/1.1"&gt;
                                    &lt;agg:PollIntervalMillis&gt;60000&lt;/agg:PollIntervalMillis&gt;
                                    <emphasis role="strong">&lt;agg:ResourcePropertyName&gt;glue:GLUECE&lt;/agg:ResourcePropertyName&gt;</emphasis>
                                    &lt;/agg:GetResourcePropertyPollType&gt;
                                    &lt;/agg:AggregatorConfig&gt;
                                    &lt;agg:AggregatorData /&gt;
                                    &lt;/Content&gt;
                                    
                                    ...
                                </screen>
                            </entry>
                            <entry>Set this to the name of the resource property that the data is accessed by: 
                                <emphasis role="strong">glue:GLUECE</emphasis>[The format is <emphasis>rp_namespace:rp_localname</emphasis>]You can view some active ResourcePropertyNames as you poll the DefaultIndexService.</entry>
                        </row>
                        
                        <row>
                            <entry  namest="col1" nameend="col2">D. Trigger Configuration Information (for more information: go 
                            <ulink url="http://www-unix.globus.org/toolkit/docs/development/4.1.0/info/trigger/admin/index.html">here</ulink>).</entry>
                        </row>
                        <row>
                            <entry>
                                <screen>...
                                    &lt;Content xsi:type="agg:AggregatorContent"
                                    xmlns:agg="http://mds.globus.org/aggregator/types"&gt;
                                    &lt;agg:AggregatorConfig xsi:type="agg:AggregatorConfig"&gt;
                                    &lt;agg:GetResourcePropertyPollType
                                    xmlns:glue="http://mds.globus.org/glue/ce/1.1"&gt;
                                    &lt;agg:PollIntervalMillis&gt;60000&lt;/agg:PollIntervalMillis&gt;
                                    &lt;agg:ResourcePropertyName&gt;glue:GLUECE&lt;/agg:ResourcePropertyName&gt;
                                    &lt;/agg:GetResourcePropertyPollType&gt;
                                    <emphasis role="strong">&lt;trigger:TriggerRuleType&gt;
                                        &lt;/trigger:TriggerRuleType&gt;</emphasis>
                                    &lt;/agg:AggregatorConfig&gt;
                                    &lt;agg:AggregatorData /&gt;
                                    &lt;/Content&gt;
                                    ...
                                </screen>
                            </entry>
                            <entry>Now that we've set up the aggregator source to monitor an
                                information provider (the ManagedJobFactoryService) and set a trigger
                                (the DefaultTriggerService) as the aggregator service/sink, we will
                                configure the trigger.</entry>
                        </row>
                        
                        <row>
                            <entry>
                                <screen>...
                                    &lt;trigger:TriggerRuleType&gt;
                                    &lt;trigger:matchingRule&gt;
                                    //*/glue:GLUECE//glue:ComputingElement[@glue:Name='normal'
                                    and glue:Info/@glue:LRMSType='PBS' 
                                    and glue:State/@glue:FreeCPUs&gt;0]
                                    &lt;/trigger:matchingRule&gt;
                                    &lt;/trigger:TriggerRuleType&gt;
                                    ...
                                </screen>
                            </entry>
                            <entry><para>Set this to the XPath rule you wish to compare and match against incoming data.  It will ideally fit on one line.</para>
                                <para>We can test this query using <emphasis role="strong">wsrf-query</emphasis> as we did above while setting up the GT4 environment.</para>
                            </entry>
                        </row>
                        
                        <row>
                            
                            <entry>
                                <screen>...
                                    &lt;trigger:TriggerRuleType&gt;
                                    &lt;trigger:matchingRule&gt;
                                    //*/glue:GLUECE//glue:ComputingElement[@glue:Name='normal' 
                                    and glue:Info/@glue:LRMSType='PBS' 
                                    and glue:State/@glue:FreeCPUs&gt;0]
                                    &lt;/trigger:matchingRule&gt;
                                    <emphasis role="strong">&lt;trigger:namespaceMappings&gt;
                                        xmlns:glue=http://mds.globus.org/glue/ce/1.1
                                        &lt;/trigger:namespaceMappings&gt;</emphasis>
                                    &lt;/trigger:TriggerRuleType&gt;
                                    ...
                                </screen>
                            </entry>
                            <entry>If you use namespace prefixes in the above XPath matchingRule, you
                                can specify an array of namespace mappings that will be used to resolve
                                the namespace prefixes. Format: <emphasis>xmlns:foo=http://foo.bar</emphasis>In this example, this parameter is <emphasis role="strong">required</emphasis>.</entry>
                        </row>
                        
                        <row>
                            <entry>
                                <screen>...
                                    &lt;trigger:TriggerRuleType&gt;
                                    &lt;trigger:matchingRule&gt;
                                    //*/glue:GLUECE//glue:ComputingElement[@glue:Name='normal' 
                                    and glue:Info/@glue:LRMSType='PBS' 
                                    and glue:State/@glue:FreeCPUs&gt;0]
                                    &lt;/trigger:matchingRule&gt;
                                    &lt;trigger:namespaceMappings&gt;
                                    xmlns:glue=http://mds.globus.org/glue/ce/1.1
                                    &lt;/trigger:namespaceMappings&gt;
                                    <emphasis role="strong">&lt;trigger:actionScript&gt;our-simple-trigger&lt;/trigger:actionScript&gt;</emphasis>
                                    &lt;/trigger:TriggerRuleType&gt;
                                    ...
                                    
                                </screen>
                            </entry>
                            <entry>
                                <para>Set this to the name of the action script that will be executed when the matchingRule matches any nodes of incoming data: 
                                <emphasis role="strong">our-simple-trigger</emphasis></para><para>This logical name must be mapped to a physical file name located in the 
                                    <screen>$GLOBUS_LOCATION/libexec/trigger/</screen> directory.</para>
                                <para>The logical-to-physical filename mapping is specified in the <screen>executableMappings</screen> parameter of the 
                                    <screen>triggerConfiguration</screen> block of the file: <screen>$GLOBUS_LOCATION/etc/globus_wsrf_mds_trigger/jndi-config.xml</screen></para>
                                <para>Don't worry about these files now, we'll revisit them in the next section.</para></entry>
                            
                        </row>
                        
                        <row>
                            <entry>
                                <screen>...
                                    &lt;trigger:TriggerRuleType&gt;
                                    &lt;trigger:matchingRule&gt;
                                    //*/glue:GLUECE//glue:ComputingElement[@glue:Name='normal' 
                                    and glue:Info/@glue:LRMSType='PBS' 
                                    and glue:State/@glue:FreeCPUs&gt;0]
                                    &lt;/trigger:matchingRule&gt;
                                    &lt;trigger:namespaceMappings&gt;
                                    xmlns:glue=http://mds.globus.org/glue/ce/1.1
                                    &lt;/trigger:namespaceMappings&gt;
                                    &lt;trigger:actionScript&gt;our-simple-trigger&lt;/trigger:actionScript&gt;
                                    <emphasis role="strong">&lt;trigger:minimumFiringInterval&gt;60&lt;/trigger:minimumFiringInterval&gt;</emphasis>
                                    &lt;/trigger:TriggerRuleType&gt;
                                    ...
                                </screen>
                            </entry>
                            <entry><para>Set this to the number of seconds no more than which you want the action script to be executed: <emphasis role="strong">60</emphasis></para>
                                <para>Here the action script will be executed no more than once every minute.</para>
                                <para>If unspecified, there will be no minimum interval, and it will be fired whenever incoming data matches the matchingRule.</para></entry>
                            
                        </row>
                        
                        <row>
                            <entry>
                                <screen>...
                                    &lt;trigger:TriggerRuleType&gt;
                                    &lt;trigger:matchingRule&gt;
                                    //*/glue:GLUECE//glue:ComputingElement[@glue:Name='normal' 
                                    and glue:Info/@glue:LRMSType='PBS' 
                                    and glue:State/@glue:FreeCPUs&gt;0]
                                    &lt;/trigger:matchingRule&gt;
                                    &lt;trigger:namespaceMappings&gt;
                                    xmlns:glue=http://mds.globus.org/glue/ce/1.1
                                    &lt;/trigger:namespaceMappings&gt;
                                    &lt;trigger:actionScript&gt;our-simple-trigger&lt;/trigger:actionScript&gt;
                                    &lt;trigger:minimumFiringInterval&gt;60&lt;/trigger:minimumFiringInterval&gt;
                                    <emphasis role="strong">&lt;trigger:minimumMatchTime&gt;30&lt;/trigger:minimumMatchTime&gt;</emphasis>
                                    &lt;/trigger:TriggerRuleType&gt;
                                    ...
                                </screen>
                            </entry>
                            <entry><para>Set this to how long the matchingRule must be true before the action script will be executed: <emphasis role="strong">30</emphasis></para>
                                <para>Here the condition must be true for 30 seconds before the actionScript will be eligible to fire.</para>
                                <para>If unspecified, the trigger will be eligible to fire immediatedly after the matchingRule properly matches incoming data.</para></entry>
                        </row>
                        
                        <row>
                            <entry>
                                <screen>...
                                    &lt;trigger:TriggerRuleType&gt;
                                    &lt;trigger:matchingRule&gt;
                                    //*/glue:GLUECE//glue:ComputingElement[@glue:Name='normal' 
                                    and glue:Info/@glue:LRMSType='PBS' 
                                    and glue:State/@glue:FreeCPUs&gt;0]
                                    &lt;/trigger:matchingRule&gt;
                                    &lt;trigger:namespaceMappings&gt;
                                    xmlns:glue=http://mds.globus.org/glue/ce/1.1
                                    &lt;/trigger:namespaceMappings&gt;
                                    &lt;trigger:actionScript&gt;our-simple-trigger&lt;/trigger:actionScript&gt;
                                    &lt;trigger:minimumFiringInterval&gt;60&lt;/trigger:minimumFiringInterval&gt;
                                    &lt;trigger:minimumMatchTime&gt;30&lt;/trigger:minimumMatchTime&gt;
                                    <emphasis role="strong">&lt;trigger:enableFilteredActionScriptInput&gt;
                                        true
                                        &lt;/trigger:enableFilteredActionScriptInput&gt;</emphasis>
                                    &lt;/trigger:TriggerRuleType&gt;
                                    ...
                                </screen>
                            </entry>
                            <entry>Set this to <emphasis role="strong">true</emphasis> since we will be parsing the output provided by the trigger and passing this to the action script.</entry>
                        </row>
                        
                        <row>
                            <entry>
                                <screen>...
                                    &lt;trigger:TriggerRuleType&gt;
                                    &lt;trigger:matchingRule&gt;
                                    //*/glue:GLUECE//glue:ComputingElement[@glue:Name='normal' 
                                    and glue:Info/@glue:LRMSType='PBS' 
                                    and glue:State/@glue:FreeCPUs&gt;0]
                                    &lt;/trigger:matchingRule&gt;
                                    &lt;trigger:namespaceMappings&gt;
                                    xmlns:glue=http://mds.globus.org/glue/ce/1.1
                                    &lt;/trigger:namespaceMappings&gt;
                                    &lt;trigger:actionScript&gt;our-simple-trigger&lt;/trigger:actionScript&gt;
                                    &lt;trigger:minimumFiringInterval&gt;60&lt;/trigger:minimumFiringInterval&gt;
                                    &lt;trigger:minimumMatchTime&gt;30&lt;/trigger:minimumMatchTime&gt;
                                    &lt;trigger:enableFilteredActionScriptInput&gt;
                                    true
                                    &lt;/trigger:enableFilteredActionScriptInput&gt;
                                    <emphasis role="strong">&lt;trigger:disableUnmodifiedActionScriptInput&gt;
                                        true
                                        &lt;/trigger:disableUnmodifiedActionScriptInput&gt;</emphasis>
                                    &lt;/trigger:TriggerRuleType&gt;
                                    ...
                                </screen>
                                
                            </entry>
                            <entry>Set this to <emphasis role="strong">true</emphasis> to increase performance by not passing
                                the original trigger message input (to which the matching rule was
                                applied) to the action script..</entry></row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para>That's all for the trigger configuration.  Now we need to set up the action script and register the trigger.</para>
        </listitem>
    </orderedlist>
    </section>
    <section id="trigger-howto-monitor-script"><title>Step 3 - Set up the trigger action script</title>
    <orderedlist>
        <listitem>
            <para><emphasis>Write the trigger action script</emphasis>. The action script can be written in almost anything, but it <emphasis>must</emphasis>
            output valid XML to stdout. We will be using a Perl script to parse a
            bit of the trigger output and format this information, then write it to
            a log file. If you would like to receive email notification in addition
            to a log trace, see <ulink url="http://www-unix.mcs.anl.gov/%7Erobertm/MDS4HowTo-UsingTriggersToNotifyByEmail.html">this tutorial</ulink>, 
            which extends this section using the same example.</para>
            <para>You may copy the contents of the following Perl script. It is not necessarily the best way to write a script, but it give you an example of what is possible!</para>
            <para>This action script will be created here: <emphasis role="strong"><filename>$GLOBUS_LOCATION/libexec/trigger/our-simple-trigger-action.pl</filename></emphasis></para>
            <screen>                                #!/usr/bin/perl
                
                # CHANGE THIS to where you want to place your log file.  
                # DO NOT use an environment variable in this example; it should be the full path.
                $logfile = "/your-install-location/our_new_entry_detected";
                
                # Grab the date
                $date = `date`; chomp($date);
                
                # Collect the trigger input
                $string = &lt;STDIN&gt;;
                
                # Check on the log file
                $OUTFILE = $logfile;if(!open(OUTFILE, "&gt;&gt;$logfile"))
                {warn "Couldn't open $logfile for appending: $!";}
                
                # Split the output to separate lines
                $string =~ s/&lt;/ggg&lt;/g;
                my @records = split("ggg",$string);
                
                our @newrecs;
                
                # Parse each line of input for signs of FreeCPUs
                foreach $record (@records)
                {
                if($record =~ /FreeCPUs=\W+(\d+)\W+/) {
                $str = "$date :: FreeCPUs: $1\n";
                # This step adds the occurences to an array, and you
                # can decide what you want to do with it.
                push @newrecs, $str;
                }
                }
                
                # Output the first line of the array to the logfile.
                print OUTFILE ($newrecs[0]);
                
                # NOTE, in the case that the FreeCPU occurences are not identical, 
                #you can decide which values are more important for your purposes.
                
                # All trigger action scripts must output valid XML.
                print "&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;
                &lt;OurActionScriptOutput&gt;
                &lt;OurDataDetected&gt;true&lt;/OurDataDetected&gt;
                &lt;/OurActionScriptOutput&gt;";
            </screen>
        </listitem>
        <listitem>
            <para><emphasis>Modify the permissions</emphasis> on the action script.  Be sure the the action script is <emphasis role="strong">executable</emphasis>:</para>
            <para><emphasis role="strong"><computeroutput>chmod a+x $GLOBUS_LOCATION/libexec/trigger/our-simple-trigger-action.sh</computeroutput></emphasis></para>
        </listitem>
        <listitem>
            <para><emphasis>Edit the jndi-config.xml file</emphasis>.  Remember in our trigger configuration file, we specified the name of our action script ("our-simple-trigger") 
                using the <screen>&lt;trigger:actionScript&gt;</screen> node.</para>
            <para>Now we must edit the file: <emphasis role="strong">$GLOBUS_LOCATION/etc/globus_wsrf_mds_trigger/jndi-config.xml</emphasis></para>
            <para>Find the <screen>executableMappings</screen> section of the file, and we will add our trigger action script mapping to the file.</para>
            <screen>                                ...
                &lt;jndiConfig&gt;
                &lt;global&gt;
                
                &lt;resource name="triggerConfiguration"&gt;
                &lt;resourceParams&gt;
                &lt;parameter&gt;  &lt;-- PLEASE note that this section is commented out by default.  
                You must uncomment it!
                &lt;name&gt;executableMappings&lt;/name&gt;
                &lt;value&gt;test-trigger=test-trigger-action.sh, 
                glue-trigger=glue-trigger-action.sh, 
                echo-trigger=echo-trigger-action.sh,  &lt;-- don't forget to add a comma here.
                <emphasis role="strong">our-simple-trigger=our-simple-trigger-action.sh</emphasis>
                &lt;/value&gt;
                &lt;/parameter&gt;
                &lt;/resourceParams&gt;
                &lt;/resource&gt;
                &lt;/global&gt;
                &lt;/jndiConfig&gt;
                ...
            </screen>
        </listitem>
    </orderedlist>
    </section>
    <section id="trigger-howto-monitor-create"><title>Step 4 - Create the trigger</title>
        <para>The trigger is virtually created when you write the configuration file, but it is not really created until it is registered. It is now time to
            register the trigger. The registration step is necessary to connect the information source with the Trigger (aggregator service). This step
            provides access to the information source data so that the trigger can then make this information available and act on it accordingly.</para>
        
        <orderedlist>
            <listitem>
                <para><emphasis>Start the container</emphasis>.  You may have noticed that we used port 8081 in the trigger configuration file.  You can specify this by using the <emphasis role="strong">-p</emphasis> parameter:</para>
                <para><emphasis role="strong"><computeroutput>$GLOBUS_LOCATION/bin/globus-start-container -p 8081</computeroutput></emphasis></para>
                <para>You may also need to generate a new proxy certificate: <screen>$GLOBUS_LOCATION/bin/grid-proxy-init -verify -debug</screen></para>
                <para>If security is not enabled you could try to start the container without enforcing security using the <emphasis role="strong">-nosec</emphasis> parameter:</para>
                <para><screen>$GLOBUS_LOCATION/bin/globus-start-container -p 8081 -nosec</screen></para>
            </listitem>
            <listitem>
                <para><emphasis>Register the trigger</emphasis></para>
                <para>We will now run <emphasis role="strong">mds-servicegroup-add</emphasis> to perform the registrations specified in the configuration file. This
                    tool takes an XML configuration file listing registrations, and causes those registrations to be made.</para>
                <para>Run the following command: Be sure this command is on one line.</para>
                <para><emphasis role="strong"><computeroutput>$GLOBUS_LOCATION/bin/mds-servicegroup-add -s https://your-install-location:8081/wsrf/services/DefaultTriggerService $GLOBUS_LOCATION/etc/globus_wsrf_mds_trigger/our-simple-trigger-config.xml</computeroutput></emphasis></para>
                <para>If everything went well, you should get something like:</para>
                <screen>            Processing configuration file...
            Processed 1 registration entries
            Successfully registered https://cluster-location-with-pbs:8443/wsrf/services/ManagedJobFactoryService\
            to servicegroup at https://your-install-location:8081/wsrf/services/DefaultTriggerService
                </screen>
            </listitem>
        </orderedlist>
    </section>
    <section id="trigger-howto-monitor-test"><title>Step 5 - Test the trigger</title>
        <orderedlist>
            <listitem>
                <para>Now that our trigger is registered, it's ready to perform actions. We set our trigger to fire about every two minutes or so to let us know how
                    many FreeCPUs there are. We set our action script to parse and log this information to a convenient location: "/your-install-location/our_new_entry_detected" </para>
                <para>Now we want to check that file to see if a new entry/log has been recorded.</para>
            </listitem>
            <listitem>
                <para>After a few minutes, if everything went properly, we should be able to open the file: "<emphasis role="strong">/your-install-location/our_new_entry_detected</emphasis>" 
                    and see something like the following:</para>
                <screen>            Mon Nov 27 18:00:52 PST 2006 :: FreeCPUs: 66
            Mon Nov 27 18:01:52 PST 2006 :: FreeCPUs: 66
            Mon Nov 27 18:03:52 PST 2006 :: FreeCPUs: 66
            Mon Nov 27 18:04:52 PST 2006 :: FreeCPUs: 66
            Mon Nov 27 18:06:52 PST 2006 :: FreeCPUs: 74
            Mon Nov 27 18:07:53 PST 2006 :: FreeCPUs: 74
                </screen>
            </listitem>
            <listitem>
                <para><emphasis>Troubleshooting</emphasis></para>
                <para>The main areas where trouble may arise in this example are in making sure that the action script is properly written. Here are some guidelines:</para>
                <itemizedlist>
                    <listitem>
                        <para>Turn on debugging by adding the following line to your <emphasis role="strong">$GLOBUS_LOCATION/container-log4j.properties</emphasis> file:</para>
                        <para><emphasis role="strong"><computeroutput>log4j.category.org.globus.mds.trigger=DEBUG</computeroutput></emphasis></para>
                    </listitem>
                    <listitem>
                        <para>If you are getting the following error:</para>
                        <para>
                            <screen>            2006-11-27T16:11:01,186-08:00
            WARN impl.TriggerResource
            [org.globus.mds.aggregator.impl.PollingAggregatorSource$QueryTimerListener,deliver:677]
            Exception while attempting to execute the trigger action:
            java.lang.Exception: Exception while parsing output from action script:
            org.xml.sax.SAXException: Fatal Error: URI=null Line=-1: Premature end
             of file.</screen></para>
                        <para>It's most likely due to your action script.</para>
                        <para>Be sure that your script outputs valid XML to stdout, and <emphasis>nothing else</emphasis>! This is important because if your script returns an error or warning,
                            for instance (which is typically not XML), you will get the above error. This makes things somewhat difficult to debug, but try testing
                            out your script in a separate instance so that you can get most of the bugs out, then try to use it with your trigger. Or simplify your action
                            script and then gradually add complexity until you find out where it stops working.</para>
                    </listitem>
                </itemizedlist>
            </listitem>
        </orderedlist>
    </section>
    <section id="trigger-howto-monitor-congrats"><title>Congratulations!</title>
            <para>If all went well, then you have successfully set up a trigger! Explore the possibilities by creating your own scripts and XPath conditions. Use
            the HowTos to assist you and have fun creating triggers!</para>
        </section>


            