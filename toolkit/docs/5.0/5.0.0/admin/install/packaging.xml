<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<appendix id="gtadmin-packaging" xreflabel="Packaging Details for Installing GT"><title>Packaging details</title>
<section id="gtadmin-makefile"><title>The makefile</title>
<para>
You do not have to build every subcomponent of this release.  The
makefile specifies subtargets for different functional subpieces.
</para>

<itemizedlist><title>Makefile targets</title>
<listitem><simpara>i18n: Internationalization libraries
</simpara></listitem>
<listitem><simpara>prewsgram: GRAM5
</simpara></listitem>
<listitem><simpara>gridftp: GridFTP
</simpara></listitem>
<listitem><simpara>prews: GRAM5 and GridFTP
</simpara></listitem>
<listitem><simpara>prews-test: Tests for pre-webservices components
</simpara></listitem>
<listitem><simpara>rls: Replica Location Service
</simpara></listitem>
</itemizedlist>

<para>
Note that all of these targets require the "install" target also.
So, for instance, to build GridFTP alone, you would run:

<screen>
$ ./configure --prefix=/path/to/install
$ make gridftp install
</screen>
</para>
</section>

<section><title>The Grid Packaging Toolkit</title>
<para>
The Globus Toolkit is packaged using the Grid Packaging Toolkit (GPT).
The GPT provides a way for us to version packages and express dependencies
between packages.  The Makefile for the installer is automatically
generated based on the GPT dependencies expressed in CVS.  GPT versions
also allow us to release update packages for small subsets of our code.
For more information on the GPT, you may see its
<ulink url="http://gridpackagingtools.com/book/latest-stable/index.html">
website</ulink>.
</para>
</section>

<section><title>Picking a flavor for a source installation</title>
<para>
If you're building on a platform that is not auto-detected by the configure
script, you will be prompted to specify a flavor for the <option>--with-flavor=</option> option.  Typically "gcc32dbg" will work as a flavor to build 32-bit
binaries using gcc.  If you want to force a 64bit build, "gcc64dbg" should work.</para>
<para>
Some platforms have better support from their native compilers, so you can use "vendorcc32dbg" to build using the native cc.  Similarly, "vendorcc64dbg" will force a 64bit build instead.
</para>
</section>

</appendix>
