<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<section id="gridftp-featuresummary">
  <title>Feature Summary</title>
  <para>Features new in GT <replaceable role="entity">version</replaceable>:
    
    <itemizedlist>
      <listitem>
     <simpara><olink targetdoc="gridftpAdmin"
      targetptr="chroot-gridftp">Chrooting GridFTP server</olink>:</simpara>
      <simpara>Restrict access to a specific path. </simpara>
      </listitem>
      <listitem>
      <simpara><olink targetdoc="gridftpDeveloper"
      targetptr="gridftp-developer-dcsc-spec">New Data Channel Security Context
      (DCSC) command</olink>
      </simpara>
      <simpara>
      The current DCAU protocol uses an SSL context that contains the logged in
      user's credential.  If two servers have different user credentials and do
      not have each others' CA certificates, a client can not perform a secure
      3rd party transfer between them.  If one of the servers supports DCSC,
      a client can tell it to both send and accept the user credential used by
      the other server, thus enabling DCAU where it previously was not possible.
      If both servers support DCSC, clients that desire higher security may
      specify a random, self signed certificate as the DCAU context.
       </simpara>
      </listitem>
      <listitem>
      <simpara>Command strings for '-disable-command-list' option in server can
      take arguments
      </simpara>
      <simpara>
      For eg. -disable-command-list 'DCAU N' or -disable-command-list 'MODE E'
      or -disable-command-list 'DCAU N', 'MODE E' can be done.
      </simpara>
      </listitem>
      <listitem>
      <simpara> Progress markers for stream mode </simpara>
      <simpara> In instances where a gridftp transfer can not abide by the 
      Mode E directionality limitation, stream mode must be used. Progress
      markers have been enabled for stream mode as well. </simpara>
      </listitem>
    </itemizedlist></para>
  <para>Features that continue to be supported from previous versions <itemizedlist>
    <listitem>
        <simpara>Synchronize datasets</simpara>
    </listitem>
    <listitem>
        <simpara>Improved failure restart capability in globus-url-copy</simpara>
    </listitem>
    <listitem>
        <simpara>Stall detection</simpara>
    </listitem>
    <listitem>
        <simpara>Client-side host aliasing</simpara>
    </listitem>
    <listitem>
      <simpara>GridFTP over
        UDT</simpara>
    </listitem>
    <listitem>
      <simpara>SSH security for GridFTP control channel</simpara>
    </listitem>
    <listitem>
      <simpara>Running the
        GridFTP server with GFork GridFTP
      </simpara>
    </listitem>
    <listitem>
      <simpara>Multicasting /
        Network overlays (EXPERIMENTAL)
      </simpara>
    </listitem>
    <listitem>
      <simpara>Netlogger's
        bottleneck detection for GridFTP transfers</simpara>
    </listitem>
      <listitem>
        <simpara>GSI security: This is the PKI based, de facto standard security system used in Grid
          applications. Kerberos is also possible but is not supported and can be difficult to use
          due to divergence in the capabilities of GSI and Kerberos.</simpara>
      </listitem>
      <listitem>
        <simpara>Third-party transfers: Very common in Grid applications, this is where a
            <glossterm>client</glossterm> mediates a transfer between two servers (both likely at
          remote sites) rather than between the server and itself (called a <glossterm>client/server
            transfer</glossterm>).</simpara>
      </listitem>
      <listitem>
        <simpara>Cluster-to-cluster data movement or Striping: GridFTP can do coordinated data
          transfer by using multiple computer nodes at the source and destination. </simpara>
      </listitem>
      <listitem>
        <simpara>Partial file access: Regions of a file may be accessed by specifying an offset into
          the file and the length of the block desired.</simpara>
      </listitem>
      <listitem>
        <simpara>Reliability/restart: The receiving server periodically (the default is 5 seconds,
          but this can be changed) sends &ldquo;restart markers&rdquo; to the client. This marker is
          a messages specifying what bytes have been successfully written to the disk. If the
          transfer fails, the client may restart the transfer and provide these markers (or an
          aggregated equivalent marker), and the transfer will pick up where it left off. This can
          include &ldquo;holes&rdquo; in the file.</simpara>
      </listitem>
      <listitem>
        <simpara>Large file support: All file sizes, lengths, and offsets are 64 bits in
        length.</simpara>
      </listitem>
      <listitem>
        <simpara>Data channel reuse: Data channel can be held open and reused if the next transfer
          has the same source, destination, and credentials. This saves the time of connection
          establishment, authentication, and delegation. This can be a huge performance difference
          when moving lots of small files.</simpara>
      </listitem>
      <listitem>
        <simpara>Integrated instrumentation (Performance Markers).</simpara>
      </listitem>
      <listitem>
        <simpara>Logging/audit trail (Extensive Logging in the server).</simpara>
      </listitem>
      <listitem>
        <simpara>Parallel transfers (Multiple TCP streams between a pair of hosts).</simpara>
      </listitem>
      <listitem>
        <simpara>TCP Buffer size control (Protocol supports Manual and Automatic; Only Manual
          Implemented).</simpara>
      </listitem>
      <listitem>
        <simpara>Server-side computation (Extended Retrieve (ERET) / Extended Store (ESTO)
          commands).</simpara>
      </listitem>
      <listitem>
        <simpara>Based on Standards: RFC 959, RFC 2228, RFC 2389, IETF Draft MLST-16 , GGF
        GFD.020.</simpara>
      </listitem>
    </itemizedlist></para>
  <para>Other Supported Features <itemizedlist>
      <listitem>
        <simpara>On the client side we provide a scriptable tool called globus-url-copy. This tool
          can take advantage of all the GridFTP protocol features and can also do protocol
          translation between FTP, HTTP, HTTPS, and POSIX file IO on the client machine. </simpara>
      </listitem>
      <listitem>
        <simpara>We also provide a set of development libraries and APIs for developers wishing to
          add GridFTP functionality to their application.</simpara>
      </listitem>
    </itemizedlist> Deprecated Features <itemizedlist>
      <listitem>
        <simpara>None</simpara>
      </listitem>
    </itemizedlist></para>
</section>
