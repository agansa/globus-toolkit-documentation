<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[

<!ENTITY % xinclude SYSTEM "../../xinclude.mod" >
%xinclude;

]>
<book id="dataKey">
<title>Data Management: Key Concepts</title>
<titleabbrev>Key Concepts</titleabbrev> 

<bookinfo id="data-key-overview"><abstract><title>Overview of Data Management in GT5</title>
<para>The Globus Toolkit provides a number of components for doing data management.
  A very high level overview is presented here and then detailed information
is given for the individual components by following the component links.</para>
<para>The components available for data management fall into two basic categories:
  data movement and data replication.</para></abstract>
</bookinfo>

<chapter id="data-key-datamovement"><title>Data movement</title>
<para>Data movement in the Globus Toolkit is accomplished through the
  Globus GridFTP tools. 
<!-- 
  If you are not familiar with FTP in general, it might be a good idea to browse
  relevant definitions [fixme here - olink to glossary].
  -->
</para>

<section><title>GridFTP</title>
<para>GridFTP is a protocol defined by Global Grid Forum Recommendation GFD.020,
  RFC 959, RFC 2228, RFC 2389, and a draft before the IETF FTP working group.
  The GridFTP protocol provides for the secure, robust, fast and efficient transfer
  of (especially bulk) data. The Globus Toolkit provides the most commonly used
  implementation of that protocol, though others do exist (primarily tied to
  proprietary internal systems). </para>
<para>The Globus Toolkit provides:</para>
<itemizedlist>
  <listitem><simpara>a server implementation
          called <computeroutput>globus-gridftp-server</computeroutput>,</simpara></listitem>
  <listitem><simpara> a scriptable command line client called <computeroutput>globus-url-copy</computeroutput>, and</simpara></listitem>
  <listitem><simpara>a set of development libraries for custom clients. </simpara></listitem>
</itemizedlist>
<para>While the Globus
  Toolkit does not provide an interactive client, the <olink targetdoc="gridftpUser">GridFTP
            User's Guide</olink> does provide
            information on at least one interactive client developed by other
            projects.</para>
<para>If you wish to make data available to others, you need to install a
  server on a host that can access that data and make sure that there is an appropriate
  Data Storage Interface (DSI) available for the storage system holding the data.
  This typically means a standard POSIX file system, but DSIs do exist for the
  Storage Resource Broker (SRB), the High Performance Storage System (HPSS),
  and NeST from the Condor team at the University of Wisconsin &ndash; Madison.
  A complete list of DSIs is available [fixme here]. If you need an interface to a
  storage system not listed here, please contact us. While we certainly cannot
  offer to write DSIs for every storage system, we can assist in the development,
  or if a broad enough community can be identified that uses the system, we may
be able to obtain joint funding to develop the necessary interface.</para>
<para>If you simply wish to access data that others have made available, you need
  a GridFTP client. The Globus Toolkit provides a client called <computeroutput>globus-url-copy</computeroutput>  for this purpose. This client is capable of accessing data via a range of protocols
  (http, https, ftp, gsiftp, and file). As noted above this is not an interactive
  client, but a command line interface, suitable for scripting. For example,
the following command:</para>
<screen>globus-url-copy gsiftp://remote.host.edu/path/to/file file:///path/on/local/host</screen>
<para>would transfer a file from a remote host to the locally accessible path specified
in the second URL.</para>
<para>Finally, if you wish to add access to files stored behind GridFTP servers,
  or you need custom client functionality, you can use our very powerful client
library to develop custom client functionality.</para>
<para>
  For more information about GridFTP, see:</para>
  <itemizedlist>
    <listitem><simpara>the <olink targetdoc="gridftp">documentation</olink>.</simpara></listitem>
    <listitem><simpara><ulink url="http://www.globus.org/alliance/publications/papers/gridftp_final.pdf">The Globus Striped GridFTP Framework and Server</ulink></simpara></listitem>
  </itemizedlist>
  
</section>

</chapter>

<chapter id="data-key-datareplication"><title>Data replication</title>
<para>The Replica Location Service (RLS) is one component of data replication services for Grid environments. RLS is a tool that provides
  the ability keep track of one or more copies, or replicas, of files in a Grid environment.
  This tool, which is included in the Globus Toolkit, is especially helpful for
  users or applications that need to find where existing files are located in
  the Grid.</para>
  <section><title> Replica Location Service (RLS)</title>
<para> RLS is a simple registry that keeps track of where replicas
  exist on physical storage systems. Users or services register files in RLS when the files are created. Later, users query RLS servers to find these
  replicas.</para>
<para>RLS is a distributed registry, meaning that it may consist of multiple
  servers at different sites. By distributing the RLS registry, we are able to
  increase the overall scale of the system and store more mappings than would
  be possible in a single, centralized catalog. We also avoid creating a single
  point of failure in the Grid data management system. If desired, RLS can
  also be deployed as a single, centralized server. </para>
<para> Before explaining RLS in detail, we need to define a few terms. </para>
<itemizedlist>
  <listitem><simpara>A <emphasis>logical file name</emphasis> is a unique identifier for the contents
    of a file.</simpara></listitem>
  <listitem><simpara>A <emphasis>physical file name</emphasis> is the location of a copy of the
    file on a storage system. </simpara></listitem>
</itemizedlist>
<para>These terms are illustrated in Figure 1 (below). The job of RLS is to
  maintain associations, or mappings, between logical file names and one or more
  physical file names of replicas. A user can provide a logical file name to
  an RLS server and ask for all the registered physical file names of replicas.
  The user can also query an RLS server to find the logical file name associated
  with a particular physical file location.</para>
<para> In addition, RLS allows users to associate attributes or descriptive
  information (such as size or checksum) with logical or physical file names
  that are registered in the catalog. Users can also query RLS based on these
  attributes.</para>
    
    <figure id="rls_clip_image002_0000"><title>Example of the associations between
      a logical file name and three replicas on different storage sites (RLS).</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="rls_clip_image002_0000.gif" format="GIF" align="center"/>
        </imageobject>
      </mediaobject>
    </figure>
    
</section>

<section><title> Using RLS: An Example</title>
<para> One example of a system that uses RLS as part of its data management
  infrastructure is the Laser Interferometer Gravitational Wave Observatory (LIGO)
  project. LIGO scientists have instruments at two sites that are designed to
  detect the existence of gravitational waves. During a run of scientific experiments
  each LIGO instrument site produces millions of data files. Scientists at eight
  other sites want to copy these large data sets to their local storage systems
  so that they can run scientific analysis on the data. Therefore, each LIGO
  data file may be replicated at up to ten physical locations in the Grid. LIGO
  deploys RLS servers at each site to register local mappings and to collect
  information about mappings at other LIGO sites. To find a copy of a data file
  a scientist requests the file from LIGO&rsquo;s data management system, called
  the Lightweight Data Replicator (LDR). LDR queries the Replica Location Service
  to find out whether there is a local copy of the file; if not, RLS tells
  the data management system where the file exists in the Grid. Then the LDR
  system generates a request to copy the file to the local storage system and
  registers the new copy in the local RLS server. </para>
<para>LIGO currently uses the Replica Location Service in its production data management
  environment. The system registers mappings between more than 3 million logical
  file names and 30 million physical file locations.</para>
</section>
<section><title>For more information</title>
<para>For more detailed information about RLS, click <olink targetdoc="rls">here</olink>.
</para>
  <para>For more information about RLS, see the <olink targetdoc="rls">documentation</olink>.</para>
</section>
</chapter>


  <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="key_rls.xml"/>
  <glossary role="auto" id="glossary-dataKey">
    <!-- 
    <remark>some terms not in the docs but wanted in glossary: 
    <glossterm>scheduler</glossterm>
    </remark>
    -->
    <glossdiv><title>A</title>
      <glossentry>
        <glossterm>Dummy term</glossterm>
        <glossdef>
          <para>This is a dummy entry for the automatic glossary database. Do not edit.</para>
        </glossdef>
      </glossentry>
    </glossdiv>
  </glossary>
</book>