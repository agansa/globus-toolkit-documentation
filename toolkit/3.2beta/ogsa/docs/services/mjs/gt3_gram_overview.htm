<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>GT3 GRAM Overview</title>
</head>

<body>

<h1 align="center" style="margin-left:0in;text-align:center;text-indent:0in;
mso-list:none;tab-stops:.5in"><font face="Verdana">GT3 GRAM Overview<o:p>
</o:p>
</font></h1>
<p class="MsoNormal" align="center" style="margin-bottom:0in;margin-bottom:.0001pt;
text-align:center"><font face="Verdana">Stuart Martin<o:p>
</o:p>
</font></p>
<p class="MsoNormal" align="center" style="margin-bottom:0in;margin-bottom:.0001pt;
text-align:center"><font face="Verdana"><a href="mailto:smartin@mcs.anl.gov">smartin@mcs.anl.gov<o:p>
</o:p>
</a></font></p>
<p class="MsoNormal" align="center" style="margin-bottom:0in;margin-bottom:.0001pt;
text-align:center"><font face="Verdana">Draft January 08, 2003<o:p>
</o:p>
</font></p>
<h1><font face="Verdana">1<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Introduction<o:p>
</o:p>
</font></h1>
<p class="MsoNormal"><font face="Verdana">This document gives an overview of the
Grid Resource Allocation and Management (GRAM) implementation in Globus Toolkit
version 3 (GT3).<span style="mso-spacerun: yes">&nbsp; </span><span style="color:black">The
Globus Resource Allocation Manager (GRAM) is the lowest level of Globus resource
management architecture. GRAM allows you to run jobs remotely, using a</span><span style="mso-bidi-font-size: 13.0pt">
set of WSDL/OGSI client interfaces </span><span style="color: black">for
submitting, monitoring, and terminating a job.</span><span style="color:black"><o:p>
</o:p>
</span></font></p>
<h1><font face="Verdana">2<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Architecture<o:p>
&nbsp;
</font></h1>
<p><img border="0" src="gram-gt3-alpha.jpg" width="778" height="714"></p>
<p class="MsoNormal"><font face="Verdana"><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600"
 o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
 stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:6in;
 height:396pt'>
 <v:imagedata src="../../../../DOCUME~1/smartin/LOCALS~1/Temp/msoclip1/01/clip_image001.jpg"
  o:title="gram-gt3-alpha"/>
</v:shape><![endif]-->
</font></p>
<p><b><font face="Verdana">Architectural Walkthrough<o:p>
</o:p>
</font></b></p>
<p><font face="Verdana">For the above diagram, we walk through a typical GT3
GRAM service invocation from the point of view of the resource and the user.</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">1.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>The Master configures the Redirector to direct createService calls sent
to it through the Starter UHE</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">2.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>The Master publishes its handle to a remote registry</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">3.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>A client submits a createService request which is received by the
Redirector</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">4.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>The Redirector calls the Starter UHE class which authorizes the request
via the grid-mapfile to determine the local username and port to be used and
constructs a target URL</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">5.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="mso-bidi-font-family: Arial">The Redirector attempts to
forward the call to the said target URL. If it is unable to forward the call
because the UHE is not up, the Launch UHE module invoked</span></font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">6.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="mso-bidi-font-family: Arial">The Launch UHE creates a new
UHE process under the authenticated user’s local uid.</span></font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">7.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>The Starter UHE waits for the UHE to be started up (ping loop) and
returns the MJFS URL to the Redirector</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">8.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>The Redirector forwards the createService call to the MJFS unmodified and
mutual authentication/authorization can take place</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">9.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>MJFS creates a new Managed Job Service (MJS)</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">10.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;
</span>MJS submits the job into a back-end scheduling system</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">11.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;
</span>Subsequent calls to the MJS from the client will be redirected through
the Redirector</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">12.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;
</span>RIPS providing data to the MJS instances and Master.&nbsp; It gathers
data from the local scheduling system, file system, host info, ...</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">13.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;
</span>FindServiceData requests to the Master will result in either an SDE
returned (populated by the Service Data
Aggregate) or redirected to the MJFS of the requestor’s UHE</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">14.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;
</span>In order to stream stdout/stderr back to the client, the MJS creates 2
File Stream Factory Services (FSFS), one for stdout and one for stderr</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">15.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;
</span>The MJS then creates the File Stream Services (FSS) instances as
specified in the job request</font></p>
<p class="MsoNormal" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:.5in;text-indent:-.25in;mso-list:l2 level1 lfo5;tab-stops:list .5in"><font face="Verdana">16.<span style="font-style: normal; font-variant: normal; font-weight: normal; font-size: 7.0pt">&nbsp;
</span>The grim handler is run in the UHE to create a user host certificate.<span style="mso-spacerun: yes">&nbsp;
</span>The user host certificate is used for mutual authentication between the
MJS service and the client.</font></p>
<p><font face="Verdana">&nbsp;</font></p>
<p><b><font face="Verdana">Virtual Host Environment Redirector</font></b></p>
<p><font face="Verdana">It accepts all incoming soap messages and redirects them
to the User Host Environment.&nbsp; This component is part of Core.<span style="mso-spacerun:
yes">&nbsp; </span>See core documentation for details.</font></p>
<p><b><font face="Verdana">Starter UHE</font></b></p>
<p><font face="Verdana">This java class is used by the Redirector to resolve the
incoming calls to a user hosting environment. The gridmap file is used to obtain
the username corresponding to a particular subject DN and one UHE is run per
user on a machine.<br>
<br>
Mapping from the username to the port number of the UHE for that particular user
is maintained in a configuration file.<br>
<br>
When a request to resolve a URL comes in and an entry is found in the
configuration file, the target URL is constructed and returned to the
Redirector.&nbsp; If the UHE on that port number is not up, the setuid/launch
module is used to launch a UHE as the user.<br>
<br>
If an entry does not exist in the configuration file, a free port number is
chosen, the setuid/launch module is used to start up a UHE on the particular
port number as the user and the local URL is returned to the proxy, after
ensuring the UHE is running.&nbsp; The configuration file is also updated with
this entry.&nbsp;</font></p>
<p><b><font face="Verdana">LAUNCH UHE</font></b></p>
<p><font face="Verdana">A simple java class that is used to call a C program in
order to start a new hosting environment under the user's account.&nbsp; The
setuid C program does an su/fork/exec of a shell script which starts the UHE.&nbsp;
The C program needs to be &quot;setuid&quot; root.&nbsp; The path to the
launchScript.sh script is determined when the C program is compiled.&nbsp; This
limits the root exposure to starting up a new hosting environment as a user.</font></p>
<p><b><font face="Verdana">Master</font></b></p>
<p><font face="Verdana">The Master Managed Job Factory Service is responsible
for exposing the virtual GRAM service to the outside world.&nbsp; It configures
the Redirector to direct createService calls sent to it through the Startup UHE,
and launch UHE in order to eventually end up unmodified to the MJFS.&nbsp; The Redirector is
instructed to redirect subsequent createService calls sent to it to a user’s
hosting environment.</font></p>
<p><font face="Verdana">The
Master uses the Service Data Aggregator to collect and populate local Service
Data Elements which represent </font><font face="Verdana">local scheduler
data (e.g. freenodes, totalnodes) and general host information (e.g. host cpu
type, host OS).&nbsp; If the FSD request is for any known MJFS SDE, then is it
redirected to he MJFS of the UHE.&nbsp; All other FSD queries are handled
locally.</font></p>
<p><b><font face="Verdana">Managed Job Factory Service (MJFS)</font></b></p>
<p><font face="Verdana">The Managed Job Factory Service is responsible for
instantiating a new MJS when it receives a CreateService request.<span style="mso-spacerun: yes">&nbsp;
</span>It also exposes a single Service Data Element which is an array of Grid
Service Handles of all active MJS instances created by this factory.<span style="mso-spacerun: yes">&nbsp;
</span>The MJFS
stays up for the life of the UHE.</font></p>
<p><b><font face="Verdana">Managed Job Service (MJS)</font></b></p>
<p><font face="Verdana">An OGSA service that given a job request specification
can submit a job to a local scheduler, monitor its status and send notification.&nbsp;
The MJS will start two File Streaming Factory Service (FSFS), one for the job's
stdout and one for the job’s stderr.&nbsp; The MJS starts the initial set of
FSS instances as specified in the job specification.&nbsp; The FSFS's Grid
Service Handles (GSH) are available in the SDE of the MJS, which will enable the
client to start additional FSS instances of stdout/err or terminate existing FSS
instances.<span style="mso-spacerun: yes">&nbsp; </span>The MJS destroys the
stdout and stderr File Stream Factories during it’s preDestroy operation.</font></p>
<p><b><font face="Verdana">File Stream Factory Service (FSFS)</font></b></p>
<p><font face="Verdana">The File Stream Factory Service is responsible for
instantiating a new File Stream Service instances when it receives a
CreateService request.<span style="mso-spacerun: yes">&nbsp; </span>It exposes a
single SDE, which is an array of Grid Service Handles of all FSS instances
created by this factory.</font></p>
<p><b><font face="Verdana">File Stream Service (FSS)</font></b></p>
<p><font face="Verdana">An OGSA service that given a destination URL will stream
from the local file the factory was created to stream (stdout or stderr) to the
destination URL.<b><o:p>
</o:p>
</b></font></p>
<p><b><font face="Verdana">RIPS</font></b></p>
<p><font face="Verdana">RIPS is a specialized notification service providing raw data about a
resources scheduling system, file system, host system, etc.&nbsp; Some of the
data may be privileged.&nbsp; The MJS instances will subscribe to RIPS for
notification on job state changes.&nbsp; The Master will subscribe for data
about the local scheduler (e.g free / total nodes), file system and host system
information.</font></p>

</body>

</html>
